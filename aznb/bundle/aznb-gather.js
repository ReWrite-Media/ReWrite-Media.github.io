webpackJsonpAzureNotebooks([6],{1983:function(e,t,s){"use strict";var a=this&&this.__awaiter||function(e,t,s,a){return new(s||(s=Promise))(function(r,_){function n(e){try{o(a.next(e))}catch(t){_(t)}}function i(e){try{o(a.throw(e))}catch(t){_(t)}}function o(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s(function(e){e(t)})).then(n,i)}o((a=a.apply(e,t||[])).next())})},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const _=r(s(5653)),n=s(2410),i=r(s(5655));t.default=function(e,t,s){let r=0;return{name:n.ExtensionName,config:_.default,activate:_=>{const o=new i.default(_.commands.notebook,!1);r++,_.commands.registerCommand(n.LogExecutionCommand,o.logExecution),_.commands.registerCellCommand(n.GatherNotebookCommand,{ariaLabel:n.ButtonText,commandDisplayName:n.ButtonText,commandName:n.GatherNotebookCommand,commandDisabledDisplayMessage:"Run cell to enable Gather",iconName:"Gather",iconOnly:!1,handler:r=>{e(()=>a(this,void 0,void 0,function*(){s&&s();const e={id:r.cellId,text:r.cell.get("source",""),executionCount:r.cell.get("execution_count",0),hasError:!1},a=yield o.gatherNotebookAsync(e);t(a)}),n.GatherNotebookCommand)},isDisabled:e=>!o.hasBeenRun(e.cellId)})},deactivate:e=>{--r<=0&&i.default.disposeWorker()}}}},2205:function(e,t){},2216:function(e,t,s){"use strict";var a=this&&this.__extends||function(){var e=function(t,s){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(t,s)};return function(t,s){function a(){this.constructor=t}e(t,s),t.prototype=null===s?Object.create(s):(a.prototype=s.prototype,new a)}}();Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){for(var t=[],s=1;s<arguments.length;s++)t[s-1]=arguments[s];this.getIdentifier=e,this._items={},this.getIdentifier=e,this._items={},this.add.apply(this,t)}return Object.defineProperty(e.prototype,"size",{get:function(){return this.items.length},enumerable:!0,configurable:!0}),e.prototype.add=function(){for(var e=this,t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];t.forEach(function(t){return e._items[e.getIdentifier(t)]=t})},e.prototype.remove=function(e){this.has(e)&&delete this._items[this.getIdentifier(e)]},e.prototype.pop=function(){if(this.empty)throw"empty";var e=Object.keys(this._items)[0],t=this._items[e];return this.remove(t),t},e.prototype.has=function(e){return void 0!=this._items[this.getIdentifier(e)]},Object.defineProperty(e.prototype,"items",{get:function(){var e=this;return Object.keys(this._items).map(function(t){return e._items[t]})},enumerable:!0,configurable:!0}),e.prototype.equals=function(e){return this.size==e.size&&this.items.every(function(t){return e.has(t)})},Object.defineProperty(e.prototype,"empty",{get:function(){return 0==Object.keys(this._items).length},enumerable:!0,configurable:!0}),e.prototype.union=function(){for(var t,s=[],a=0;a<arguments.length;a++)s[a]=arguments[a];return new(e.bind.apply(e,[void 0,this.getIdentifier].concat((t=this.items).concat.apply(t,s.map(function(e){return e.items})))))},e.prototype.intersect=function(t){return new(e.bind.apply(e,[void 0,this.getIdentifier].concat(this.items.filter(function(e){return t.has(e)}))))},e.prototype.filter=function(t){return new(e.bind.apply(e,[void 0,this.getIdentifier].concat(this.items.filter(t))))},e.prototype.map=function(t,s){return new(e.bind.apply(e,[void 0,t].concat(this.items.map(s))))},e.prototype.mapSame=function(t){return new(e.bind.apply(e,[void 0,this.getIdentifier].concat(this.items.map(t))))},e.prototype.some=function(e){return this.items.some(e)},e.prototype.minus=function(t){return new(e.bind.apply(e,[void 0,this.getIdentifier].concat(this.items.filter(function(e){return!t.has(e)}))))},e.prototype.take=function(){if(this.empty)throw"cannot take from an empty set";var e=parseInt(Object.keys(this._items)[0]),t=this._items[e];return this.remove(t),t},e.prototype.product=function(t){var s=this;return new(e.bind.apply(e,[void 0,function(e){var a=e[0],r=e[1];return s.getIdentifier(a)+t.getIdentifier(r)}].concat(i.apply(void 0,this.items.map(function(e){return i(t.items.map(function(t){return[e,t]}))})))))},e}();t.Set=r;var _=function(e){function t(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];return e.apply(this,[function(e){return e}].concat(t))||this}return a(t,e),t}(r);t.StringSet=_;var n=function(e){function t(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];return e.apply(this,[function(e){return e.toString()}].concat(t))||this}return a(t,e),t}(r);function i(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return[].concat.apply([],e)}t.NumberSet=n,t.range=function(e,t){for(var s=[],a=e;a<t;a++)s.push(a);return new(n.bind.apply(n,[void 0].concat(s)))}},2217:function(e,t,s){"use strict";var a=this;Object.defineProperty(t,"__esModule",{value:!0});var r=s(5659),_=s(2288);r.parser.__proto__.lexer.lex=function(){for(var e=this.next();!e;)e=this.next();return e};var n=r.parser.yy,i=n.parseError;n.parseError=function(e,t){a.indents=[0],a.indent=0,a.dedents=0,a.brackets_count=0,i.call(a,e,t)},t.parse=function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),r.parse(e.replace(/\r/g,"")+"\n")},t.locationString=function(e){return""+e.path+e.last_line+":"+e.first_column+"-"+e.last_line+":"+e.last_column},t.locationContains=function(e,t){function s(e,t,s){return(e.first_line<t||e.first_line===t&&e.first_column<=s)&&(t<e.last_line||t===e.last_line&&s<=e.last_column)}return s(e,t.first_line,t.first_column)&&s(e,t.last_line,t.last_column)};function o(e){return[].concat.apply([],e)}t.MODULE="module",t.IMPORT="import",t.FROM="from",t.DECORATOR="decorator",t.DECORATE="decorate",t.DEF="def",t.PARAMETER="parameter",t.ASSIGN="assign",t.DEL="del",t.ASSERT="assert",t.PASS="pass",t.RETURN="return",t.YIELD="yield",t.RAISE="raise",t.BREAK="break",t.CONTINUE="continue",t.GLOBAL="global",t.NONLOCAL="nonlocal",t.IF="if",t.WHILE="while",t.ELSE="else",t.FOR="for",t.COMPFOR="comp_for",t.COMPIF="comp_if",t.TRY="try",t.WITH="with",t.CALL="call",t.ARG="arg",t.INDEX="index",t.SLICE="slice",t.DOT="dot",t.IFEXPR="ifexpr",t.LAMBDA="lambda",t.UNOP="unop",t.BINOP="binop",t.STARRED="starred",t.TUPLE="tuple",t.LIST="list",t.SET="set",t.DICT="dict",t.NAME="name",t.LITERAL="literal",t.CLASS="class",t.isEquivalent=function(e,t){return e&&t?_.printNode(e)===_.printNode(t):e===t},t.flatten=o,t.walk=function(e,s){return function e(s,a,r){if(!s)return console.error("Node undefined. Ancestors:",a),[];a.push(s),r&&r.onEnterNode&&r.onEnterNode(s,a);var _=[];switch(s.type){case t.MODULE:case t.DEF:_=s.code;break;case t.CLASS:_=(s.extends||[]).concat(s.code);break;case t.IF:_=[s.cond].concat(s.code).concat(s.elif?o(s.elif.map(function(e){return[e.cond].concat(e.code)})):[]).concat(s.else?[s.else]:[]);break;case t.ELSE:_=s.code;break;case t.WHILE:_=[s.cond].concat(s.code);break;case t.WITH:_=o(s.items.map(function(e){return[e.with,e.as]})).concat(s.code);break;case t.FOR:_=s.iter.concat(s.target).concat(s.code);break;case t.TRY:_=s.code.concat(o((s.excepts||[]).map(function(e){return(e.cond?[e.cond]:[]).concat(e.code)}))).concat(s.else||[]).concat(s.finally||[]);break;case t.ARG:_=[s.actual];break;case t.DECORATE:_=[s.def];break;case t.LAMBDA:_=[s.code];break;case t.CALL:_=[s.func].concat(s.args.map(function(e){return e.actual}));break;case t.IFEXPR:_=[s.test,s.then,s.else];break;case t.COMPFOR:_=s.for.concat([s.in]);break;case t.UNOP:_=[s.operand];break;case t.BINOP:_=[s.left,s.right];break;case t.STARRED:_=[s.value];break;case t.SET:_=s.entries.concat(s.comp_for?s.comp_for:[]);break;case t.LIST:case t.TUPLE:_=s.items;break;case t.DICT:_=o(s.entries.map(function(e){return[e.k,e.v]})).concat(s.comp_for?s.comp_for:[]);break;case t.ASSIGN:s.sources||console.log(s),_=s.sources.concat(s.targets);break;case t.DEL:_=s.targets;break;case t.ASSERT:_=[s.cond].concat(s.err?[s.err]:[]);break;case t.DOT:_=[s.value];break;case t.INDEX:_=[s.value].concat(s.args);break;case t.SLICE:_=(s.start?[s.start]:[]).concat(s.stop?[s.stop]:[]).concat(s.step?[s.step]:[]);break;case t.COMPFOR:_=s.for.concat([s.in]);break;case t.COMPIF:_=[s.test];break;case t.YIELD:_=s.value?s.value:[];break;case t.RETURN:_=s.values?s.values:[];break;case t.RAISE:_=s.err?[s.err]:[];break;case t.IFEXPR:_=[s.test,s.then,s.else]}var n=[s];_.some(function(e){return!e})&&console.log("BAD CHILDREN",s);var i=o(_.map(function(t){return e(t,a,r)}));return n=n.concat(i),r&&r.onExitNode&&r.onExitNode(s,a),a.pop(),n}(e,[],s)}},2288:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=", ";function r(e,t){var s=" ".repeat(4*t);switch(e.type){case"assert":return s+"assert "+c(e.cond);case"assign":return s+i(e.targets)+" "+(e.op||"=")+" "+i(e.sources);case"binop":return"("+c(e.left)+" "+e.op+" "+c(e.right)+")";case"break":return s+"break";case"call":return c(e.func)+"("+e.args.map(n)+")";case"class":return s+"class "+e.name+(e.extends?"("+i(e.extends)+")":"")+":"+o(e.code,t+1);case"comp_for":return s+"for "+i(e.for)+" in "+c(e.in);case"comp_if":return s+"if "+c(e.test);case"continue":return s+"continue";case"decorator":return"@"+e.decorator+(e.args?"("+i(e.args)+")":"");case"decorate":return s+o(e.decorators,t)+r(e.def,t);case"def":return s+"def "+e.name+"("+e.params.map(_).join(a)+"):"+o(e.code,t+1);case"del":return"del "+e.targets.map(c).join(a);case"dict":return"{"+e.entries.map(function(e){return e.k+":"+e.v})+"}";case"dot":return c(e.value)+"."+e.name;case"else":return s+"else:"+o(e.code,t+1);case"for":return s+"for "+i(e.target)+" in "+i(e.iter)+":"+o(e.code,t+1)+(e.else?o(e.else,t+1):"");case"from":return s+"from "+e.base+" import "+e.imports.map(function(e){return e.path+(e.alias?" as "+e.alias:"")}).join(a);case"global":return s+"global "+e.names.join(a);case"if":return s+"if "+c(e.cond)+":"+o(e.code,t+1)+(e.elif?e.elif.map(function(e){return s+"elif "+e.cond+":"+o(e.code,t+1)}):"")+(e.else?s+"else:"+o(e.else.code,t+1):"");case"ifexpr":return c(e.then)+" if "+c(e.test)+" else "+c(e.else);case"import":return s+"import "+e.names.map(function(e){return e.path+(e.alias?" as "+e.alias:"")}).join(a);case"index":return c(e.value)+"["+i(e.args)+"]";case"lambda":return"lambda "+e.args.map(_).join(a)+": "+c(e.code);case"list":return"["+e.items.map(function(e){return c(e)}).join(a)+"]";case"literal":return"string"===typeof e.value&&e.value.indexOf("\n")>=0?'""'+e.value+'""':e.value.toString();case"module":return o(e.code,t);case"name":return e.id;case"nonlocal":return s+"nonlocal "+e.names.join(a);case"raise":return s+"raise "+c(e.err);case"return":return s+"return "+(e.values?i(e.values):"");case"set":return"{"+i(e.entries)+"}";case"slice":return(e.start?c(e.start):"")+":"+(e.stop?c(e.stop):"")+(e.step?":"+c(e.step):"");case"starred":return"*"+c(e.value);case"try":return s+"try:"+o(e.code,t+1)+(e.excepts?e.excepts.map(function(e){return s+"except "+(e.cond?c(e.cond)+(e.name?" as "+e.name:""):"")+":"+o(e.code,t+1)}):"")+(e.else?s+"else:"+o(e.else,t+1):"")+(e.finally?s+"finally:"+o(e.finally,t+1):"");case"tuple":return"("+i(e.items)+")";case"unop":return e.op+"("+c(e.operand)+")";case"while":return s+"while "+c(e.cond)+":"+o(e.code,t+1);case"with":return s+"with "+e.items.map(function(e){return e.with+(e.as?" as "+e.as:"")}).join(a)+":"+o(e.code,t+1);case"yield":return s+"yield "+(e.from?c(e.from):"")+(e.value?i(e.value):"")}}function _(e){return(e.star?"*":"")+(e.starstar?"**":"")+e.name+(e.default_value?"="+c(e.default_value):"")+(e.anno?c(e.anno):"")}function n(e){return(e.kwargs?"**":"")+(e.varargs?"*":"")+(e.keyword?c(e.keyword)+"=":"")+c(e.actual)+(e.loop?" for "+e.loop.for+" in "+e.loop.in:"")}function i(e){return e.map(c).join(a)}function o(e,t){return e.map(function(e){return r(e,t)}).join(0===t?"\n\n":"\n")}function c(e){return r(e,0)}t.printNode=c},2410:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=s(5654);t.ExtensionName=a.extensionName,t.LogExecutionCommand="gather/log",t.GatherNotebookCommand="gather/toNotebook",t.MarkdownDescriptor='## Gathered Notebook\n\n This notebook was generated by an experimental feature called "Gather". The intent is that it contains only the code and cells required to produce the same results as the cell originally selected for gathering. Please note that the Python analysis is quite conservative, so if it is unsure whether a line of code is necessary for execution, it will err on the side of including it.\n\n**Please let us know if you are satisfied with what was gathered by [taking this survey](https://aka.ms/gathersurvey).**',t.ButtonText="Gather"},2411:function(e,t,s){"use strict";var a=this&&this.__assign||function(){return(a=Object.assign||function(e){for(var t,s=1,a=arguments.length;s<a;s++)for(var r in t=arguments[s])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var _=r(s(5660)),n=r(s(5661)),i=r(s(5662)),o=r(s(5663)),c=r(s(5664)),u=r(s(5665));t.getFunctionName=function(e){return"string"===typeof e?e:e.name},t.isFunctionSpec=function(e){return"string"!==typeof e};var l=function(){return function(e){this.elementType=e}}();t.ListType=l;var d=function(){return function(e){this.spec=e}}();t.ClassType=d,t.DefaultSpecs=a({},_,n,i,o,c,u)},2687:function(e,t,s){"use strict";var a=this&&this.__extends||function(){var e=function(t,s){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(t,s)};return function(t,s){function a(){this.constructor=t}e(t,s),t.prototype=null===s?Object.create(s):(a.prototype=s.prototype,new a)}}(),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var _=r(s(2217)),n=s(2216),i=s(2288),o=function(){function e(e,t,s,a){void 0===a&&(a=[]),this.id=e,this.hint=t,this.statements=s,this.loopVariables=a}return e.prototype.toString=function(){return"BLOCK "+this.id+" ("+this.hint+")\n"+this.statements.map(function(e){return e.location.first_line+": "+i.printNode(e)}).join("\n")},e}();t.Block=o;var c=function(e){function t(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];return e.apply(this,[function(e){return e.id.toString()}].concat(t))||this}return a(t,e),t}(n.Set),u=function(){function e(e,t,s){this.loopHead=e,this.loopExit=t,this.exceptionBlock=s}return e.prototype.forLoop=function(t,s){return new e(t,s,this.exceptionBlock)},e.prototype.forExcepts=function(t){return new e(this.loopHead,this.loopExit,t)},e}(),l=function(){function e(e){var t;if(this._blocks=[],this.globalId=0,this.successors=new n.Set(function(e){var t=e[0],s=e[1];return t.id+","+s.id}),this.loopVariables=[],this.postdominators=new m,!e)throw"argument undefined";var s=[];e.type==_.MODULE?s=Array.isArray(e.code)?e.code:[e.code]:e.type==_.DEF&&(s=Array.isArray(e.code)?e.code:[e.code]),t=this.makeCFG("entry",s,new u(null,null,this.makeBlock("exceptional exit"))),this.entry=t[0],this.exit=t[1]}return e.prototype.makeBlock=function(e,t){void 0===t&&(t=[]);var s=new o(this.globalId++,e,t);return this.loopVariables.length&&(s.loopVariables=this.loopVariables[this.loopVariables.length-1]),this._blocks.push(s),s},Object.defineProperty(e.prototype,"blocks",{get:function(){for(var e=[],t=new c(this.entry),s=function(){var s=t.take();e.push(s),a.successors.items.forEach(function(a){var r=a[0],_=a[1];r===s&&e.indexOf(_)<0&&t.add(_)})},a=this;t.size;)s();return e},enumerable:!0,configurable:!0}),e.prototype.getSuccessors=function(e){return this.successors.items.filter(function(t){var s=t[0];t[1];return s==e}).map(function(e){e[0];return e[1]})},e.prototype.getPredecessors=function(e){return this.successors.items.filter(function(t){t[0];return t[1]==e}).map(function(e){var t=e[0];e[1];return t})},e.prototype.print=function(){var e=this;console.log("CFG","ENTRY:",this.entry.id,"EXIT:",this.exit.id),this.blocks.forEach(function(t){console.log(t.toString()),t===e.exit?console.log("    EXIT"):console.log("    SUCC",e.getSuccessors(t).map(function(e){return e.id.toString()}).join(","))})},e.prototype.link=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var s=1;s<e.length;s++)this.successors.add([e[s-1],e[s]])},e.prototype.handleIf=function(e,t,s){var a=this,r=this.makeBlock("if cond",[e.cond]);e.code||console.log(e);var _=this.makeCFG("if body",e.code,s),n=_[0],i=_[1];this.link(t,r),this.link(r,n);var o=this.makeBlock("conditional join");this.link(i,o);var c=r;if(e.elif&&e.elif.forEach(function(e){var t=a.makeBlock("elif cond",[e.cond]);a.link(c,t);var r=a.makeCFG("elif body",e.code,s),_=r[0],n=r[1];a.link(t,_),a.link(n,o),c=t}),e.else){var u=e.else;if(u.code&&u.code.length){var l=this.makeBlock("else cond",[u]);this.link(c,l);var d=this.makeCFG("else body",u.code,s),m=d[0],p=d[1];this.link(l,m),this.link(p,o),c=l}}return this.link(c,o),o},e.prototype.handleWhile=function(e,t,s){var a=this.makeBlock("while loop head",[e.cond]);this.link(t,a);var r=this.makeBlock("while loop join");this.loopVariables.push([e.cond]);var _=this.makeCFG("while body",e.code,s.forLoop(a,r)),n=_[0],i=_[1];return this.loopVariables.pop(),this.link(a,n),this.link(i,a),this.link(a,r),r},e.prototype.handleFor=function(e,t,s){var a=this.makeBlock("for loop head",[{type:_.ASSIGN,op:void 0,sources:e.iter,targets:e.target,location:e.decl_location}]);this.link(t,a);var r=this.makeBlock("for loop join");this.loopVariables.push(e.target);var n=this.makeCFG("for body",e.code,s.forLoop(a,r)),i=n[0],o=n[1];return this.loopVariables.pop(),this.link(a,i),this.link(o,a),this.link(a,r),r},e.prototype.handleWith=function(e,t,s){var a=e.items.map(function(e){var t=e.with,s=e.as;return{type:_.ASSIGN,targets:[s],sources:[t],location:t.location}}),r=this.makeBlock("with",a);this.link(t,r);var n=this.makeCFG("with body",e.code,s),i=n[0],o=n[1];return this.link(r,i),o},e.prototype.handleTry=function(e,t,s){var a=this,r=this.makeBlock("try join"),_=s,n=[],i=void 0;if(e.excepts){i=this.makeBlock("handlers");var o=e.excepts.map(function(e){return a.makeCFG("handler body",e.code,s)});o.forEach(function(e){var t=e[0];e[1];return a.link(i,t)}),_=s.forExcepts(i),n=o.map(function(e){e[0];return e[1]})}var c=this.makeCFG("try body",e.code,_),u=c[0],l=c[1];this.link(t,u);var d=l;if(i&&this.link(l,i),e.else){var m=this.makeCFG("try else body",e.else,s),p=m[0],f=m[1];this.link(d,p),d=f}if(e.finally){var h=this.makeCFG("finally body",e.finally,s),g=h[0],y=h[1];this.link(d,g),this.link(y,r),n.forEach(function(e){return a.link(e,g)})}else n.forEach(function(e){return a.link(e,r)}),this.link(d,r);return r},e.prototype.makeCFG=function(e,t,s){var a=this;if(!e)throw"hint undefined";if(!t)throw"statements undefined";if(!s)throw"context undefined";var r=this.makeBlock(e),n=r;return t.forEach(function(e){switch(e.type){case _.IF:n=a.handleIf(e,n,s);break;case _.WHILE:n=a.handleWhile(e,n,s);break;case _.FOR:n=a.handleFor(e,n,s);break;case _.WITH:n=a.handleWith(e,n,s);break;case _.TRY:n=a.handleTry(e,n,s);break;case _.RAISE:return void a.link(n,s.exceptionBlock);case _.BREAK:return void a.link(n,s.loopExit);case _.CONTINUE:return void a.link(n,s.loopHead);case _.DEF:case _.CLASS:default:n.statements.push(e)}}),[r,n]},e.prototype.visitControlDependencies=function(e){var t=this.blocks;this.postdominators=this.findPostdominators(t),this.immediatePostdominators=this.getImmediatePostdominators(this.postdominators.items),this.reverseDominanceFrontiers=this.buildReverseDominanceFrontiers(t);for(var s=0,a=t;s<a.length;s++){var r=a[s];if(this.reverseDominanceFrontiers.hasOwnProperty(r.id))for(var _=0,n=this.reverseDominanceFrontiers[r.id].items;_<n.length;_++)for(var i=0,o=n[_].statements;i<o.length;i++)for(var c=o[i],u=0,l=r.statements;u<l.length;u++){e(c,l[u])}}},e.prototype.postdominatorExists=function(e,t){return this.postdominators.filter(function(s){return s.block==e&&s.postdominator==t}).size>0},e.prototype.getImmediatePostdominator=function(e){return this.immediatePostdominators.items.filter(function(t){return t.block==e})[0]},e.prototype.findPostdominators=function(e){for(var t=this,s={},a=0,r=e;a<r.length;a++){var _=r[a];s[_.id]=new m;for(var n=0,i=e;n<i.length;n++){var o=i[n],c=_.id==o.id?0:1/0;s[_.id].add(new d(c,_,o))}}var u=e.filter(function(e){return 0==t.getSuccessors(e).length})[0];s[u.id]=new m(new d(0,u,u));for(var l=!0;1==l;){l=!1;for(var p=function(e){if(e==u)return"continue";var t=s[e.id],a=f.getSuccessors(e),r=new(m.bind.apply(m,[void 0].concat([].concat.apply([],a.map(function(e){return s[e.id].items})).reduce(function(t,s){var a,r=t.findIndex(function(e){return e.p.postdominator==s.postdominator});return-1==r?(a={p:new d(s.distance+1,e,s.postdominator),count:0},t.push(a)):(a=t[r],t[r].p.distance=Math.min(t[r].p.distance,s.distance+1)),a.count++,t},[]).filter(function(e){return e.count==a.length}).map(function(e){return e.p}))));r.add(new d(0,e,e)),t.equals(r)||(s[e.id]=r,l=!0)},f=this,h=0,g=e;h<g.length;h++){p(_=g[h])}}var y=new m;return Object.keys(s).forEach(function(e){y=y.union(s[e])}),y},e.prototype.getImmediatePostdominators=function(e){var t=e.filter(function(e){return e.block!=e.postdominator}).reduce(function(e,t){return e.hasOwnProperty(t.block.id)||(e[t.block.id]=[]),e[t.block.id].push(t),e},{}),s=[];return Object.keys(t).forEach(function(e){s.push(t[e].sort(function(e,t){return e.distance-t.distance})[0])}),new(m.bind.apply(m,[void 0].concat(s)))},e.prototype.buildReverseDominanceFrontiers=function(e){for(var t={},s=function(e){var s=a.getSuccessors(e);if(s.length>1)for(var r=s,_=[],n=a.getImmediatePostdominator(e);r.length>0;){var i=r.pop();if(!a.postdominatorExists(e,i))t.hasOwnProperty(i.id)||(t[i.id]=new c),t[i.id].add(e),a.getImmediatePostdominator(i).postdominator!=n.postdominator&&a.getSuccessors(i).forEach(function(e){-1==_.indexOf(e)&&(_.push(e),r.push(e))})}},a=this,r=0,_=e;r<_.length;r++){s(_[r])}return t},e}();t.ControlFlowGraph=l;var d=function(){return function(e,t,s){this.distance=e,this.block=t,this.postdominator=s}}(),m=function(e){function t(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];return e.apply(this,[function(e){return e.block.id+","+e.postdominator.id}].concat(t))||this}return a(t,e),t}(n.Set)},2688:function(e,t,s){"use strict";var a=this&&this.__extends||function(){var e=function(t,s){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(t,s)};return function(t,s){function a(){this.constructor=t}e(t,s),t.prototype=null===s?Object.create(s):(a.prototype=s.prototype,new a)}}(),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var _,n,i=r(s(2217)),o=s(2687),c=s(2216),u=s(2411),l=s(5666),d=s(5667),m=s(2288),p=function(){function e(e,t,s){void 0===e&&(e=new h),void 0===t&&(t=new h),void 0===s&&(s=new h),this.DEFINITION=e,this.UPDATE=t,this.USE=s}return Object.defineProperty(e.prototype,"defs",{get:function(){return this.DEFINITION.union(this.UPDATE)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"uses",{get:function(){return this.UPDATE.union(this.USE)},enumerable:!0,configurable:!0}),e.prototype.union=function(t){return new e(this.DEFINITION.union(t.DEFINITION),this.UPDATE.union(t.UPDATE),this.USE.union(t.USE))},e.prototype.update=function(e){for(var t={USE:[_.UPDATE,_.DEFINITION],UPDATE:[_.DEFINITION],DEFINITION:[]},s={DEFINITION:[_.DEFINITION,_.UPDATE],UPDATE:[_.DEFINITION,_.UPDATE],USE:[]},a=function(a){for(var _=new h,n=0,i=t[a];n<i.length;n++){var o=i[n];_=_.union(e[o])}var c=r[a].filter(function(e){return _.items.some(function(t){return t.name==e.name&&-1!=s[t.level].indexOf(e.level)})});r[a]=r[a].minus(c).union(_)},r=this,n=0,i=Object.keys(_);n<i.length;n++){a(i[n])}},e.prototype.equals=function(e){return this.DEFINITION.equals(e.DEFINITION)&&this.UPDATE.equals(e.UPDATE)&&this.USE.equals(e.USE)},e.prototype.createFlowsFrom=function(e){for(var t=new h,s=new c.Set(R),a=0,r=Object.keys(_);a<r.length;a++)for(var n=r[a],i=0,o=this[n].items;i<o.length;i++)for(var u=o[i],l=0,d=e[n].items;l<d.length;l++){var m=d[l];m.name==u.name&&(t.add(u),s.add({fromNode:m.node,toNode:u.node,fromRef:m,toRef:u}))}return[s,t]},e}(),f=function(){function e(e){this._defUsesCache={},this._symbolTable=new l.SymbolTable(e||u.DefaultSpecs)}return e.prototype.getDefUseForStatement=function(e,t){var s=i.locationString(e.location),a=this._defUsesCache[s];if(a)return a;d.log("STATEMENT ",e.location.first_line,m.printNode(e));var r=this.getDefs(e,t);r.items.forEach(function(e){return d.log("  DEF "+e.name+" level="+e.level+" "+(e.inferredType?"(HAS TYPE)":"(no type)"))});var n=this.getUses(e);n.items.forEach(function(e){return d.log("  USE "+e.name+" leval="+e.level+" "+(e.inferredType?"(HAS TYPE)":"(no type)"))});var o=new p(r.filter(function(e){return e.level===_.DEFINITION}),r.filter(function(e){return e.level===_.UPDATE}),n);return this._defUsesCache[s]=o,o},e.prototype.analyze=function(e,t){var s=e.blocks.reverse(),a=new h,r=new c.Set(R),_=new Map(s.map(function(e){return[e.id,new p]}));for(t&&_.get(e.blocks[0].id).update(new p(t));s.length;){for(var n=s.pop(),i=_.get(n.id),o=e.getPredecessors(n).reduce(function(e,t){return e.union(_.get(t.id))},i),u=0,l=n.statements;u<l.length;u++){var m=l[u],f=this.getDefUseForStatement(m,o.defs),g=f.createFlowsFrom(o),y=g[0],b=g[1];d.log("  FLOWS "+y.items.map(function(e){return e.fromRef.name+": "+e.fromNode.location.first_line+" -> "+e.toNode.location.first_line}).join(", ")),r=r.union(y),a=a.union(f.uses).minus(b),o.update(f)}if(!i.equals(o)){_.set(n.id,o);for(var v=0,k=e.getSuccessors(n);v<k.length;v++){var w=k[v];s.indexOf(w)<0&&s.push(w)}}}return e.visitControlDependencies(function(e,t){return r.add({fromNode:e,toNode:t})}),d.log("  UNDEFINED "+a.items.map(function(e){return e.name}).join(",")),{dataflows:r,undefinedRefs:a}},e.prototype.getDefs=function(e,t){if(!e)return new h;var s=k(S,t,e,this._symbolTable).union(k(w,t,e,this._symbolTable));switch(e.type){case i.IMPORT:s=s.union(this.getImportDefs(e));break;case i.FROM:s=s.union(this.getFromImportDefs(e));break;case i.DEF:s=s.union(this.getFuncDefs(e,t));break;case i.CLASS:s=s.union(this.getClassDefs(e));break;case i.ASSIGN:s=s.union(this.getAssignDefs(e));break;case i.DEL:s=s.union(this.getDelDefs(e))}return s},e.prototype.getClassDefs=function(e){return new h({type:n.CLASS,level:_.DEFINITION,name:e.name,location:e.location,node:e})},e.prototype.getFuncDefs=function(e,t){return k(M,t,e,this._symbolTable),new h({type:n.FUNCTION,level:_.DEFINITION,name:e.name,location:e.location,node:e})},e.prototype.getAssignDefs=function(e){return new E(e,this._symbolTable).defs},e.prototype.getDelDefs=function(e){return new C(e,this._symbolTable).defs},e.prototype.getFromImportDefs=function(e){var t=this._symbolTable.importModuleDefinitions(e.base,e.imports);return new(h.bind.apply(h,[void 0].concat(t.map(function(t){return{type:n.IMPORT,level:_.DEFINITION,name:t,location:e.location,node:e}}))))},e.prototype.getImportDefs=function(e){var t=this;return e.names.forEach(function(e){t._symbolTable.importModule(e.path,e.alias)}),new(h.bind.apply(h,[void 0].concat(e.names.map(function(t){return{type:n.IMPORT,level:_.DEFINITION,name:t.alias||t.path,location:t.location,node:e}}))))},e.prototype.getUses=function(e){switch(e.type){case i.ASSIGN:return this.getAssignUses(e);case i.DEF:return this.getFuncDeclUses(e);case i.CLASS:return this.getClassDeclUses(e);default:return this.getNameUses(e)}},e.prototype.getNameUses=function(e){return new(h.bind.apply(h,[void 0].concat(b(e).items.map(function(t){var s=t[0];t[1];return{type:n.VARIABLE,level:_.USE,name:s,location:e.location,node:e}}))))},e.prototype.getClassDeclUses=function(e){var t=this,s=b(e.extends||[]).items.map(function(e){var t=e[0],s=e[1];return{type:n.CLASS,level:_.USE,name:t,location:s.location,node:s}});return e.code.reduce(function(e,s){return e.union(t.getUses(s))},new(h.bind.apply(h,[void 0].concat(s))))},e.prototype.getFuncDeclUses=function(e){var t=new o.ControlFlowGraph(e);return this.analyze(t,N(e)).undefinedRefs.filter(function(e){return e.level==_.USE})},e.prototype.getAssignUses=function(e){var t=b(e.targets),s=new(h.bind.apply(h,[void 0].concat(t.items.map(function(t){var s=t[0],a=t[1];return{type:n.VARIABLE,level:_.USE,name:s,location:a.location,node:e}})))),a=b(e.sources);return(new(h.bind.apply(h,[void 0].concat(a.items.map(function(t){var s=t[0],a=t[1];return{type:n.VARIABLE,level:_.USE,name:s,location:a.location,node:e}}))))).union(e.op?s:new h)},e}();t.DataflowAnalyzer=f,function(e){e.DEFINITION="DEFINITION",e.UPDATE="UPDATE",e.USE="USE"}(_=t.ReferenceType||(t.ReferenceType={})),function(e){e[e.VARIABLE=0]="VARIABLE",e[e.CLASS=1]="CLASS",e[e.FUNCTION=2]="FUNCTION",e[e.IMPORT=3]="IMPORT",e[e.MUTATION=4]="MUTATION",e[e.MAGIC=5]="MAGIC"}(n=t.SymbolType||(t.SymbolType={}));var h=function(e){function t(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];return e.apply(this,[function(e){return e.name+e.level+i.locationString(e.location)}].concat(t))||this}return a(t,e),t}(c.Set);function g(e){var t=e[0],s=e[1];return s.location||console.error("***",s),t+"@"+i.locationString(s.location)}t.RefSet=h,t.sameLocation=function(e,t){return e.first_column===t.first_column&&e.first_line===t.first_line&&e.last_column===t.last_column&&e.last_line===t.last_line};var y=function(e){function t(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];return e.apply(this,[g].concat(t))||this}return a(t,e),t}(c.Set);function b(e){var s;return Array.isArray(e)?(s=new y).union.apply(s,e.map(b)):new(y.bind.apply(y,[void 0].concat(i.walk(e).filter(function(e){return e.type===i.NAME}).map(function(e){return[e.id,e]}),i.walk(e).filter(function(e){return e.type===i.DOT&&e.value.type===i.DOT}).map(function(e){return[m.printNode(e.value),e.value]}),[[t.GlobalSyntheticVariable,e]])))}t.GlobalSyntheticVariable="$global";var v=function(){return function(e,t){this._statement=e,this.symbolTable=t,this.defs=new h}}();function k(e,t,s,a){var r=new e(s,a,t);return i.walk(s,r),r.defs}var w=function(e){function t(t,s){return e.call(this,t,s)||this}return a(t,e),t.prototype.onEnterNode=function(e){if(e.type==i.LITERAL){var t=e;if("string"==typeof t.value||t.value instanceof String){var s=t.value.match(/"defs: (.*)"/);if(s&&s.length>=2){var a=s[1].replace(/\\"/g,'"');try{for(var r=JSON.parse(a),o=0,c=r;o<c.length;o++){var u=c[o];this.defs.add({type:n.MAGIC,level:_.DEFINITION,name:u.name,location:{first_line:u.pos[0][0]+e.location.first_line,first_column:u.pos[0][1],last_line:u.pos[1][0]+e.location.first_line,last_column:u.pos[1][1]},node:this._statement})}}catch(l){}}}}},t}(v);function x(e){switch(e.type){case i.NAME:return e;case i.DOT:case i.INDEX:return x(e.value);case i.CALL:return e.func.type===i.DOT?x(e.func):void 0;default:return}}var S=function(e){function t(t,s,a){var r=e.call(this,t,s)||this;return r.variableDefs=a,r}return a(t,e),t.prototype.lookupCalledFunction=function(e){switch(e.type){case i.DOT:switch(e.value.type){case i.DOT:var t=m.printNode(e.value);return this.symbolTable.lookupModuleFunction(t,e.name);case i.NAME:var s=e.value.id,a=this.symbolTable.lookupModuleFunction(s,e.name);if(a)return a;var r=this.variableDefs.items.find(function(e){return e.name===s});if(r){var _=r.inferredType;if(_&&_ instanceof u.ClassType){var n=e.name;return _.spec.methods.find(function(e){return e.name===n})}}break;case i.LITERAL:return{name:e.name,updates:[]}}break;case i.NAME:return this.symbolTable.lookupFunction(e.id)}},t.prototype.onEnterNode=function(e,t){var s=this;if(e.type===i.CALL){var a=this.lookupCalledFunction(e.func);if(a)d.log("  - found spec for call "+m.printNode(e.func)+": updates="+JSON.stringify(a.updates)+" return="+a.returns),a.updates&&a.updates.length&&a.updates.forEach(function(t){var a="string"===typeof t?parseInt(t):t;if(isNaN(a))s.defs.add({type:n.MUTATION,level:_.UPDATE,name:t.toString(),location:e.location,node:s._statement});else{var r;if(0<a&&a-1<e.args.length){var o=e.args[a-1].actual;o.type===i.NAME&&(r=o.id)}else 0===a&&e.func.type===i.DOT&&e.func.value.type===i.NAME&&(r=e.func.value.id);r&&s.defs.add({type:n.MUTATION,level:_.UPDATE,name:r,location:e.location,node:s._statement})}});else if(d.log("  - no spec for call "+m.printNode(e.func)),e.args.forEach(function(t){var a=x(t.actual);a&&s.defs.add({type:n.MUTATION,level:_.UPDATE,name:a.id,location:e.location,node:s._statement})}),e.func.type===i.DOT){var r=x(e.func);r&&this.defs.add({type:n.MUTATION,level:_.UPDATE,name:r.id,location:e.location,node:this._statement})}}},t}(v),C=function(e){function t(t,s){var a=e.call(this,t,s)||this;if(t.targets)for(var r=0,_=t.targets;r<_.length;r++){var n=_[r];i.walk(n,a)}return a}return a(t,e),t.prototype.onEnterNode=function(e,t){if(e.type==i.NAME){if(t.length>1){var s=t[0];if(s.type===i.INDEX&&s.args.some(function(t){return t===e}))return}this.defs.add({type:n.VARIABLE,level:_.UPDATE,location:e.location,name:e.id,node:this._statement})}},t}(v),E=function(e){function t(t,s){var a=e.call(this,t,s)||this;if(a.isAugAssign=!!t.op,t.targets)for(var r=0,_=t.targets;r<_.length;r++){var n=_[r];i.walk(n,a)}for(var o=t.targets.slice(),c=0,l=t.sources;c<l.length;c++){var d=l[c];if(d.type===i.CALL){var m=s.lookupNode(d.func);if(!m)return a;if(m.returns&&m.returnsType instanceof u.ListType)for(var p=m.returnsType.elementType,f=0,h=o;f<h.length;f++){n=h[f];a.assignType(n,p)}else{n=o[0];o=o.slice(1),a.assignType(n,m.returnsType)}}}return a}return a(t,e),t.prototype.assignType=function(e,t){if(e&&e.type===i.NAME){var s=this.defs.items.find(function(t){return t.name===e.id});s&&(s.inferredType=t)}},t.prototype.onEnterNode=function(e,t){if(e.type==i.NAME){if(t.length>1){var s=t[0];if(s.type===i.INDEX&&s.args.some(function(t){return t===e}))return}var a=this.isAugAssign||t.some(function(e){return e.type==i.DOT||e.type==i.INDEX});this.defs.add({type:n.VARIABLE,level:a?_.UPDATE:_.DEFINITION,location:e.location,name:e.id,node:this._statement})}},t}(v),M=function(e){function t(t,s){var a=e.call(this,t,s)||this;a.def=t;var r=new o.ControlFlowGraph(t);return a.flows=(new f).analyze(r,N(t)).dataflows,a.flows=a.getTransitiveClosure(a.flows),a.symbolTable.functions[t.name]=a.spec={name:t.name,updates:[]},a}return a(t,e),t.prototype.getTransitiveClosure=function(e){var t=e.map(T,function(e){return e.fromNode}).union(e.map(T,function(e){return e.toNode})),s=new(c.Set.bind.apply(c.Set,[void 0,R].concat(e.items)));return t.items.forEach(function(a){return t.items.forEach(function(r){return t.items.forEach(function(t){e.has({fromNode:a,toNode:t})&&e.has({fromNode:t,toNode:r})&&s.add({fromNode:a,toNode:r})})})}),s},t.prototype.checkParameterFlow=function(e){var t=this;this.def.params.forEach(function(s,a){var r=t.isMethod?a:a+1;t.flows.has({fromNode:s,toNode:e})&&t.spec.updates.indexOf(r)<0&&t.spec.updates.push(r)})},t.prototype.onEnterNode=function(e,t){var s=this;switch(e.type){case i.ASSIGN:for(var a=0,r=e.targets;a<r.length;a++){var _=r[a];_.type===i.DOT?this.checkParameterFlow(e):_.type===i.INDEX&&this.checkParameterFlow(e)}break;case i.CALL:var n=this.symbolTable.lookupNode(e.func),o=e.args.map(function(e){return e.actual});this.def.params.forEach(function(t,a){var r=s.isMethod?a:a+1;if(n){var _=s.flows.filter(function(s){return s.fromNode===t&&s.toNode===e&&void 0!==s.toRef}),c=n.updates.filter(function(e){return"number"===typeof e});c.length>0&&!_.empty&&s.spec.updates.indexOf(r)<0&&_.items.forEach(function(t){c.find(function(e){return e>0&&i.walk(o[e-1]).find(function(e){return e.type===i.NAME&&e.id===t.toRef.name})})?s.spec.updates.push(r):c.indexOf(0)>=0&&e.func.type===i.DOT&&e.func.value.type===i.NAME&&e.func.value.id===t.toRef.name&&s.spec.updates.push(0)})}else s.spec.updates.push(r)})}},t}(v);function N(e){return new(h.bind.apply(h,[void 0].concat(e.params.map(function(e){return{name:e.name,level:_.DEFINITION,type:n.VARIABLE,location:e.location,node:e}}))))}function T(e){return""+i.locationString(e.location)}function R(e){return e.fromNode.location||console.error("*** FROM",e.fromNode,e.fromNode.location),e.toNode.location||console.error("*** TO",e.toNode,e.toNode.location),T(e.fromNode)+"->"+T(e.toNode)}},2689:function(e,t,s){"use strict";for(var a=[],r=0;r<256;++r)a[r]=(r+256).toString(16).substr(1);t.a=function(e,t){var s=t||0,r=a;return[r[e[s++]],r[e[s++]],r[e[s++]],r[e[s++]],"-",r[e[s++]],r[e[s++]],"-",r[e[s++]],r[e[s++]],"-",r[e[s++]],r[e[s++]],"-",r[e[s++]],r[e[s++]],r[e[s++]],r[e[s++]],r[e[s++]],r[e[s++]]].join("")}},3359:function(e,t,s){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(2410),_=a(s(5657));t.default=class{constructor(e){this.gatherProviderDictionary=new Map,this.postMessage=e}processMessage(e){const t=this.getGatherProvider(e.notebookId);switch(e.action){case r.LogExecutionCommand:t.logExecution(e);break;case r.GatherNotebookCommand:const s=t.gatherNotebook(e);this.postMessage({notebookId:e.notebookId,nb:s})}}getGatherProvider(e){return this.gatherProviderDictionary.has(e)||this.gatherProviderDictionary.set(e,new _.default),this.gatherProviderDictionary.get(e)}}},3360:function(e,t,s){"use strict";var a=this&&this.__extends||function(){var e=function(t,s){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(t,s)};return function(t,s){function a(){this.constructor=t}e(t,s),t.prototype=null===s?Object.create(s):(a.prototype=s.prototype,new a)}}();Object.defineProperty(t,"__esModule",{value:!0});var r=s(2217),_=s(2687),n=s(2688),i=s(2216);function o(e){return i.range(e.first_line,e.last_line+(e.last_column?1:0))}var c,u=function(e){function t(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];return e.apply(this,[function(e){return[e.first_line,e.first_column,e.last_line,e.last_column].toString()}].concat(t))||this}return a(t,e),t}(i.Set);function l(e,t){var s=t.first_line<e.first_line||t.first_line==e.first_line&&t.first_column<=e.first_column,a=t.last_line>e.last_line||t.last_line==e.last_line&&t.last_column>=e.last_column;return s&&a}function d(e,t,s,a,r,_){return(e>s||e==s&&t>=a)&&(e<r||e==r&&t<=_)}function m(e,t){return d(e.first_line,e.first_column,t.first_line,t.first_column,t.last_line,t.last_column)||d(e.last_line,e.last_column,t.first_line,t.first_column,t.last_line,t.last_column)||l(e,t)||l(t,e)}t.LocationSet=u,function(e){e[e.Forward=0]="Forward",e[e.Backward=1]="Backward"}(c=t.SliceDirection||(t.SliceDirection={})),t.slice=function(e,t,s,a){void 0===a&&(a=c.Backward),s=s||new n.DataflowAnalyzer;var i,o=new _.ControlFlowGraph(e),d=s.analyze(o),p=function(e){return!0},f=new u;if(t){var h=function(e,t){var s=new u;return e.items.forEach(function(e){for(var a=0,r=t.blocks;a<r.length;a++)for(var _=0,n=r[a].statements;_<n.length;_++){var i=n[_];m(e,i.location)&&s.add(i.location)}}),s}(t,o);p=function(e){return h.some(function(t){return m(t,e)})},f=new(u.bind.apply(u,[void 0].concat(h.items)))}do{i=f.size;for(var g=function(e){var t=a===c.Backward?[e.fromNode.location,e.toNode.location]:[e.toNode.location,e.fromNode.location],s=t[0],r=t[1];p(r)&&f.add(r),f.some(function(e){return l(r,e)})&&f.add(s)},y=0,b=d.dataflows.items;y<b.length;y++)g(b[y])}while(f.size>i);return d.undefinedRefs.some(function(e){return e.name!==n.GlobalSyntheticVariable})&&o.blocks.forEach(function(e){return e.statements.filter(function(e){return e.type===r.FROM&&e.imports.some(function(e){return"*"===e.path})}).forEach(function(e){return f.add(e.location)})}),f},t.sliceLines=function(e,t){var s,a=r.parse(e),i=new _.ControlFlowGraph(a),c=(new n.DataflowAnalyzer).analyze(i).dataflows;do{s=t.size;for(var u=0,l=c.items;u<l.length;u++){var d=l[u],m=o(d.fromNode.location),p=o(d.toNode.location),f=m;t.intersect(p).empty||(t=t.union(f))}}while(t.size>s);return t}},3361:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t,s){this.cell=e,this._slice=t,this.executionTime=s}return Object.defineProperty(e.prototype,"textSlice",{get:function(){return this.getTextSlice(!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"textSliceLines",{get:function(){return this.getTextSlice(!0)},enumerable:!0,configurable:!0}),e.prototype.getTextSlice=function(e){var t=this.slice.items,s=this.cell.text.split("\n");return t.sort(function(e,t){return e.first_line-t.first_line}).map(function(t){var a=s.slice(t.first_line-1,t.last_line+(t.last_column>0?0:-1));if(!e)if(t.last_line===t.first_line)a[0]=a[0].slice(t.first_column,t.last_column);else{a[0]=a[0].slice(t.first_column);var r=a.length-1;a[r]=a[r].slice(0,t.last_column)}return a.join("\n")}).filter(function(e){return""!=e}).join("\n")},Object.defineProperty(e.prototype,"slice",{get:function(){return this._slice},set:function(e){this._slice=e},enumerable:!0,configurable:!0}),e}();t.CellSlice=a},3362:function(e,t,s){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var r=a(s(2217)),_=s(2688),n=s(5669),i=s(2216),o=new n.MagicsRewriter,c=function(){return function(e){var t=this;this.cellToLineMap={},this.lineToCellMap={};var s=1;this.tree={code:[],type:r.MODULE,location:void 0},e.forEach(function(e){for(var a,_,n,o=e.cell,c=o.text.split("\n").length,l=[],d=0;d<c;d++)l.push(s+d);l.forEach(function(e){t.lineToCellMap[e]=o,t.cellToLineMap[o.executionEventId]||(t.cellToLineMap[o.executionEventId]=new i.NumberSet),t.cellToLineMap[o.executionEventId].add(e)}),s+=c,(a=t.tree.code).push.apply(a,(_=e.statements,n=Math.min.apply(Math,l)-1,_.map(function(e){for(var t=JSON.parse(JSON.stringify(e)),s=0,a=r.walk(t);s<a.length;s++){var _=a[s];_.location&&(_.location=u(_.location,n)),_.type==r.FOR&&(_.decl_location=u(_.decl_location,n))}return t})))}),this.text=e.map(function(e){return o.rewrite(e.cell.text+"\n")}).join(""),this.tree.location={first_line:1,first_column:0,last_line:s,last_column:0}}}();function u(e,t){return Object.assign({},e,{first_line:e.first_line+t,first_column:e.first_column,last_line:e.last_line+t,last_column:e.last_column})}t.Program=c;var l=function(){function e(e,t,s,a,r){this.cell=e,this.statements=t,this.defs=s,this.uses=a,this.hasError=r}return e.prototype.usesSomethingFrom=function(e){return this.uses.some(function(t){return e.defs.some(function(e){return t.name===e.name})})},e}();t.CellProgram=l;var d=function(){function e(e){this._dataflowAnalyzer=e,this._cellPrograms=[]}return e.prototype.add=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var s=0,a=e;s<a.length;s++){var n=a[s],i=[],c=void 0,u=void 0,d=n.hasError;try{var m=r.parse(o.rewrite(n.text)+"\n");i=m.code;for(var p=0,f=r.walk(m);p<f.length;p++){var h=f[p];h.hasOwnProperty("type")&&(h.location.path=n.executionEventId)}if(this._dataflowAnalyzer){c=[],u=[];for(var g=0,y=m.code;g<y.length;g++){var b=y[g],v=this._dataflowAnalyzer.getDefUseForStatement(b,new _.RefSet);c.push.apply(c,v.DEFINITION.union(v.UPDATE).items),u.push.apply(u,v.USE.items)}}else c=[],u=[]}catch(k){console.log("Couldn't analyze block",n.text,", error encountered, ",k,", not adding to programs."),d=!0}this._cellPrograms.push(new l(n,i,c,u,d))}},e.prototype.reset=function(){this._cellPrograms=[]},e.prototype.buildTo=function(e){var t,s=[];for(t=this._cellPrograms.length-1;t>=0&&this._cellPrograms[t].cell.executionEventId!==e;t--);s.unshift(this._cellPrograms[t]);var a=this._cellPrograms[t].cell.executionCount;for(t--;t>=0;t--){var r=this._cellPrograms[t],_=r.cell;if(_.executionCount>=a)break;r.hasError||s.unshift(r),a=_.executionCount}return new c(s)},e.prototype.buildFrom=function(e){var t=this.getCellProgram(e);if(!t)return null;var s=this._cellPrograms.findIndex(function(e){return e.cell.persistentId===t.cell.persistentId});return new c(this._cellPrograms.slice(s))},e.prototype.getCellProgram=function(e){var t=this._cellPrograms.filter(function(t){return t.cell.executionEventId==e});return t.length>=1?t.pop():null},e.prototype.getCellProgramsWithSameId=function(e){var t=this.getCellProgram(e);return this._cellPrograms.filter(function(e){return e.cell.persistentId===t.cell.persistentId})},e}();t.ProgramBuilder=d},3363:function(e,t,s){"use strict";t.a=function(){if(!a)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return a(r)};var a="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),r=new Uint8Array(16)},3364:function(e,t,s){"use strict";var a=s(2689);t.a=function(e,t,s){var r=function(e,r,_,n){var i=_&&n||0;if("string"==typeof e&&(e=function(e){e=unescape(encodeURIComponent(e));for(var t=new Array(e.length),s=0;s<e.length;s++)t[s]=e.charCodeAt(s);return t}(e)),"string"==typeof r&&(r=function(e){var t=[];return e.replace(/[a-fA-F0-9]{2}/g,function(e){t.push(parseInt(e,16))}),t}(r)),!Array.isArray(e))throw TypeError("value must be an array of bytes");if(!Array.isArray(r)||16!==r.length)throw TypeError("namespace must be uuid string or an Array of 16 byte values");var o=s(r.concat(e));if(o[6]=15&o[6]|t,o[8]=63&o[8]|128,_)for(var c=0;c<16;++c)_[i+c]=o[c];return _||Object(a.a)(o)};try{r.name=e}catch(_){}return r.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",r.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",r}},5653:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a={codeCell:{toolbarCommands:[s(2410).GatherNotebookCommand]}};t.default=a},5654:function(e,t){e.exports={extensionName:"Gather"}},5655:function(e,t,s){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(2410),_=a(s(5656));class n{constructor(e,t){this.onCellRun=(e=>{const t=this.notebook.cells.getSnapshot(e.cellId),s=this.ridMagicsAndShellFromSource(t.get("source",void 0)),a=t.get("execution_count",void 0);void 0!==s&&s.length>0&&void 0!==a?(this.ranCells.add(e.cellId),this.notebook.cells.setMetadata(e.cellId,"gather",{logged:Date.now()}),this.logExecution({id:e.cellId,text:s,executionCount:a,hasError:!1})):this.ranCells.has(e.cellId)&&this.ranCells.delete(e.cellId)}),this.logExecution=(e=>{const t=Object.assign(Object.assign({},e),{action:r.LogExecutionCommand,notebookId:this.notebook.getInstanceId()});n.gatherWorker.postMessage(t)}),this.gatherNotebookAsync=(e=>new Promise((t,s)=>{void 0===this.gatherPromiseResolve?(this.gatherPromiseResolve=t,this.sendGatherNotebookMessage(e)):s("Gather operation already in progress")})),this.onWorkerMessage=(e=>{this.processWorkerMessageData(e.data)}),this.processWorkerMessageData=(e=>{e.notebookId===this.notebook.getInstanceId()&&this.gatherPromiseResolve&&(this.gatherPromiseResolve(e.nb),this.gatherPromiseResolve=void 0)}),this.notebook=e,t||(void 0===n.gatherWorker&&(n.gatherWorker=new _.default),n.gatherWorker.addEventListener("message",this.processWorkerMessageData)),this.ranCells=new Set,e.cells.onRun(this.onCellRun)}static disposeWorker(){n.gatherWorker.terminate()}ridMagicsAndShellFromSource(e){if(e.trim().startsWith("%%"))return"";return e.split("\n").filter(e=>!e.startsWith("!")&&!e.startsWith("%")).join("\n")}hasBeenRun(e){return this.ranCells.has(e)}sendGatherNotebookMessage(e){const t={action:r.GatherNotebookCommand,id:e.id,pythonMajorVersion:this.getPythonMajorVersion(),descriptor:r.MarkdownDescriptor,notebookId:this.notebook.getInstanceId()};n.gatherWorker.postMessage(t)}getPythonMajorVersion(){var e;const t=JSON.parse(this.notebook.toJSONString()).metadata.language_info;return(null===(e=null===t||void 0===t?void 0:t.codemirror_mode)||void 0===e?void 0:e.version)||(null===t||void 0===t?void 0:t.version)||3}}t.default=n,n.gatherWorker=void 0},5656:function(e,t,s){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(s(3359));s(3359);t.default=class{constructor(){this.messageProcessor=new r.default(e=>{this.sendMessageToListeners(e)}),this.messageListeners=[]}addEventListener(e,t){if("message"!==e)throw new Error(`Event type '${e}' is not supported`);this.messageListeners.push(t)}sendMessageToListeners(e){this.messageListeners.forEach(t=>{t(e)})}postMessage(e){this.messageProcessor.processMessage(e)}terminate(){}}},5657:function(e,t,s){"use strict";var a=this&&this.__awaiter||function(e,t,s,a){return new(s||(s=Promise))(function(r,_){function n(e){try{o(a.next(e))}catch(t){_(t)}}function i(e){try{o(a.throw(e))}catch(t){_(t)}}function o(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s(function(e){e(t)})).then(n,i)}o((a=a.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const r=s(5658),_=s(5670),n=s(5671);t.default=class{constructor(){this.dataflowAnalyzer=new r.DataflowAnalyzer,this._executionSlicer=new r.ExecutionLogSlicer(this.dataflowAnalyzer)}logExecution(e){const t=this.createGatherCell(e.id,e.text,e.executionCount,e.hasError);this._executionSlicer.logExecution(t)}resetLog(){return a(this,void 0,void 0,function*(){this._executionSlicer.reset()})}gatherNotebook({id:e,pythonMajorVersion:t,descriptor:s}){const a=this._executionSlicer.sliceLatestExecution(e),r=_.translateToNotebook(a.cellSlices,t,s);return JSON.stringify(r)}createGatherCell(e,t,s,a){const r={text:t,executionCount:s,executionEventId:n.uuid(),persistentId:e,hasError:a},_=()=>Object.assign(Object.assign({},r),{deepCopy:_});return Object.assign(Object.assign({},r),{deepCopy:_})}}},5658:function(e,t,s){"use strict";function a(e){for(var s in e)t.hasOwnProperty(s)||(t[s]=e[s])}Object.defineProperty(t,"__esModule",{value:!0}),a(s(2216)),a(s(2217)),a(s(2687)),a(s(2688)),a(s(2288)),a(s(2411)),a(s(3360)),a(s(3361)),a(s(5668)),a(s(3362)),a(s(2411))},5659:function(e,t,s){(function(e,a){var r=function(){var e=function(e,t,s,a){for(s=s||{},a=e.length;a--;s[e[a]]=t);return s},t=[1,5],s=[1,57],a=[1,80],r=[1,31],_=[1,83],n=[1,60],i=[1,35],o=[1,36],c=[1,50],u=[1,51],l=[1,52],d=[1,53],m=[1,56],p=[1,55],f=[1,87],h=[1,44],g=[1,45],y=[1,46],b=[1,26],v=[1,27],k=[1,28],w=[1,29],x=[1,30],S=[1,63],C=[1,65],E=[1,74],M=[1,75],N=[1,76],T=[1,81],R=[1,82],P=[1,84],I=[1,88],z=[1,89],D=[1,90],L=[1,91],A=[1,92],$=[1,32],F=[1,61],O=[5,7,10,12,19,20,31,68,70,76,77,78,79,80,83,88,96,98,100,106,111,112,115,120,126,131,138,164,165,171,178,180,183,186,187,188,189,190,202,207],B=[7,39],j=[1,125],V=[19,202],q=[7,30,39,56,57,58,59,60,61,62,63,64,65,66,67],G=[1,141],U=[1,144],W=[1,145],K=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,112,179,181],X=[7,13,30,39],H=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,179,181],J=[1,152],Q=[1,159],Y=[1,157],Z=[1,158],ee=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,134,179,181],te=[1,161],se=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,134,137,179,181],ae=[1,171],re=[1,172],_e=[1,165],ne=[1,166],ie=[1,167],oe=[1,168],ce=[1,169],ue=[1,170],le=[1,173],de=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,113,134,137,138,142,143,144,145,146,147,148,179,181],me=[1,175],pe=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,113,134,137,138,142,143,144,145,146,147,148,151,179,181],fe=[1,177],he=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,113,134,137,138,142,143,144,145,146,147,148,151,154,179,181],ge=[1,179],ye=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,113,134,137,138,142,143,144,145,146,147,148,151,154,157,179,181],be=[1,181],ve=[1,182],ke=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,113,134,137,138,142,143,144,145,146,147,148,151,154,157,160,161,179,181],we=[1,184],xe=[1,185],Se=[7,13,22,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,113,134,137,138,142,143,144,145,146,147,148,151,154,157,160,161,164,165,179,181],Ce=[1,187],Ee=[1,188],Me=[1,189],Ne=[1,190],Te=[7,13,22,28,30,31,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,113,134,137,138,142,143,144,145,146,147,148,151,154,157,160,161,164,165,168,169,170,179,181],Re=[7,13,22,28,30,31,32,39,56,57,58,59,60,61,62,63,64,65,66,67,80,91,106,110,112,113,134,137,138,142,143,144,145,146,147,148,151,154,157,160,161,164,165,168,169,170,179,181],Pe=[1,197],Ie=[1,199],ze=[1,198],De=[7,12,13,22,28,30,31,32,39,56,57,58,59,60,61,62,63,64,65,66,67,80,87,91,106,110,112,113,134,137,138,142,143,144,145,146,147,148,151,154,157,160,161,164,165,168,169,170,178,179,181],Le=[5,7,10,12,19,20,31,68,70,76,77,78,79,80,83,88,96,98,100,106,109,110,111,112,115,116,119,120,126,131,138,164,165,171,178,180,183,186,187,188,189,190,202,207],Ae=[7,39,113],$e=[1,224],Fe=[1,227],Oe=[22,28],Be=[12,20,88,131,138,164,165,171,178,180,183,186,187,188,189,190,207],je=[1,238],Ve=[1,240],qe=[7,13,22,30,39],Ge=[1,248],Ue=[7,28,39],We=[7,12,28,39,83,91],Ke=[1,251],Xe=[20,83],He=[12,20,88,164,165,171,178,180,183,186,187,188,189,190],Je=[1,290],Qe=[1,289],Ye=[1,295],Ze=[13,179],et=[1,303],tt=[1,322],st=[1,336],at=[1,334],rt=[1,335],_t=[1,356],nt=[1,359],it=[1,355],ot=[10,19,202],ct=[13,28],ut=[28,179],lt=[1,395],dt=[1,404],mt=[1,403],pt=[22,24],ft=[13,28,30],ht=[7,13,39],gt=[7,13,28,39],yt=[5,7,10,12,19,20,31,68,70,76,77,78,79,80,83,88,96,98,100,106,110,111,112,115,116,120,126,131,138,164,165,171,178,180,183,186,187,188,189,190,202,207],bt=[13,28,179,181],vt=[1,506],kt=[1,514],wt=[5,7,10,12,19,20,31,68,70,76,77,78,79,80,83,88,96,98,100,106,110,111,112,115,120,126,131,138,164,165,171,178,180,183,186,187,188,189,190,202,207],xt=[13,28,106,112,179,181],St={trace:function(){},yy:{},symbols_:{error:2,expressions:3,file_input:4,EOF:5,file_input0:6,NEWLINE:7,stmt:8,decorator:9,"@":10,dotted_name:11,"(":12,")":13,arglist:14,decorators:15,decorated:16,classdef:17,funcdef:18,def:19,NAME:20,parameters:21,":":22,suite:23,"->":24,test:25,typedargslist:26,typedarglist_part:27,",":28,tfpdef:29,"=":30,"*":31,"**":32,varargslist:33,varargspart:34,vfpdef:35,simple_stmt:36,compound_stmt:37,small_stmt:38,";":39,simple_stmt0:40,expr_stmt:41,del_stmt:42,pass_stmt:43,flow_stmt:44,import_stmt:45,global_stmt:46,nonlocal_stmt:47,assert_stmt:48,testlist_star_expr:49,augassign:50,yield_expr:51,testlist:52,assignlist:53,testlist_star_expr0:54,star_expr:55,"+=":56,"-=":57,"*=":58,"/=":59,"%=":60,"&=":61,"|=":62,"^=":63,"<<=":64,">>=":65,"**=":66,"//=":67,del:68,exprlist:69,pass:70,break_stmt:71,continue_stmt:72,return_stmt:73,raise_stmt:74,yield_stmt:75,break:76,continue:77,return:78,raise:79,from:80,import_name:81,import_from:82,import:83,dotted_as_names:84,import_from_tail:85,import_from0:86,".":87,ELLIPSIS:88,import_as_names:89,import_as_name:90,as:91,dotted_as_name:92,import_as_names0:93,dotted_as_names0:94,dotted_name0:95,global:96,global_stmt0:97,nonlocal:98,nonlocal_stmt0:99,assert:100,if_stmt:101,while_stmt:102,for_stmt:103,try_stmt:104,with_stmt:105,if:106,else_part:107,if_stmt0:108,elif:109,else:110,while:111,for:112,in:113,colon:114,try:115,finally:116,try_excepts:117,except_clause:118,except:119,with:120,with_item:121,with_stmt0:122,expr:123,INDENT:124,suite0:125,DEDENT:126,or_test:127,lambdef:128,test_nocond:129,lambdef_nocond:130,lambda:131,and_test:132,or_test0:133,or:134,not_test:135,and_test0:136,and:137,not:138,comparison:139,comparison0:140,comp_op:141,"<":142,">":143,"==":144,">=":145,"<=":146,"!=":147,is:148,xor_expr:149,expr0:150,"|":151,and_expr:152,xor_expr0:153,"^":154,shift_expr:155,and_expr0:156,"&":157,arith_expr:158,shift_expr0:159,"<<":160,">>":161,term:162,arith_expr0:163,"+":164,"-":165,factor:166,term0:167,"/":168,"%":169,"//":170,"~":171,power:172,atom_expr:173,trailer_list:174,trailer:175,atom:176,testlist_comp:177,"[":178,"]":179,"{":180,"}":181,dictorsetmaker:182,NUMBER:183,string:184,bytes:185,None:186,True:187,False:188,STRING:189,BYTES:190,testlist_comp_tail:191,comp_for:192,testlist_comp_tail0:193,subscriptlist:194,subscript:195,subscriptlist0:196,sliceop:197,exprlist0:198,testlist0:199,dictmaker:200,setmaker:201,class:202,argument:203,arglist0:204,comp_iter:205,comp_if:206,yield:207,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",7:"NEWLINE",10:"@",12:"(",13:")",19:"def",20:"NAME",22:":",24:"->",28:",",30:"=",31:"*",32:"**",39:";",56:"+=",57:"-=",58:"*=",59:"/=",60:"%=",61:"&=",62:"|=",63:"^=",64:"<<=",65:">>=",66:"**=",67:"//=",68:"del",70:"pass",76:"break",77:"continue",78:"return",79:"raise",80:"from",83:"import",87:".",88:"ELLIPSIS",91:"as",96:"global",98:"nonlocal",100:"assert",106:"if",109:"elif",110:"else",111:"while",112:"for",113:"in",115:"try",116:"finally",119:"except",120:"with",124:"INDENT",126:"DEDENT",131:"lambda",134:"or",137:"and",138:"not",142:"<",143:">",144:"==",145:">=",146:"<=",147:"!=",148:"is",151:"|",154:"^",157:"&",160:"<<",161:">>",164:"+",165:"-",168:"/",169:"%",170:"//",171:"~",178:"[",179:"]",180:"{",181:"}",183:"NUMBER",186:"None",187:"True",188:"False",189:"STRING",190:"BYTES",202:"class",207:"yield"},productions_:[0,[3,1],[4,1],[4,2],[6,1],[6,1],[6,2],[6,2],[9,3],[9,5],[9,6],[15,1],[15,2],[16,2],[16,2],[18,5],[18,7],[21,2],[21,3],[26,1],[26,2],[26,3],[27,1],[27,3],[27,1],[27,2],[27,2],[29,1],[29,3],[33,1],[33,2],[33,3],[34,1],[34,3],[34,1],[34,2],[34,2],[35,1],[8,1],[8,1],[36,2],[36,3],[36,3],[40,2],[40,3],[40,3],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[41,1],[41,3],[41,3],[41,2],[53,2],[53,3],[53,2],[53,3],[49,1],[49,2],[49,2],[49,1],[49,2],[49,2],[54,2],[54,3],[54,3],[54,2],[54,3],[54,3],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[42,2],[43,1],[44,1],[44,1],[44,1],[44,1],[44,1],[71,1],[72,1],[73,1],[73,2],[75,1],[74,1],[74,2],[74,4],[45,1],[45,1],[81,2],[82,4],[82,5],[82,4],[86,1],[86,2],[86,1],[86,2],[85,1],[85,3],[85,1],[90,1],[90,3],[92,1],[92,3],[89,1],[89,2],[89,2],[93,2],[93,3],[93,3],[84,1],[84,2],[94,2],[94,3],[11,1],[11,2],[95,2],[95,3],[46,2],[46,3],[97,2],[97,3],[47,2],[47,3],[99,2],[99,3],[48,2],[48,4],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[101,4],[101,5],[101,5],[101,6],[108,4],[108,5],[107,3],[102,4],[102,7],[103,6],[103,9],[104,6],[104,4],[104,7],[104,7],[104,10],[117,3],[117,4],[118,1],[118,2],[118,4],[105,4],[105,5],[122,2],[122,3],[121,1],[121,3],[23,1],[23,4],[125,1],[125,2],[25,1],[25,5],[25,1],[129,1],[129,1],[128,3],[128,4],[130,3],[130,4],[127,1],[127,2],[133,2],[133,3],[132,1],[132,2],[136,2],[136,3],[135,2],[135,1],[139,1],[139,2],[140,2],[140,3],[141,1],[141,1],[141,1],[141,1],[141,1],[141,1],[141,1],[141,2],[141,1],[141,2],[55,2],[123,1],[123,2],[150,2],[150,3],[149,1],[149,2],[153,2],[153,3],[152,1],[152,2],[156,2],[156,3],[155,1],[155,2],[159,2],[159,3],[159,2],[159,3],[158,1],[158,2],[163,2],[163,3],[163,2],[163,3],[162,1],[162,2],[167,2],[167,3],[167,2],[167,3],[167,2],[167,3],[167,2],[167,3],[166,2],[166,2],[166,2],[166,1],[172,1],[172,3],[174,1],[174,2],[173,1],[173,2],[176,2],[176,3],[176,3],[176,2],[176,3],[176,2],[176,3],[176,1],[176,1],[176,1],[176,1],[176,1],[176,1],[176,1],[176,1],[184,1],[184,2],[185,1],[185,2],[114,1],[177,1],[177,2],[177,2],[177,1],[177,2],[177,2],[191,1],[191,1],[193,2],[193,3],[193,3],[193,2],[193,3],[193,3],[175,2],[175,3],[175,2],[175,3],[175,2],[194,1],[194,2],[194,2],[196,2],[196,3],[196,3],[195,1],[195,4],[195,3],[195,3],[195,2],[195,3],[195,2],[195,2],[195,1],[197,1],[197,2],[69,1],[69,2],[69,2],[69,1],[69,2],[69,2],[198,2],[198,3],[198,3],[198,2],[198,3],[198,3],[52,1],[52,2],[52,2],[199,2],[199,3],[199,3],[182,3],[182,4],[182,4],[182,4],[182,1],[182,2],[182,2],[182,2],[200,4],[200,5],[200,5],[201,2],[201,3],[201,3],[17,4],[17,6],[17,7],[14,1],[14,2],[14,2],[204,2],[204,3],[204,3],[203,1],[203,2],[203,3],[203,2],[203,2],[205,1],[205,1],[192,4],[192,5],[206,2],[206,3],[51,1],[51,3],[51,2]],performAction:function(e,t,s,a,r,_,n){var i=_.length-1;switch(r){case 1:return _[i];case 2:this.$={type:"module",code:[],location:this._$};break;case 3:this.$={type:"module",code:_[i-1],location:this._$};break;case 5:case 6:case 38:case 177:case 179:case 314:this.$=_[i];break;case 7:case 180:this.$=_[i-1].concat(_[i]);break;case 8:this.$={type:"decorator",decorator:_[i-1],location:this._$};break;case 9:this.$={type:"decorator",decorator:_[i-3],args:"()",location:this._$};break;case 10:this.$={type:"decorator",decorator:_[i-4],args:_[i-2],location:this._$};break;case 11:case 19:case 43:case 62:case 65:case 68:case 71:case 118:case 121:case 124:case 126:case 173:case 279:case 282:case 287:case 290:case 298:case 301:case 327:case 330:case 344:case 350:case 353:this.$=[_[i]];break;case 12:case 45:case 64:case 67:case 70:case 73:case 120:case 123:case 125:case 127:case 174:case 281:case 284:case 289:case 292:case 300:case 303:case 329:case 332:case 346:case 352:case 355:this.$=[_[i-1]].concat(_[i]);break;case 13:case 14:this.$={type:"decorate",decorators:_[i-1],def:_[i],location:this._$};break;case 15:this.$={type:"def",name:_[i-3],params:_[i-2],code:_[i],location:this._$};break;case 16:this.$={type:"def",name:_[i-5],params:_[i-4],code:_[i],annot:_[i-2],location:this._$};break;case 17:this.$=[];break;case 18:case 112:case 178:this.$=_[i-1];break;case 20:case 44:case 63:case 66:case 69:case 72:case 119:case 122:case 280:case 283:case 288:case 291:case 299:case 302:case 328:case 331:case 345:case 351:case 354:this.$=[_[i-1]];break;case 21:this.$=[_[i-2]].concat(_[i]);break;case 23:_[i-2].default=_[i],this.$=_[i-2];break;case 24:this.$={name:"",star:!0,location:this._$};break;case 25:this.$={name:_[i],star:!0,location:this._$};break;case 26:this.$={name:_[i],starstar:!0,location:this._$};break;case 27:this.$={type:"parameter",name:_[i],location:this._$};break;case 28:this.$={type:"parameter",name:_[i-2],anno:_[i],location:this._$};break;case 29:case 39:case 134:case 138:case 315:case 318:case 321:case 324:this.$=[_[i]];break;case 30:case 40:case 316:case 319:case 322:case 325:this.$=[_[i-1]];break;case 31:this.$=[_[i-2]].concat(_[i]);break;case 32:this.$=[{type:"parameter",name:_[i],location:this._$}];break;case 33:this.$=[{type:"parameter",name:_[i-2],default_value:_[i],location:this._$}];break;case 34:this.$=[{name:"",star:!0,location:this._$}];break;case 35:this.$=[{name:_[i],star:!0,location:this._$}];break;case 36:this.$=[{name:_[i],starstar:!0,location:this._$}];break;case 41:this.$=[_[i-2]];break;case 42:this.$=[_[i-2]].concat(_[i-1]);break;case 54:this.$=1==_[i].length?_[i][0]:{type:"tuple",items:_[i],location:this._$};break;case 55:case 56:this.$={type:"assign",op:_[i-1],targets:_[i-2],sources:_[i],location:this._$};break;case 57:this.$={type:"assign",targets:_[i-1].concat(_[i].targets),sources:_[i].sources,location:this._$};break;case 58:this.$={targets:[],sources:[_[i]]};break;case 59:this.$={targets:_[i],sources:[_[i-1]]};break;case 60:this.$={targets:[],sources:_[i]};break;case 61:this.$={targets:_[i-1].concat(_[i].targets),sources:_[i].sources};break;case 86:this.$={type:"del",targets:_[i],location:this._$};break;case 87:this.$={type:"pass",location:this._$};break;case 93:this.$={type:"break",location:this._$};break;case 94:this.$={type:"continue",location:this._$};break;case 95:this.$={type:"return",location:this._$};break;case 96:this.$={type:"return",values:_[i],location:this._$};break;case 98:this.$={type:"raise",location:this._$};break;case 99:this.$={type:"raise",err:_[i],location:this._$};break;case 100:this.$={type:"raise",err:_[i-2],location:this._$};break;case 103:this.$={type:"import",names:_[i],location:this._$};break;case 104:case 106:this.$={type:"from",base:_[i-2],imports:_[i],location:this._$};break;case 105:this.$={type:"from",base:_[i-3]+_[i-2],imports:_[i],location:this._$};break;case 108:case 110:case 129:case 130:case 275:case 277:this.$=_[i-1]+_[i];break;case 111:this.$=[{path:"*",location:this._$}];break;case 114:case 116:this.$={path:_[i],location:this._$};break;case 115:case 117:this.$={path:_[i-2],alias:_[i],location:this._$};break;case 131:this.$=_[i-2]+_[i-1]+_[i];break;case 132:this.$={type:"global",names:[_[i]],location:this._$};break;case 133:this.$={type:"global",names:_[i-1],location:this._$};break;case 135:case 139:case 317:case 323:this.$=[_[i-1]].concat(_[i]);break;case 136:this.$={type:"nonlocal",names:[_[i]],location:this._$};break;case 137:this.$={type:"nonlocal",names:_[i-1],location:this._$};break;case 140:this.$={type:"assert",cond:_[i],location:this._$};break;case 141:this.$={type:"assert",cond:_[i-2],err:_[i],location:this._$};break;case 150:this.$={type:"if",cond:_[i-2],code:_[i],location:this._$};break;case 151:this.$={type:"if",cond:_[i-3],code:_[i-1],else:_[i],location:this._$};break;case 152:this.$={type:"if",cond:_[i-3],code:_[i-1],elif:_[i],location:this._$};break;case 153:this.$={type:"if",cond:_[i-4],code:_[i-2],elif:_[i-1],else:_[i],location:this._$};break;case 154:this.$=[{cond:_[i-2],code:_[i]}];break;case 155:this.$=[{cond:_[i-3],code:_[i-1]}].concat(_[i]);break;case 156:this.$={type:"else",code:_[i],location:this._$};break;case 157:this.$={type:"while",cond:_[i-2],code:_[i],location:this._$};break;case 158:this.$={type:"while",cond:_[i-5],code:_[i-3],else:_[i],location:this._$};break;case 159:this.$={type:"for",target:_[i-4],iter:_[i-2],code:_[i],location:this._$,decl_location:{first_line:this._$.first_line,first_column:this._$.first_column,last_line:_[i-1].location.last_line,last_column:_[i-1].location.last_column}};break;case 160:this.$={type:"for",target:_[i-7],iter:_[i-5],code:_[i-3],else:_[i],location:this._$,decl_location:{first_line:this._$.first_line,first_column:this._$.first_column,last_line:_[i-4].location.last_line,last_column:_[i-4].location.last_column}};break;case 161:this.$={type:"try",code:_[i-3],finally:_[i],location:this._$};break;case 162:this.$={type:"try",code:_[i-1],excepts:_[i],location:this._$};break;case 163:this.$={type:"try",code:_[i-4],excepts:_[i-3],finally:_[i],location:this._$};break;case 164:this.$={type:"try",code:_[i-4],excepts:_[i-3],else:_[i],location:this._$};break;case 165:this.$={type:"try",code:_[i-7],excepts:_[i-6],else:_[i-3],finally:_[i],location:this._$};break;case 166:_[i-2].code=_[i],this.$=[_[i-2]];break;case 167:_[i-3].code=_[i-1],this.$=[_[i-3]].concat(_[i]);break;case 168:this.$={cond:null};break;case 169:this.$={cond:_[i]};break;case 170:this.$={cond:_[i-2],name:_[i]};break;case 171:this.$={type:"with",items:[_[i-2]],code:_[i],location:this._$};break;case 172:_[i-3]=[_[i-3]].concat(_[i-2]),this.$={type:"with",items:_[i-3],code:_[i],location:this._$};break;case 175:this.$={with:_[i],as:_[i]};break;case 176:this.$={with:_[i-2],as:_[i]};break;case 182:this.$={type:"ifexpr",test:_[i-2],then:_[i-4],else:_[i],location:this._$};break;case 186:this.$={type:"lambda",args:[],code:_[i],location:this._$};break;case 187:this.$={type:"lambda",args:_[i-2],code:_[i-1],location:this._$};break;case 191:case 195:case 201:case 216:case 220:case 224:case 228:case 234:case 240:this.$=_[i](_[i-1]);break;case 192:case 196:loc=this._$,this.$=function(e){return{type:"binop",op:_[i-1],left:e,right:_[i],location:loc}};break;case 193:case 197:loc=this._$,this.$=function(e){return _[i]({type:"binop",op:_[i-2],left:e,right:_[i-1],location:loc})};break;case 198:this.$={type:"unop",op:_[i-1],operand:_[i],location:this._$};break;case 202:loc=this._$,this.$=function(e){return{type:"binop",op:_[i-1],left:e,right:_[i],location:loc}};break;case 203:loc=this._$,this.$=function(e){return _[i]({type:"binop",op:_[i-2],left:e,right:_[i-1],location:loc})};break;case 211:case 213:this.$=_[i-1]+_[i];break;case 214:this.$={type:"starred",value:_[i-1],location:this._$};break;case 217:case 221:case 225:case 229:case 231:case 235:case 237:case 241:case 243:case 245:case 247:loc=this._$,this.$=function(e){return{type:"binop",op:_[i-1],left:e,right:_[i],location:loc}};break;case 218:case 222:case 226:case 230:case 232:case 236:case 238:case 242:case 244:case 246:case 248:loc=this._$,this.$=function(e){return _[i]({type:"binop",op:_[i-2],left:e,right:_[i-1],location:loc})};break;case 249:case 250:case 251:this.$={type:"unop",op:_[i-1],operand:_[i],location:this._$};break;case 254:this.$={type:"binop",op:_[i-1],left:_[i-2],right:_[i],location:this._$};break;case 256:this.$=function(e){return _[i](_[i-1](e))};break;case 258:partial=_[i](_[i-1]),partial.location=this._$,this.$=partial;break;case 259:this.$={type:"tuple",items:[],location:this._$};break;case 260:this.$={type:"yieldexpr",value:_[i-1],location:this._$};break;case 261:this.$={type:"tuple",items:_[i-1],location:this._$};break;case 262:this.$={type:"list",items:[],location:this._$};break;case 263:this.$={type:"list",items:_[i-1],location:this._$};break;case 264:this.$={type:"dict",entries:[],location:this._$};break;case 265:this.$={type:_[i-1].type,entries:_[i-1].entries,comp_for:_[i-1].comp_for,location:this._$};break;case 266:this.$={type:"name",id:_[i],location:this._$};break;case 267:this.$={type:"literal",value:1*_[i],location:this._$};break;case 268:case 269:this.$={type:"literal",value:_[i],location:this._$};break;case 270:this.$={type:"literal",value:{type:"ellipsis"},location:this._$};break;case 271:this.$={type:"literal",value:"None",location:this._$};break;case 272:this.$={type:"literal",value:"True",location:this._$};break;case 273:this.$={type:"literal",value:"False",location:this._$};break;case 278:this.$={location:this._$};break;case 293:loc=this._$,this.$=function(e){return{type:"call",func:e,args:[],location:loc}};break;case 294:loc=this._$,this.$=function(e){return{type:"call",func:e,args:_[i-1],location:loc}};break;case 295:loc=this._$,this.$=function(e){return{type:"index",value:e,args:[],location:loc}};break;case 296:loc=this._$,this.$=function(e){return{type:"index",value:e,args:_[i-1],location:loc}};break;case 297:loc=this._$,this.$=function(e){return{type:"dot",value:e,name:_[i],location:loc}};break;case 305:this.$={type:"slice",start:_[i-3],stop:_[i-1],step:_[i],location:this._$};break;case 306:this.$={type:"slice",start:_[i-2],stop:_[i],location:this._$};break;case 307:this.$={type:"slice",start:_[i-2],step:_[i],location:this._$};break;case 308:this.$={type:"slice",start:_[i-1],location:this._$};break;case 309:this.$={type:"slice",stop:_[i-1],step:_[i],location:this._$};break;case 310:this.$={type:"slice",stop:_[i],location:this._$};break;case 311:this.$={type:"slice",step:_[i],location:this._$};break;case 312:this.$={type:"slice",location:this._$};break;case 313:this.$=void 0;break;case 320:case 326:this.$=_[i-1].concat(_[i]);break;case 333:this.$={type:"dict",entries:[{k:_[i-2],v:_[i]}],location:this._$};break;case 334:this.$={type:"dict",entries:[{k:_[i-3],v:_[i-1]}],location:this._$};break;case 335:this.$={type:"dict",entries:[{k:_[i-3],v:_[i-1]}],comp_for:_[i],location:this._$};break;case 336:this.$={type:"dict",entries:[{k:_[i-3],v:_[i-1]}].concat(_[i]),location:this._$};break;case 337:this.$={type:"set",entries:[_[i]],location:this._$};break;case 338:this.$={type:"set",entries:[_[i-1]],location:this._$};break;case 339:this.$={type:"set",entries:[_[i-1]],comp_for:_[i],location:this._$};break;case 340:this.$={type:"set",entries:[_[i-1]].concat(_[i]),location:this._$};break;case 341:this.$=[{k:_[i-2],v:_[i]}];break;case 342:this.$=[{k:_[i-3],v:_[i-1]}];break;case 343:this.$=[{k:_[i-3],v:_[i-1]}].concat(_[i]);break;case 347:this.$={type:"class",name:_[i-2],code:_[i],location:this._$};break;case 348:this.$={type:"class",name:_[i-4],code:_[i],location:this._$};break;case 349:this.$={type:"class",name:_[i-5],code:_[i],extends:_[i-3],location:this._$};break;case 356:this.$={type:"arg",actual:_[i],location:this._$};break;case 357:this.$={type:"arg",actual:_[i-1],loop:_[i],location:this._$};break;case 358:this.$={type:"arg",keyword:_[i-2],actual:_[i],location:this._$};break;case 359:this.$={type:"arg",kwargs:!0,actual:_[i],location:this._$};break;case 360:this.$={type:"arg",varargs:!0,actual:_[i],location:this._$};break;case 363:this.$=[{type:"comp_for",for:_[i-2],in:_[i],location:this._$}];break;case 364:this.$=[{type:"comp_for",for:_[i-3],in:_[i-1],location:this._$}].concat(_[i]);break;case 365:this.$=[{type:"comp_if",test:_[i],location:this._$}];break;case 366:this.$=[{type:"comp_if",test:_[i-1],location:this._$}].concat(_[i]);break;case 367:this.$={type:"yield",location:this._$};break;case 368:this.$={type:"yield",from:_[i],location:this._$};break;case 369:this.$={type:"yield",value:_[i],location:this._$}}},table:[{3:1,4:2,5:[1,3],6:4,7:t,8:6,9:47,10:s,12:a,15:33,16:17,17:16,18:15,19:r,20:_,25:48,31:n,36:7,37:8,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,101:10,102:11,103:12,104:13,105:14,106:b,111:v,112:k,115:w,120:x,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,202:$,207:F},{1:[3]},{1:[2,1]},{1:[2,2]},{5:[1,93]},{5:[2,4],6:94,7:t,8:6,9:47,10:s,12:a,15:33,16:17,17:16,18:15,19:r,20:_,25:48,31:n,36:7,37:8,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,101:10,102:11,103:12,104:13,105:14,106:b,111:v,112:k,115:w,120:x,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,202:$,207:F},{5:[2,5],6:95,7:t,8:6,9:47,10:s,12:a,15:33,16:17,17:16,18:15,19:r,20:_,25:48,31:n,36:7,37:8,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,101:10,102:11,103:12,104:13,105:14,106:b,111:v,112:k,115:w,120:x,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,202:$,207:F},e(O,[2,38]),e(O,[2,39]),{7:[1,96],39:[1,97],40:98},e(O,[2,142]),e(O,[2,143]),e(O,[2,144]),e(O,[2,145]),e(O,[2,146]),e(O,[2,147]),e(O,[2,148]),e(O,[2,149]),e(B,[2,46]),e(B,[2,47]),e(B,[2,48]),e(B,[2,49]),e(B,[2,50]),e(B,[2,51]),e(B,[2,52]),e(B,[2,53]),{12:a,20:_,25:99,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,25:100,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,31:n,55:103,69:101,88:f,123:102,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{22:[1,104]},{12:a,20:_,25:106,88:f,121:105,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{20:[1,107]},{20:[1,108]},{17:109,18:110,19:r,202:$},e(B,[2,54],{50:111,53:112,30:j,56:[1,113],57:[1,114],58:[1,115],59:[1,116],60:[1,117],61:[1,118],62:[1,119],63:[1,120],64:[1,121],65:[1,122],66:[1,123],67:[1,124]}),{12:a,20:_,31:n,55:103,69:126,88:f,123:102,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(B,[2,87]),e(B,[2,88]),e(B,[2,89]),e(B,[2,90]),e(B,[2,91]),e(B,[2,92]),e(B,[2,101]),e(B,[2,102]),{20:[1,127]},{20:[1,128]},{12:a,20:_,25:129,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(V,[2,11],{9:47,15:130,10:s}),e(q,[2,62],{54:132,28:[1,131]}),e(q,[2,65],{54:134,28:[1,133]}),e(B,[2,93]),e(B,[2,94]),e(B,[2,95],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,52:135,25:136,12:a,20:_,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(B,[2,98],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:137,12:a,20:_,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(B,[2,97]),{11:140,20:G,84:138,92:139},{11:142,20:G,86:143,87:U,88:W},{11:146,20:G},e(K,[2,181],{106:[1,147]}),e(K,[2,183]),{12:a,20:_,88:f,123:148,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(X,[2,367],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:136,52:150,12:a,20:_,80:[1,149],88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(H,[2,190],{133:151,134:J}),{20:Q,22:[1,153],31:Y,32:Z,33:154,34:155,35:156},e(ee,[2,194],{136:160,137:te}),{12:a,20:_,88:f,123:67,135:162,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(se,[2,199]),e(se,[2,200],{140:163,141:164,113:ae,138:re,142:_e,143:ne,144:ie,145:oe,146:ce,147:ue,148:le}),e(de,[2,215],{150:174,151:me}),e(pe,[2,219],{153:176,154:fe}),e(he,[2,223],{156:178,157:ge}),e(ye,[2,227],{159:180,160:be,161:ve}),e(ke,[2,233],{163:183,164:we,165:xe}),e(Se,[2,239],{167:186,31:Ce,168:Ee,169:Me,170:Ne}),{12:a,20:_,88:f,164:E,165:M,166:191,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,88:f,164:E,165:M,166:192,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,88:f,164:E,165:M,166:193,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(Te,[2,252]),e(Te,[2,253],{32:[1,194]}),e(Re,[2,257],{174:195,175:196,12:Pe,87:Ie,178:ze}),{12:a,13:[1,200],20:_,25:203,31:n,51:201,55:204,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,177:202,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{12:a,20:_,25:203,31:n,55:204,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,177:206,178:T,179:[1,205],180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,25:209,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,181:[1,207],182:208,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(De,[2,266]),e(De,[2,267]),e(De,[2,268]),e(De,[2,269]),e(De,[2,270]),e(De,[2,271]),e(De,[2,272]),e(De,[2,273]),e(De,[2,274],{184:210,189:L}),e(De,[2,276],{185:211,190:A}),{1:[2,3]},{5:[2,6]},{5:[2,7]},e(Le,[2,40]),{7:[1,212],12:a,20:_,25:48,31:n,38:213,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{7:[1,214]},{22:[1,215]},{22:[1,216]},{113:[1,217]},e(Ae,[2,315],{198:219,28:[1,218]}),e(Ae,[2,318],{198:221,28:[1,220]}),{7:$e,12:a,20:_,23:222,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{22:[1,225],28:Fe,122:226},e(Oe,[2,175],{91:[1,228]}),{12:[1,230],21:229},{12:[1,232],22:[1,231]},e(O,[2,13]),e(O,[2,14]),{12:a,20:_,25:136,51:233,52:234,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},e(B,[2,57]),e(Be,[2,74]),e(Be,[2,75]),e(Be,[2,76]),e(Be,[2,77]),e(Be,[2,78]),e(Be,[2,79]),e(Be,[2,80]),e(Be,[2,81]),e(Be,[2,82]),e(Be,[2,83]),e(Be,[2,84]),e(Be,[2,85]),{12:a,20:_,25:48,31:n,49:236,51:235,55:49,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},e(B,[2,86]),e(B,[2,132],{97:237,28:je}),e(B,[2,136],{99:239,28:Ve}),e(B,[2,140],{28:[1,241]}),e(V,[2,12]),e(q,[2,63],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:242,55:243,12:a,20:_,31:n,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(q,[2,64]),e(q,[2,66],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:242,55:243,12:a,20:_,31:n,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(q,[2,67]),e(B,[2,96]),e(qe,[2,327],{199:245,28:[1,244]}),e(B,[2,99],{80:[1,246]}),e(B,[2,103]),e(B,[2,124],{94:247,28:Ge}),e(Ue,[2,116],{91:[1,249]}),e(We,[2,128],{95:250,87:Ke}),{83:[1,252]},{11:253,20:G,83:[1,254]},e(Xe,[2,107],{86:255,87:U,88:W}),e(Xe,[2,109],{86:256,87:U,88:W}),{7:[1,257],12:[1,258]},{12:a,20:_,88:f,123:67,127:259,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e([7,13,28,30,39,56,57,58,59,60,61,62,63,64,65,66,67,112,113,179],[2,214]),{12:a,20:_,25:260,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(X,[2,369]),e(H,[2,191]),{12:a,20:_,88:f,123:67,132:261,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,25:262,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{22:[1,263]},{22:[2,29],28:[1,264]},e(Oe,[2,32],{30:[1,265]}),e(Oe,[2,34],{35:266,20:Q}),{20:Q,35:267},e([22,28,30],[2,37]),e(ee,[2,195]),{12:a,20:_,88:f,123:67,135:268,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(se,[2,198]),e(se,[2,201]),{12:a,20:_,88:f,123:269,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(He,[2,204]),e(He,[2,205]),e(He,[2,206]),e(He,[2,207]),e(He,[2,208]),e(He,[2,209]),e(He,[2,210]),{113:[1,270]},e(He,[2,212],{138:[1,271]}),e(de,[2,216]),{12:a,20:_,88:f,149:272,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(pe,[2,220]),{12:a,20:_,88:f,152:273,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(he,[2,224]),{12:a,20:_,88:f,155:274,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(ye,[2,228]),{12:a,20:_,88:f,158:275,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,88:f,158:276,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(ke,[2,234]),{12:a,20:_,88:f,162:277,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,88:f,162:278,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(Se,[2,240]),{12:a,20:_,88:f,164:E,165:M,166:279,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,88:f,164:E,165:M,166:280,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,88:f,164:E,165:M,166:281,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,88:f,164:E,165:M,166:282,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(Te,[2,249]),e(Te,[2,250]),e(Te,[2,251]),{12:a,20:_,88:f,164:E,165:M,166:283,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(Re,[2,258]),e(Re,[2,255],{175:196,174:284,12:Pe,87:Ie,178:ze}),{12:a,13:[1,285],14:286,20:_,25:288,31:Je,32:Qe,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,203:287},{12:a,20:_,22:Ye,25:294,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,179:[1,291],180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,194:292,195:293},{20:[1,296]},e(De,[2,259]),{13:[1,297]},{13:[1,298]},e(Ze,[2,279],{191:300,192:301,193:302,28:[1,299],112:et}),e(Ze,[2,282],{192:301,193:302,191:305,28:[1,304],112:et}),e(De,[2,262]),{179:[1,306]},e(De,[2,264]),{181:[1,307]},{22:[1,308],28:[1,309],112:et,181:[2,337],192:310,201:311},e(De,[2,275]),e(De,[2,277]),e(Le,[2,41]),{7:[2,43],39:[1,312],40:313},e(Le,[2,42]),{7:$e,12:a,20:_,23:314,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{7:$e,12:a,20:_,23:315,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{12:a,20:_,25:136,52:316,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(Ae,[2,316],{149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,123:317,55:318,12:a,20:_,31:n,88:f,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(Ae,[2,317]),e(Ae,[2,319],{149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,123:317,55:318,12:a,20:_,31:n,88:f,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(Ae,[2,320]),{116:[1,319],117:320,118:321,119:tt},e(Le,[2,177]),{124:[1,323]},{7:$e,12:a,20:_,23:324,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{22:[1,325]},{12:a,20:_,25:106,88:f,121:326,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,88:f,123:327,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{22:[1,328],24:[1,329]},{13:[1,330],20:st,26:331,27:332,29:333,31:at,32:rt},{7:$e,12:a,20:_,23:337,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{12:a,13:[1,338],14:339,20:_,25:288,31:Je,32:Qe,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,203:287},e(B,[2,55]),e(B,[2,56]),e(B,[2,58],{53:340,30:j}),e(B,[2,60],{53:341,30:j}),e(B,[2,133]),{20:[1,342]},e(B,[2,137]),{20:[1,343]},{12:a,20:_,25:344,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(q,[2,68],{54:346,28:[1,345]}),e(q,[2,71],{54:348,28:[1,347]}),e(qe,[2,328],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:349,12:a,20:_,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(qe,[2,329]),{12:a,20:_,25:350,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(B,[2,125]),{11:140,20:G,92:351},{20:[1,352]},e(We,[2,129]),{20:[1,353]},{12:_t,20:nt,31:it,85:354,89:357,90:358},{83:[1,360]},{12:_t,20:nt,31:it,85:361,89:357,90:358},e(Xe,[2,108]),e(Xe,[2,110]),e(ot,[2,8]),{12:a,13:[1,362],14:363,20:_,25:288,31:Je,32:Qe,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,203:287},{110:[1,364]},e(X,[2,368]),e(H,[2,192],{133:365,134:J}),e(K,[2,186]),{12:a,20:_,25:366,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{20:Q,22:[2,30],31:Y,32:Z,33:367,34:155,35:156},{12:a,20:_,25:368,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(Oe,[2,35]),e(Oe,[2,36]),e(ee,[2,196],{136:369,137:te}),e(se,[2,202],{141:164,140:370,113:ae,138:re,142:_e,143:ne,144:ie,145:oe,146:ce,147:ue,148:le}),e(He,[2,211]),e(He,[2,213]),e(de,[2,217],{150:371,151:me}),e(pe,[2,221],{153:372,154:fe}),e(he,[2,225],{156:373,157:ge}),e(ye,[2,229],{159:374,160:be,161:ve}),e(ye,[2,231],{159:375,160:be,161:ve}),e(ke,[2,235],{163:376,164:we,165:xe}),e(ke,[2,237],{163:377,164:we,165:xe}),e(Se,[2,241],{167:378,31:Ce,168:Ee,169:Me,170:Ne}),e(Se,[2,243],{167:379,31:Ce,168:Ee,169:Me,170:Ne}),e(Se,[2,245],{167:380,31:Ce,168:Ee,169:Me,170:Ne}),e(Se,[2,247],{167:381,31:Ce,168:Ee,169:Me,170:Ne}),e(Te,[2,254]),e(Re,[2,256]),e(De,[2,293]),{13:[1,382]},{13:[2,350],28:[1,383],204:384},e(ct,[2,356],{192:385,30:[1,386],112:et}),{12:a,20:_,25:387,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,25:388,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(De,[2,295]),{179:[1,389]},{28:[1,390],179:[2,298],196:391},e(ut,[2,304],{22:[1,392]}),e(ut,[2,312],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:393,197:394,12:a,20:_,22:lt,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(De,[2,297]),e(De,[2,260]),e(De,[2,261]),e(Ze,[2,280],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:396,55:397,12:a,20:_,31:n,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(Ze,[2,281]),e(Ze,[2,285]),e(Ze,[2,286]),{12:a,20:_,31:n,55:103,69:398,88:f,123:102,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(Ze,[2,283],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:396,55:397,12:a,20:_,31:n,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(Ze,[2,284]),e(De,[2,263]),e(De,[2,265]),{12:a,20:_,25:399,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,25:400,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,181:[2,338],183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{181:[2,339]},{181:[2,340]},{7:[2,44],12:a,20:_,25:48,31:n,38:213,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{7:[2,45]},e(O,[2,150],{107:401,108:402,109:dt,110:mt}),e(O,[2,157],{110:[1,405]}),{22:[1,407],114:406},e(Ae,[2,321],{198:409,28:[1,408]}),e(Ae,[2,324],{198:411,28:[1,410]}),{22:[1,412]},e(O,[2,162],{110:[1,414],116:[1,413]}),{22:[1,415]},{12:a,20:_,22:[2,168],25:416,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{8:418,9:47,10:s,12:a,15:33,16:17,17:16,18:15,19:r,20:_,25:48,31:n,36:7,37:8,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,101:10,102:11,103:12,104:13,105:14,106:b,111:v,112:k,115:w,120:x,123:67,125:417,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,202:$,207:F},e(O,[2,171]),{7:$e,12:a,20:_,23:419,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{22:[2,173],28:Fe,122:420},e(Oe,[2,176]),{7:$e,12:a,20:_,23:421,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{12:a,20:_,25:422,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(pt,[2,17]),{13:[1,423]},{13:[2,19],28:[1,424]},e(ct,[2,22],{30:[1,425]}),e(ct,[2,24],{29:426,20:st}),{20:st,29:427},e(ft,[2,27],{22:[1,428]}),e(O,[2,347]),{22:[1,429]},{13:[1,430]},e(B,[2,59]),e(B,[2,61]),e(B,[2,134],{97:431,28:je}),e(B,[2,138],{99:432,28:Ve}),e(B,[2,141]),e(q,[2,69],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:242,55:243,12:a,20:_,31:n,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(q,[2,70]),e(q,[2,72],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:242,55:243,12:a,20:_,31:n,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(q,[2,73]),e(qe,[2,330],{199:434,28:[1,433]}),e(B,[2,100]),e(B,[2,126],{94:435,28:Ge}),e(Ue,[2,117]),e(We,[2,130],{95:436,87:Ke}),e(B,[2,104]),e(B,[2,111]),{20:nt,89:437,90:358},e(B,[2,113]),e(ht,[2,118],{93:439,28:[1,438]}),e(gt,[2,114],{91:[1,440]}),{12:_t,20:nt,31:it,85:441,89:357,90:358},e(B,[2,106]),{7:[1,442]},{13:[1,443]},{12:a,20:_,25:444,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(H,[2,193]),e(K,[2,187]),{22:[2,31]},e(Oe,[2,33]),e(ee,[2,197]),e(se,[2,203]),e(de,[2,218]),e(pe,[2,222]),e(he,[2,226]),e(ye,[2,230]),e(ye,[2,232]),e(ke,[2,236]),e(ke,[2,238]),e(Se,[2,242]),e(Se,[2,244]),e(Se,[2,246]),e(Se,[2,248]),e(De,[2,294]),{12:a,13:[2,351],20:_,25:288,31:Je,32:Qe,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,203:445},{13:[2,352]},e(ct,[2,357]),{12:a,20:_,25:446,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(ct,[2,359]),e(ct,[2,360]),e(De,[2,296]),{12:a,20:_,22:Ye,25:294,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,179:[2,299],180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,195:447},{179:[2,300]},e(ut,[2,308],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:448,197:449,12:a,20:_,22:lt,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(ut,[2,310],{197:450,22:lt}),e(ut,[2,311]),e(ut,[2,313],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:451,12:a,20:_,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(Ze,[2,287],{193:453,28:[1,452]}),e(Ze,[2,290],{193:455,28:[1,454]}),{113:[1,456]},{28:[1,457],112:et,181:[2,333],192:458,200:459},{28:[1,460],181:[2,344],201:461},e(O,[2,151]),e(O,[2,152],{107:462,110:mt}),{22:[1,463]},{12:a,20:_,25:464,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{22:[1,465]},{7:$e,12:a,20:_,23:466,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},e([7,12,20,31,68,70,76,77,78,79,80,83,88,96,98,100,131,138,164,165,171,178,180,183,186,187,188,189,190,207],[2,278]),e(Ae,[2,322],{149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,123:317,55:318,12:a,20:_,31:n,88:f,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(Ae,[2,323]),e(Ae,[2,325],{149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,123:317,55:318,12:a,20:_,31:n,88:f,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(Ae,[2,326]),{7:$e,12:a,20:_,23:467,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{22:[1,468]},{22:[1,469]},{7:$e,12:a,20:_,23:470,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{22:[2,169],91:[1,471]},{126:[1,472]},{8:418,9:47,10:s,12:a,15:33,16:17,17:16,18:15,19:r,20:_,25:48,31:n,36:7,37:8,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,101:10,102:11,103:12,104:13,105:14,106:b,111:v,112:k,115:w,120:x,123:67,125:473,126:[2,179],127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,202:$,207:F},e(O,[2,172]),{22:[2,174]},e(O,[2,15]),{22:[1,474]},e(pt,[2,18]),{13:[2,20],20:st,26:475,27:332,29:333,31:at,32:rt},{12:a,20:_,25:476,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(ct,[2,25]),e(ct,[2,26]),{12:a,20:_,25:477,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{7:$e,12:a,20:_,23:478,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{22:[1,479]},e(B,[2,135]),e(B,[2,139]),e(qe,[2,331],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:349,12:a,20:_,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(qe,[2,332]),e(B,[2,127]),e(We,[2,131]),{13:[1,480]},e(ht,[2,119],{90:481,20:nt}),e(ht,[2,120]),{20:[1,482]},e(B,[2,105]),e(ot,[2,9]),{7:[1,483]},e(K,[2,182]),{13:[2,353],28:[1,484],204:485},e(ct,[2,358]),{28:[1,486],179:[2,301],196:487},e(ut,[2,306],{197:488,22:lt}),e(ut,[2,307]),e(ut,[2,309]),e(ut,[2,314]),e(Ze,[2,288],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:396,55:397,12:a,20:_,31:n,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(Ze,[2,289]),e(Ze,[2,291],{127:58,128:59,132:62,135:64,139:66,123:67,149:68,152:69,155:70,158:71,162:72,166:73,172:77,173:78,176:79,184:85,185:86,25:396,55:397,12:a,20:_,31:n,88:f,131:S,138:C,164:E,165:M,171:N,178:T,180:R,183:P,186:I,187:z,188:D,189:L,190:A}),e(Ze,[2,292]),{12:a,20:_,88:f,123:67,127:489,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,25:490,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,181:[2,334],183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{181:[2,335]},{181:[2,336]},{12:a,20:_,25:400,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,181:[2,345],183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{181:[2,346]},e(O,[2,153]),{7:$e,12:a,20:_,23:491,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{22:[1,492]},{7:$e,12:a,20:_,23:493,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},e(O,[2,159],{110:[1,494]}),e(O,[2,161]),{7:$e,12:a,20:_,23:495,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{7:$e,12:a,20:_,23:496,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},e(yt,[2,166],{118:321,117:497,119:tt}),{20:[1,498]},e(Le,[2,178]),{126:[2,180]},{7:$e,12:a,20:_,23:499,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{13:[2,21]},e(ct,[2,23]),e(ft,[2,28]),e(O,[2,348]),{7:$e,12:a,20:_,23:500,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},e(B,[2,112]),e(ht,[2,121],{93:502,28:[1,501]}),e(gt,[2,115]),e(ot,[2,10]),{12:a,13:[2,354],20:_,25:288,31:Je,32:Qe,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,203:445},{13:[2,355]},{12:a,20:_,22:Ye,25:294,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,179:[2,302],180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,195:447},{179:[2,303]},e(ut,[2,305]),e(bt,[2,363],{205:503,192:504,206:505,106:vt,112:et}),{22:[1,507]},e(O,[2,156]),{7:$e,12:a,20:_,23:508,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},e(O,[2,158]),{22:[1,509]},e(O,[2,163]),e(O,[2,164],{116:[1,510]}),e(yt,[2,167]),{22:[2,170]},e(O,[2,16]),e(O,[2,349]),e(ht,[2,122],{90:481,20:nt}),e(ht,[2,123]),e(bt,[2,364]),e(bt,[2,361]),e(bt,[2,362]),{12:a,20:_,88:f,123:67,127:512,129:511,130:513,131:kt,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{12:a,20:_,25:515,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(wt,[2,154],{108:516,109:dt}),{7:$e,12:a,20:_,23:517,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},{22:[1,518]},e(bt,[2,365],{192:504,206:505,205:519,106:vt,112:et}),e(xt,[2,184]),e(xt,[2,185]),{20:Q,22:[1,520],31:Y,32:Z,33:521,34:155,35:156},{28:[1,522],181:[2,341],200:523},e(wt,[2,155]),e(O,[2,160]),{7:$e,12:a,20:_,23:524,25:48,31:n,36:223,38:9,41:18,42:19,43:20,44:21,45:22,46:23,47:24,48:25,49:34,51:54,55:49,68:i,70:o,71:37,72:38,73:39,74:40,75:41,76:c,77:u,78:l,79:d,80:m,81:42,82:43,83:p,88:f,96:h,98:g,100:y,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A,207:F},e(bt,[2,366]),{12:a,20:_,88:f,123:67,127:512,129:525,130:513,131:kt,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{22:[1,526]},{12:a,20:_,25:490,88:f,123:67,127:58,128:59,131:S,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,181:[2,342],183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},{181:[2,343]},e(O,[2,165]),e(xt,[2,188]),{12:a,20:_,88:f,123:67,127:512,129:527,130:513,131:kt,132:62,135:64,138:C,139:66,149:68,152:69,155:70,158:71,162:72,164:E,165:M,166:73,171:N,172:77,173:78,176:79,178:T,180:R,183:P,184:85,185:86,186:I,187:z,188:D,189:L,190:A},e(xt,[2,189])],defaultActions:{2:[2,1],3:[2,2],93:[2,3],94:[2,6],95:[2,7],310:[2,339],311:[2,340],313:[2,45],367:[2,31],384:[2,352],391:[2,300],420:[2,174],458:[2,335],459:[2,336],461:[2,346],473:[2,180],475:[2,21],485:[2,355],487:[2,303],498:[2,170],523:[2,343]},parseError:function(e,t){if(!t.recoverable){var s=new Error(e);throw s.hash=t,s}this.trace(e)},parse:function(e){var t=this,s=[0],a=[null],r=[],_=this.table,n="",i=0,o=0,c=0,u=r.slice.call(arguments,1),l=Object.create(this.lexer),d={yy:{}};for(var m in this.yy)Object.prototype.hasOwnProperty.call(this.yy,m)&&(d.yy[m]=this.yy[m]);l.setInput(e,d.yy),d.yy.lexer=l,d.yy.parser=this,"undefined"==typeof l.yylloc&&(l.yylloc={});var p=l.yylloc;r.push(p);var f=l.options&&l.options.ranges;"function"===typeof d.yy.parseError?this.parseError=d.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var h,g,y,b,v,k,w,x,S,C=function(){var e;return"number"!==typeof(e=l.lex()||1)&&(e=t.symbols_[e]||e),e},E={};;){if(y=s[s.length-1],this.defaultActions[y]?b=this.defaultActions[y]:(null!==h&&"undefined"!=typeof h||(h=C()),b=_[y]&&_[y][h]),"undefined"===typeof b||!b.length||!b[0]){var M="";for(k in S=[],_[y])this.terminals_[k]&&k>2&&S.push("'"+this.terminals_[k]+"'");M=l.showPosition?"Parse error on line "+(i+1)+":\n"+l.showPosition()+"\nExpecting "+S.join(", ")+", got '"+(this.terminals_[h]||h)+"'":"Parse error on line "+(i+1)+": Unexpected "+(1==h?"end of input":"'"+(this.terminals_[h]||h)+"'"),this.parseError(M,{text:l.match,token:this.terminals_[h]||h,line:l.yylineno,loc:p,expected:S})}if(b[0]instanceof Array&&b.length>1)throw new Error("Parse Error: multiple actions possible at state: "+y+", token: "+h);switch(b[0]){case 1:s.push(h),a.push(l.yytext),r.push(l.yylloc),s.push(b[1]),h=null,g?(h=g,g=null):(o=l.yyleng,n=l.yytext,i=l.yylineno,p=l.yylloc,c>0&&c--);break;case 2:if(w=this.productions_[b[1]][1],E.$=a[a.length-w],E._$={first_line:r[r.length-(w||1)].first_line,last_line:r[r.length-1].last_line,first_column:r[r.length-(w||1)].first_column,last_column:r[r.length-1].last_column},f&&(E._$.range=[r[r.length-(w||1)].range[0],r[r.length-1].range[1]]),"undefined"!==typeof(v=this.performAction.apply(E,[n,o,i,d.yy,b[1],a,r].concat(u))))return v;w&&(s=s.slice(0,-1*w*2),a=a.slice(0,-1*w),r=r.slice(0,-1*w)),s.push(this.productions_[b[1]][0]),a.push(E.$),r.push(E._$),x=_[s[s.length-2]][s[s.length-1]],s.push(x);break;case 3:return!0}}return!0}},Ct={EOF:1,parseError:function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},setInput:function(e,t){return this.yy=t||this.yy||{},this._input=e,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var e=this._input[0];return this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e,e.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},unput:function(e){var t=e.length,s=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t),this.offset-=t;var a=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),s.length-1&&(this.yylineno-=s.length-1);var r=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:s?(s.length===a.length?this.yylloc.first_column:0)+a[a.length-s.length].length-s[0].length:this.yylloc.first_column-t},this.options.ranges&&(this.yylloc.range=[r[0],r[0]+this.yyleng-t]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(e){this.unput(this.match.slice(e))},pastInput:function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},test_match:function(e,t){var s,a,r;if(this.options.backtrack_lexer&&(r={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(r.yylloc.range=this.yylloc.range.slice(0))),(a=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=a.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:a?a[a.length-1].length-a[a.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],s=this.performAction.call(this,this.yy,this,t,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),s)return s;if(this._backtrack){for(var _ in r)this[_]=r[_];return!1}return!1},next:function(){if(this.done)return this.EOF;var e,t,s,a;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var r=this._currentRules(),_=0;_<r.length;_++)if((s=this._input.match(this.rules[r[_]]))&&(!t||s[0].length>t[0].length)){if(t=s,a=_,this.options.backtrack_lexer){if(!1!==(e=this.test_match(s,r[_])))return e;if(this._backtrack){t=!1;continue}return!1}if(!this.options.flex)break}return t?!1!==(e=this.test_match(t,r[a]))&&e:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var e=this.next();return e||this.lex()},begin:function(e){this.conditionStack.push(e)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(e){return(e=this.conditionStack.length-1-Math.abs(e||0))>=0?this.conditionStack[e]:"INITIAL"},pushState:function(e){this.begin(e)},stateStackSize:function(){return this.conditionStack.length},options:{},performAction:function(e,t,s,a){switch(s){case 0:if(void 0==this.indents&&(this.indents=[0]),!(this.indents.length>1))return 5;this.begin("DEDENTS"),this.unput(" "),this.dedents=1,this.indents.pop();break;case 1:void 0==this.indent&&(this.indent=0),this.indent+=1;break;case 2:void 0==this.indent&&(this.indent=0),this.indent=this.indent+8&-7;break;case 3:this.indent=0;break;case 4:break;case 5:this.unput(t.yytext),void 0==this.indents&&(this.indents=[0]);var r=this.indents[this.indents.length-1];if(void 0==this.indent&&(this.indent=0),this.indent>r)return this.begin("INLINE"),this.indents.push(this.indent),124;if(this.indent<r){for(this.begin("DEDENTS"),this.dedents=0;this.indents.length&&(this.dedents+=1,this.indents.pop(),(r=this.indents[this.indents.length-1])!=this.indent););if(!this.indents.length)throw new Error("TabError: Inconsistent")}else this.begin("INLINE");break;case 6:if(this.unput(t.yytext),void 0==this.dedents&&(this.dedents=0),this.dedents-- >0)return 126;this.begin("INLINE");break;case 7:if(void 0==this.brackets_count&&(this.brackets_count=0),this.brackets_count<=0)return this.indent=0,this.begin("INITIAL"),7;break;case 8:case 9:tripleString="",this.begin("TRIPLE_D");break;case 10:var _=tripleString.replace(/[\\"']/g,"\\$&").replace(/\u0000/g,"\\0");return t.yytext='"'+_+'"',this.popState(),189;case 11:tripleString+="\n";break;case 12:case 13:tripleString+=t.yytext;break;case 14:case 15:tripleString="",this.begin("TRIPLE_S");break;case 16:return _=tripleString.replace(/[\\"']/g,"\\$&").replace(/\u0000/g,"\\0"),t.yytext='"'+_+'"',this.popState(),189;case 17:tripleString+="\n";break;case 18:case 19:tripleString+=t.yytext;break;case 20:case 21:case 22:break;case 23:return 88;case 24:case 25:return 183;case 26:var n=t.yytext.substr(2);return t.yytext='parseInt("'+n+'",2)',183;case 27:return 183;case 28:return void 0==this.brackets_count&&(this.brackets_count=0),"{"==t.yytext||"["==t.yytext||"("==t.yytext?this.brackets_count+=1:"}"!=t.yytext&&"]"!=t.yytext&&")"!=t.yytext||(this.brackets_count-=1),t.yytext;case 29:return 189;case 30:return(t.yytext.endsWith("'''")||t.yytext.endsWith('"""'))&&(_=t.yytext.substr(3,t.yytext.length-6).replace(/[\\"']/g,"\\$&").replace(/\u0000/g,"\\0"),t.yytext='"'+_+'"'),190;case 31:return-1==["continue","nonlocal","finally","lambda","return","assert","global","import","except","raise","break","False","class","while","yield","None","True","from","with","elif","else","pass","for","try","def","and","del","not","is","as","if","or","in"].indexOf(t.yytext)?"NAME":t.yytext}},rules:[/^(?:$)/,/^(?: )/,/^(?:\t)/,/^(?:\n)/,/^(?:#[^\n]*)/,/^(?:.)/,/^(?:.)/,/^(?:\n)/,/^(?:([bB]|[bB][rR]|[rR][bB])("""))/,/^(?:([rR]|[uU]|[fF]|[fF][rR]|[rR][fF])?("""))/,/^(?:("""))/,/^(?:\n)/,/^(?:(\\.|\\\n))/,/^(?:.)/,/^(?:([bB]|[bB][rR]|[rR][bB])('''))/,/^(?:([rR]|[uU]|[fF]|[fF][rR]|[rR][fF])?('''))/,/^(?:('''))/,/^(?:\n)/,/^(?:(\\.|\\\n))/,/^(?:.)/,/^(?:#[^\n]*)/,/^(?:\\\n[\ \t\f]*)/,/^(?:[\ \t\f]+)/,/^(?:(\.\.\.))/,/^(?:(((((([0-9])+|((\.([0-9])+)|(([0-9])+)(\.([0-9])+)|(([0-9])+)\.))([e|E][\+|\-]?(([0-9]))+))|((\.([0-9])+)|(([0-9])+)(\.([0-9])+)|(([0-9])+)\.))|(([0-9])+))[jJ]))/,/^(?:(((([0-9])+|((\.([0-9])+)|(([0-9])+)(\.([0-9])+)|(([0-9])+)\.))([e|E][\+|\-]?(([0-9]))+))|((\.([0-9])+)|(([0-9])+)(\.([0-9])+)|(([0-9])+)\.)))/,/^(?:(0[b|B]([0|1])+))/,/^(?:((0[x|X](([0-9])|[a-fA-F])+)|(0[o|O]([0-7])+)|((([1-9]([0-9])*)|0+))))/,/^(?:(>>=|<<=|\*\*=|\/\/=|->|\+=|-=|\*=|\/=|%=|&=|\|=|\^=|\*\*|\/\/|<<|>>|<=|>=|==|!=|\(|\)|\[|\]|\{|\}|,|:|\.|;|@|=|\+|-|\*|\/|%|&|\||\^|~|<|>|\|\|"))/,/^(?:(([rR]|[uU]|[fF]|[fF][rR]|[rR][fF])?(("(([^\\\n\"])|(\\.|\\\n))*")|('(([^\\\n\'])|(\\.|\\\n))*'))))/,/^(?:(([bB]|[bB][rR]|[rR][bB])((("(([^\\\n\"])|(\\.|\\\n))*")|('(([^\\\n\'])|(\\.|\\\n))*')))))/,/^(?:((((_)|(([A-Z]))|(([a-z]))))((((_)|(([A-Z]))|(([a-z])))|([0-9])))*))/],conditions:{INITIAL:{rules:[0,1,2,3,4,5,8,9,14,15],inclusive:!0},INLINE:{rules:[0,7,8,9,14,15,20,21,22,23,24,25,26,27,28,29,30,31],inclusive:!0},DEDENTS:{rules:[6],inclusive:!0},TRIPLE_D:{rules:[10,11,12,13],inclusive:!0},TRIPLE_S:{rules:[16,17,18,19],inclusive:!0}}};function Et(){this.yy={}}return St.lexer=Ct,Et.prototype=St,St.Parser=Et,new Et}();t.parser=r,t.Parser=r.Parser,t.parse=function(){return r.parse.apply(r,arguments)},t.main=function(a){a[1]||(console.log("Usage: "+a[0]+" FILE"),e.exit(1));var r=s(2205).readFileSync(s(391).normalize(a[1]),"utf8");return t.parser.parse(r)},"undefined"!==typeof a&&s.c[s.s]===a&&t.main(e.argv.slice(1))}).call(t,s(29),s(67)(e))},5660:function(e,t){e.exports={__builtins__:{functions:["credits",{name:"delattr",updates:[1]},"dict","dir","divmod","enumerate","eval","exec","exit",{name:"filter",higherorder:1},"float","format","frozenset","getattr","globals","hasattr","hash","help","hex","id","input","int","isinstance","issubclass","iter","len","license","list","locals",{name:"map",higherorder:1},"max","memoryview","min","next","object","oct","open","ord","pow","print","property","quit","range","repr","reversed","round","set",{name:"setattr",updates:[1]},"slice","sorted","staticmethod","str","sum","super","tuple","type","vars","zip"],types:{BaseException:{methods:[{name:"with_traceback",updates:[1]}]}}}}},5661:function(e,t){e.exports={random:{functions:["betavariate","choice","choices","expovariate","gammavariate","gauss","getrandbits","getstate","lognormvariate","normalvariate","paretovariate","randint","random","randrange","sample",{name:"seed",updates:["$global"]},{name:"setstate",updates:["$global"]},"shuffle","triangular","uniform","vonmisesvariate","weibullvariate"]}}},5662:function(e,t){e.exports={matplotlib:{functions:["checkdep_dvipng","checkdep_ghostscript","checkdep_inkscape","checkdep_pdftops","checkdep_ps_distiller","checkdep_usetex","compare_versions","cycler","dedent",{name:"get_backend",reads:["rcParams"]},"get_cachedir","get_configdir","get_data_path","get_home","get_label","get_py2exe_datafiles",{name:"interactive",updates:["rcParams"]},{name:"is_interactive",reads:["rcParams"]},"is_url","matplotlib_fname","mplDeprecation",{name:"rc",updates:["rcParams"]},{name:"rc_context",updates:["rcParams"]},{name:"rc_file",updates:["rcParams"]},{name:"rc_file_defaults",updates:["rcParams"]},"rc_params","rc_params_from_file",{name:"rcdefaults",updates:["rcParams"]},"sanitize_sequence","test",{name:"tk_window_focus",updates:["rcParams"]},"use","validate_backend"],modules:{pyplot:{functions:["acorr","angle_spectrum","annotate","arrow","autoscale","autumn","axes","axhline","axhspan","axis","axvline","axvspan","bar","barbs","barh","bone","box","boxplot","broken_barh","cla","clabel","clf","clim","close","cm","cohere","colorbar","colormaps","connect","contour","contourf","cool","copper","csd","cycler","dedent","delaxes","deprecated","disconnect","docstring","draw","draw_all","draw_if_interactive","errorbar","eventplot","figaspect","figimage","figlegend","fignum_exists","figtext","fill","fill_between","fill_betweenx","findobj","flag","gca","gcf","gci","get","get_backend","get_cmap","get_current_fig_manager","get_figlabels","get_fignums","get_plot_commands","get_scale_docs","get_scale_names","getp","ginput","gray","grid","hexbin","hist","hist2d","hlines","hot","hsv","importlib","imread","imsave","imshow","inferno","inspect","install_repl_d","matshow","minorticks_off","minorticks_on","mlab",{name:"figure",reads:["rcParams"]},"new_figure_manager","nipy_spectral","np","pause","pcolor","pcolormesh","phase_spectrum","pie","pink","plasma","plot","plot_date","plotfile","plotting","polar","prism","psd","pylab_setup","quiver","quiverkey","rc","rcParams","rcParamsDefault","rcParamsOrig","rc_context","rcdefaults","rcsetup","re","register_cmap","rgrids","savefig","sca","scatter","sci","semilogx","semilogy","set_cmap","setp","show","silent_list","specgram","spring","spy","stackplot","stem","step","streamplot","style","subplot",{name:"subplot_tool",updates:["rcParams"]},"subplot2grid","subplots","subplots_adjust","summer","suptitle",{name:"switch_backend",updates:["rcParams"]},"sys","table","text","thetagrids","tick_params","ticklabel_format","tight_layout","time","title","tricontour","tricontourf","tripcolor","triplot","twinx","twiny","uninstall_repl_displayhook","violinplot","viridis","vlines","waitforbuttonpress","warn_deprecated","warnings","winter","xcorr",{name:"xkcd",reads:["rcParams"]},"xlabel","xlim","xscale","xticks","ylabel","ylim","yscale","yticks"]}}}}},5663:function(e,t){e.exports={pandas:{functions:["array","bdate_range","concat","crosstab","cut","date_range","datetime","describe_option","eval","factorize","get_dummies","get_option","infer_freq","interval_range","isna","isnull","lreshape","melt","merge","merge_asof","merge_ordered","notna","notnull","option_context","period_range","pivot","pivot_table","qcut",{name:"read_clipboard",returns:"DataFrame"},{name:"read_csv",returns:"DataFrame"},{name:"read_excel",returns:"DataFrame"},{name:"read_feather",returns:"DataFrame"},{name:"read_fwf",returns:"DataFrame"},{name:"read_gbq",returns:"DataFrame"},{name:"read_hdf",returns:"DataFrame"},{name:"read_html",returns:"DataFrame"},{name:"read_json",returns:"DataFrame"},{name:"read_msgpack",returns:"DataFrame"},{name:"read_parquet",returns:"DataFrame"},{name:"read_pickle",returns:"DataFrame"},{name:"read_sas",returns:"DataFrame"},{name:"read_sql",returns:"DataFrame"},{name:"read_sql_query",returns:"DataFrame"},{name:"read_sql_table",returns:"DataFrame"},{name:"read_stata",returns:"DataFrame"},{name:"read_table",returns:"DataFrame"},"reset_option","set_eng_float_format","set_option","show_versions","test","timedelta_range","to_datetime","to_msgpack","to_numeric","to_pickle","to_timedelta","unique","value_counts","wide_to_long"],types:{DataFrame:{methods:["abs","add","add_prefix","add_suffix","agg","aggregate","align","all","any","append","apply","applymap","as_blocks","as_matrix","asfreq","asof","assign","astype","at_time","between_time","bfill","bool","boxplot","clip","clip_lower","clip_upper","combine","combine_first","compound","convert_objects","copy","corr","corrwith","count","cov","cummax","cummin","cumprod","cumsum","describe","diff","div","divide","dot","drop","drop_duplicates","droplevel","dropna","duplicated","eq","equals","eval","ewm","expanding",{name:"ffill",updates:[0]},{name:"fillna",updates:[0]},"filter","first","first_valid_index","floordiv","from_csv","from_dict","from_items","from_records","ge","get","get_dtype_counts","get_ftype_counts","get_value","get_values","groupby","gt","head","hist","idxmax","idxmin","infer_objects","info","insert","interpolate","isin","isna","isnull","items","iteritems","iterrows","itertuples","join","keys","kurt","kurtosis","last","last_valid_index","le","lookup","lt","mad","mask","max","mean","median",{name:"melt",updates:[0]},"memory_usage","merge","min","mod","mode","mul","multiply","ne","nlargest","notna","notnull","nsmallest","nunique","pct_change","pipe","pivot","pivot_table","plot",{name:"pop",updates:[0]},"pow","prod","product","quantile","query","radd","rank","rdiv","reindex","reindex_axis","reindex_like","rename","rename_axis","reorder_levels","replace","resample","reset_index","rfloordiv","rmod","rmul","rolling","round","rpow","rsub","rtruediv","sample","select","select_dtypes","sem","set_axis","set_index","set_value","shift","skew","slice_shift","sort_index","sort_values","squeeze","stack","std","sub","subtract","sum","swapaxes","swaplevel","tail","take","to_clipboard","to_csv","to_dense","to_dict","to_excel","to_feather","to_gbq","to_hdf","to_html","to_json","to_latex","to_msgpack","to_numpy","to_panel","to_parquet","to_period","to_pickle","to_records","to_sparse","to_sql","to_stata","to_string","to_timestamp","to_xarray","transform","transpose","truediv","truncate","tshift","tz_convert","tz_localize","unstack",{name:"update",updates:[0]},"var","where","xs"]}}}}},5664:function(e,t){e.exports={sklearn:{modules:{cluster:{modules:{tests:{modules:{common:{functions:["generate_clustered_data"],types:{}},test_affinity_propagation:{functions:["test_affinity_propagation","test_affinity_propagation_predict","test_affinity_propagation_predict_error","test_affinity_propagation_fit_non_convergence","test_affinity_propagation_equal_mutual_similarities","test_affinity_propagation_predict_non_convergence","test_equal_similarities_and_preferences"],types:{}},test_bicluster:{functions:["test_get_submatrix","_test_shape_indices","test_spectral_coclustering","test_spectral_biclustering","_do_scale_test","_do_bistochastic_test","test_scale_normalize","test_bistochastic_normalize","test_log_normalize","test_fit_best_piecewise","test_project_and_cluster","test_perfect_checkerboard","test_errors"],types:{MockBiclustering:{methods:[{name:"__init__",updates:[],returns:"MockBiclustering"},"__init__","get_indices"]}}},test_birch:{functions:["test_n_samples_leaves_roots","test_partial_fit","test_birch_predict","test_n_clusters","test_sparse_X","check_branching_factor","test_branching_factor","check_threshold","test_threshold"],types:{}},test_dbscan:{functions:["test_dbscan_similarity","test_dbscan_feature","test_dbscan_sparse","test_dbscan_no_core_samples","test_dbscan_callable","test_dbscan_metric_params","test_dbscan_balltree","test_input_validation","test_dbscan_badargs","test_pickle","test_boundaries","test_weighted_dbscan","test_dbscan_precomputed_metric_with_degenerate_input_arrays","test_dbscan_precomputed_metric_with_initial_rows_zero"],types:{}},test_feature_agglomeration:{functions:["test_feature_agglomeration"],types:{}},test_hierarchical:{functions:["test_linkage_misc","test_structured_linkage_tree","test_unstructured_linkage_tree","test_height_linkage_tree","test_agglomerative_clustering_wrong_arg_memory","test_ward_agglomeration","assess_same_labelling","test_scikit_vs_scipy","test_connectivity_propagation","test_ward_tree_children_order","test_ward_linkage_tree_return_distance","test_connectivity_fixing_non_lil","test_int_float_dict","test_connectivity_callable","test_connectivity_ignores_diagonal","test_compute_full_tree","test_n_components","test_agg_n_clusters","test_affinity_passed_to_fix_connectivity","test_small_distance_threshold","test_cluster_distances_with_distance_threshold","test_dist_threshold_invalid_parameters","test_n_components_deprecation"],types:{FakeAffinity:{methods:[{name:"__init__",updates:[0],returns:"FakeAffinity"},{name:"increment",updates:[0]}]}}},test_k_means:{functions:["test_labels_assignment_and_inertia","test_minibatch_update_consistency","_check_fitted_model","test_k_means_new_centers","test_k_means_precompute_distances_flag","test_k_means_plus_plus_init_not_precomputed","test_k_means_random_init_not_precomputed","test_k_means_n_init","test_k_means_fortran_aligned_data","test_mb_kmeans_verbose","test_minibatch_init_with_large_k","test_minibatch_k_means_init_multiple_runs_with_explicit_centers","test_minibatch_sensible_reassign_fit","test_minibatch_sensible_reassign_partial_fit","test_minibatch_reassign","test_minibatch_with_many_reassignments","test_sparse_mb_k_means_callable_init","test_mini_batch_k_means_random_init_partial_fit","test_minibatch_default_init_size","test_minibatch_tol","test_minibatch_set_init_size","test_k_means_copyx","test_k_means_non_collapsed","test_int_input","test_transform","test_fit_transform","test_full_vs_elkan","test_n_init","test_k_means_function","test_x_squared_norms_init_centroids","test_max_iter_error","test_k_means_init_centers","test_sparse_validate_centers","test_less_centers_than_unique_points","_sort_centers","test_weighted_vs_repeated","test_unit_weights_vs_no_weights","test_scaled_weights","test_sample_weight_length","test_check_sample_weight","test_iter_attribute","test_k_means_empty_cluster_relocated"],types:{}},test_mean_shift:{functions:["test_estimate_bandwidth","test_estimate_bandwidth_1sample","test_mean_shift_negative_bandwidth","test_estimate_bandwidth_with_sparse_matrix","test_parallel","test_meanshift_predict","test_meanshift_all_orphans","test_unfitted","test_cluster_intensity_tie","test_bin_seeds"],types:{}},test_optics:{functions:["test_extract_xi","test_cluster_hierarchy_","test_correct_number_of_clusters","test_minimum_number_of_sample_check","test_bad_extract","test_bad_reachability","test_close_extract","test_min_samples_edge_case","test_min_cluster_size_invalid2","test_processing_order","test_compare_to_ELKI","test_wrong_cluster_method","test_extract_dbscan","test_precomputed_dists"],types:{}},test_spectral:{functions:["test_spectral_unknown_mode","test_spectral_unknown_assign_labels","test_spectral_clustering_sparse","test_affinities","test_spectral_clustering_with_arpack_amg_solvers"],types:{}}},types:{},functions:[]},affinity_propagation_:{functions:["_equal_similarities_and_preferences","affinity_propagation"],types:{AffinityPropagation:{methods:[{name:"__init__",updates:[0],returns:"AffinityPropagation"},{name:"fit",updates:[0]},"predict"]}}},bicluster:{functions:["_scale_normalize","_bistochastic_normalize","_log_normalize"],types:{BaseSpectral:{methods:["_check_parameters","fit","_svd","_k_means"]},SpectralCoclustering:{methods:[{name:"__init__",updates:[],returns:"SpectralCoclustering"},"__init__",{name:"_fit",updates:[0]},"fit"]},SpectralBiclustering:{methods:[{name:"__init__",updates:[0],returns:"SpectralBiclustering"},"_check_parameters",{name:"_fit",updates:[0]},"_fit_best_piecewise","_project_and_cluster","fit"]}}},birch:{functions:["_iterate_sparse_X","_split_node"],types:{_CFNode:{methods:[{name:"__init__",updates:[0],returns:"_CFNode"},{name:"append_subcluster",updates:[0]},{name:"update_split_subclusters",updates:[0]},{name:"insert_cf_subcluster",updates:[0]}]},_CFSubcluster:{methods:[{name:"__init__",updates:[0],returns:"_CFSubcluster"},{name:"update",updates:[0]},"merge_subcluster"]},Birch:{methods:[{name:"__init__",updates:[0],returns:"Birch"},{name:"fit",updates:[0]},{name:"_fit",updates:[0]},"_get_leaves",{name:"partial_fit",updates:[0]},"_check_fit","predict","transform",{name:"_global_clustering",updates:[0]}]}}},dbscan_:{functions:["dbscan"],types:{DBSCAN:{methods:[{name:"__init__",updates:[0],returns:"DBSCAN"},{name:"fit",updates:[0]},{name:"fit_predict",updates:[0]}]}}},hierarchical:{functions:[{name:"_fix_connectivity",updates:[1]},"_single_linkage_tree","ward_tree",{name:"linkage_tree",updates:[1]},"_complete_linkage","_average_linkage","_single_linkage","_hc_cut"],types:{AgglomerativeClustering:{methods:[{name:"__init__",updates:[0],returns:"AgglomerativeClustering"},{name:"fit",updates:[0]}]},FeatureAgglomeration:{methods:[{name:"__init__",updates:[0],returns:"FeatureAgglomeration"},{name:"fit",updates:[0]}]}}},k_means_:{functions:["_k_init","_validate_center_shape","_tolerance","_check_sample_weight","k_means","_kmeans_single_elkan","_kmeans_single_lloyd",{name:"_labels_inertia_precompute_dense",updates:[4]},"_labels_inertia","_init_centroids",{name:"_mini_batch_step",updates:[3,4,5]},{name:"_mini_batch_convergence",updates:[7]}],types:{KMeans:{methods:[{name:"__init__",updates:[0],returns:"KMeans"},"_check_test_data",{name:"fit",updates:[0]},{name:"fit_predict",updates:[0]},{name:"fit_transform",updates:[0]},"transform","_transform","predict","score"]},MiniBatchKMeans:{methods:[{name:"__init__",updates:[0],returns:"MiniBatchKMeans"},{name:"fit",updates:[0]},"_labels_inertia_minibatch",{name:"partial_fit",updates:[0]},"predict",{name:"fit_predict",updates:[0]},{name:"fit_transform",updates:[0]},"transform","score"]}}},mean_shift_:{functions:["estimate_bandwidth","_mean_shift_single_seed","mean_shift","get_bin_seeds"],types:{MeanShift:{methods:[{name:"__init__",updates:[0],returns:"MeanShift"},{name:"fit",updates:[0]},"predict"]}}},optics_:{functions:["_validate_size","_compute_core_distances_","compute_optics_graph",{name:"_set_reach_dist",updates:[1,2]},"cluster_optics_dbscan","cluster_optics_xi","_extend_region","_update_filter_sdas","_correct_predecessor","_xi_cluster","_extract_xi_labels"],types:{OPTICS:{methods:[{name:"__init__",updates:[0],returns:"OPTICS"},{name:"fit",updates:[0]}]}}},setup:{functions:["configuration"],types:{}},spectral:{functions:[{name:"discretize",updates:[0]},"spectral_clustering"],types:{SpectralClustering:{methods:[{name:"__init__",updates:[0],returns:"SpectralClustering"},{name:"fit",updates:[0]}]}}}},types:{SpectralClustering:{methods:[{name:"__init__",updates:[0],returns:"SpectralClustering"},{name:"fit",updates:[0]}]},MeanShift:{methods:[{name:"__init__",updates:[0],returns:"MeanShift"},{name:"fit",updates:[0]},"predict"]},AffinityPropagation:{methods:[{name:"__init__",updates:[0],returns:"AffinityPropagation"},{name:"fit",updates:[0]},"predict"]},AgglomerativeClustering:{methods:[{name:"__init__",updates:[0],returns:"AgglomerativeClustering"},{name:"fit",updates:[0]}]},FeatureAgglomeration:{methods:[{name:"__init__",updates:[0],returns:"FeatureAgglomeration"},{name:"fit",updates:[0]}]},KMeans:{methods:[{name:"__init__",updates:[0],returns:"KMeans"},"_check_test_data",{name:"fit",updates:[0]},{name:"fit_predict",updates:[0]},{name:"fit_transform",updates:[0]},"transform","_transform","predict","score"]},MiniBatchKMeans:{methods:[{name:"__init__",updates:[0],returns:"MiniBatchKMeans"},{name:"fit",updates:[0]},"_labels_inertia_minibatch",{name:"partial_fit",updates:[0]},"predict",{name:"fit_predict",updates:[0]},{name:"fit_transform",updates:[0]},"transform","score"]},DBSCAN:{methods:[{name:"__init__",updates:[0],returns:"DBSCAN"},{name:"fit",updates:[0]},{name:"fit_predict",updates:[0]}]},OPTICS:{methods:[{name:"__init__",updates:[0],returns:"OPTICS"},{name:"fit",updates:[0]}]},SpectralBiclustering:{methods:[{name:"__init__",updates:[0],returns:"SpectralBiclustering"},"_check_parameters",{name:"_fit",updates:[0]},"_fit_best_piecewise","_project_and_cluster","fit"]},SpectralCoclustering:{methods:[{name:"__init__",updates:[],returns:"SpectralCoclustering"},"__init__",{name:"_fit",updates:[0]},"fit"]},Birch:{methods:[{name:"__init__",updates:[0],returns:"Birch"},{name:"fit",updates:[0]},{name:"_fit",updates:[0]},"_get_leaves",{name:"partial_fit",updates:[0]},"_check_fit","predict","transform",{name:"_global_clustering",updates:[0]}]}},functions:["spectral_clustering","mean_shift","estimate_bandwidth","get_bin_seeds","affinity_propagation","ward_tree",{name:"linkage_tree",updates:[1]},"k_means","dbscan","cluster_optics_dbscan","compute_optics_graph","cluster_optics_xi"]},compose:{modules:{tests:{modules:{test_column_transformer:{functions:["test_column_transformer","test_column_transformer_dataframe","test_column_transformer_sparse_array","test_column_transformer_list","test_column_transformer_sparse_stacking","test_column_transformer_mixed_cols_sparse","test_column_transformer_sparse_threshold","test_column_transformer_error_msg_1D","test_2D_transformer_output","test_2D_transformer_output_pandas","test_column_transformer_invalid_transformer","test_make_column_transformer","test_make_column_transformer_pandas","test_make_column_transformer_kwargs","test_make_column_transformer_remainder_transformer","test_column_transformer_get_set_params","test_column_transformer_named_estimators","test_column_transformer_cloning","test_column_transformer_get_feature_names","test_column_transformer_special_strings","test_column_transformer_remainder","test_column_transformer_no_remaining_remainder_transformer","test_column_transformer_drops_all_remainder_transformer","test_column_transformer_sparse_remainder_transformer","test_column_transformer_drop_all_sparse_remainder_transformer","test_column_transformer_get_set_params_with_remainder","test_column_transformer_no_estimators","test_column_transformer_no_estimators_set_params","test_column_transformer_callable_specifier","test_column_transformer_negative_column_indexes"],types:{Trans:{methods:["fit","transform"]},DoubleTrans:{methods:["fit","transform"]},SparseMatrixTrans:{methods:["fit","transform"]},TransNo2D:{methods:["fit","transform"]},TransRaise:{methods:["fit","transform"]},TransAssert:{methods:["fit","transform"]},NoTrans:{methods:["fit","predict"]}}},test_target:{functions:["test_transform_target_regressor_error","test_transform_target_regressor_invertible","_check_standard_scaled","_check_shifted_by_one","test_transform_target_regressor_functions","test_transform_target_regressor_functions_multioutput","test_transform_target_regressor_2d_transformer_multioutput","test_transform_target_regressor_multi_to_single","test_transform_target_regressor_ensure_y_array"],types:{DummyCheckerArrayTransformer:{methods:["fit","transform","inverse_transform"]},DummyCheckerListRegressor:{methods:["fit","predict"]},DummyTransformer:{methods:[{name:"__init__",updates:[0],returns:"DummyTransformer"},{name:"fit",updates:[0]},"transform","inverse_transform"]}}}},types:{},functions:[]}},types:{},functions:[]},covariance:{modules:{tests:{modules:{test_covariance:{functions:["test_covariance","test_shrunk_covariance","test_ledoit_wolf","_naive_ledoit_wolf_shrinkage","test_ledoit_wolf_small","test_ledoit_wolf_large","test_oas"],types:{}},test_elliptic_envelope:{functions:["test_elliptic_envelope","test_score_samples","test_raw_values_deprecation","test_threshold_deprecation"],types:{}},test_graphical_lasso:{functions:["test_graphical_lasso","test_graphical_lasso_iris","test_graph_lasso_2D","test_graphical_lasso_iris_singular"],types:{}},test_graph_lasso:{functions:[],types:{}},test_robust_covariance:{functions:["test_mcd","test_fast_mcd_on_invalid_input","test_mcd_class_on_invalid_input","launch_mcd_on_dataset","test_mcd_issue1127","test_mcd_issue3367","test_mcd_support_covariance_is_zero","test_mcd_increasing_det_warning"],types:{}}},types:{},functions:[]},elliptic_envelope:{functions:[],types:{EllipticEnvelope:{methods:[{name:"__init__",updates:[0],returns:"EllipticEnvelope"},{name:"fit",updates:[0]},"decision_function","score_samples","predict","score"]}}},empirical_covariance_:{functions:["log_likelihood","empirical_covariance"],types:{EmpiricalCovariance:{methods:[{name:"__init__",updates:[0],returns:"EmpiricalCovariance"},{name:"_set_covariance",updates:[0]},"get_precision",{name:"fit",updates:[0]},"score","error_norm","mahalanobis"]}}},graph_lasso_:{functions:["_objective","_dual_gap","alpha_max","graphical_lasso","graphical_lasso_path"],types:{GraphicalLasso:{methods:[{name:"__init__",updates:[0],returns:"GraphicalLasso"},{name:"fit",updates:[0]}]},GraphicalLassoCV:{methods:[{name:"__init__",updates:[0],returns:"GraphicalLassoCV"},{name:"fit",updates:[0]}]},GraphLasso:{methods:[{name:"fit",updates:[0]}]},GraphLassoCV:{methods:[{name:"fit",updates:[0]}]}}},robust_covariance:{functions:["c_step","_c_step","select_candidates","fast_mcd"],types:{MinCovDet:{methods:[{name:"__init__",updates:[0],returns:"MinCovDet"},{name:"fit",updates:[0]},{name:"correct_covariance",updates:[0]},{name:"reweight_covariance",updates:[0]}]}}},shrunk_covariance_:{functions:["shrunk_covariance","ledoit_wolf_shrinkage","ledoit_wolf","oas"],types:{ShrunkCovariance:{methods:[{name:"__init__",updates:[0],returns:"ShrunkCovariance"},{name:"fit",updates:[0]}]},LedoitWolf:{methods:[{name:"__init__",updates:[0],returns:"LedoitWolf"},{name:"fit",updates:[0]}]},OAS:{methods:[{name:"fit",updates:[0]}]}}}},types:{EmpiricalCovariance:{methods:[{name:"__init__",updates:[0],returns:"EmpiricalCovariance"},{name:"_set_covariance",updates:[0]},"get_precision",{name:"fit",updates:[0]},"score","error_norm","mahalanobis"]},ShrunkCovariance:{methods:[{name:"__init__",updates:[0],returns:"ShrunkCovariance"},{name:"fit",updates:[0]}]},LedoitWolf:{methods:[{name:"__init__",updates:[0],returns:"LedoitWolf"},{name:"fit",updates:[0]}]},OAS:{methods:[{name:"fit",updates:[0]}]},MinCovDet:{methods:[{name:"__init__",updates:[0],returns:"MinCovDet"},{name:"fit",updates:[0]},{name:"correct_covariance",updates:[0]},{name:"reweight_covariance",updates:[0]}]},GraphLasso:{methods:[{name:"fit",updates:[0]}]},GraphLassoCV:{methods:[{name:"fit",updates:[0]}]},GraphicalLasso:{methods:[{name:"__init__",updates:[0],returns:"GraphicalLasso"},{name:"fit",updates:[0]}]},GraphicalLassoCV:{methods:[{name:"__init__",updates:[0],returns:"GraphicalLassoCV"},{name:"fit",updates:[0]}]},EllipticEnvelope:{methods:[{name:"__init__",updates:[0],returns:"EllipticEnvelope"},{name:"fit",updates:[0]},"decision_function","score_samples","predict","score"]}},functions:["empirical_covariance","log_likelihood","shrunk_covariance","ledoit_wolf","ledoit_wolf_shrinkage","oas","fast_mcd","graphical_lasso"]},cross_decomposition:{modules:{tests:{modules:{test_pls:{functions:["test_pls","test_convergence_fail","test_PLSSVD","test_univariate_pls_regression","test_predict_transform_copy","test_scale_and_stability","test_pls_errors"],types:{}}},types:{},functions:[]},cca_:{functions:[],types:{CCA:{methods:[{name:"__init__",updates:[],returns:"CCA"},"__init__"]}}},pls_:{functions:["_nipals_twoblocks_inner_loop","_svd_cross_product","_center_scale_xy"],types:{_PLS:{methods:[{name:"fit",updates:[0]},"transform","predict",{name:"fit_transform",updates:[0]},"_more_tags"]},PLSRegression:{methods:[{name:"__init__",updates:[],returns:"PLSRegression"},"__init__",{name:"fit",updates:[0]},"transform","predict",{name:"fit_transform",updates:[0]}]},PLSCanonical:{methods:[{name:"__init__",updates:[],returns:"PLSCanonical"},"__init__",{name:"fit",updates:[0]},"transform","predict",{name:"fit_transform",updates:[0]}]},PLSSVD:{methods:[{name:"__init__",updates:[0],returns:"PLSSVD"},{name:"fit",updates:[0]},"transform",{name:"fit_transform",updates:[0]}]}}}},types:{},functions:[]},cross_validation:{functions:[{name:"train_test_split",returns:"List[numpy.ndarray]"}]},datasets:{modules:{data:{modules:{},types:{},functions:[]},descr:{modules:{},types:{},functions:[]},images:{modules:{},types:{},functions:[]},tests:{modules:{data:{modules:{openml:{modules:{1:{modules:{},types:{},functions:[]},2:{modules:{},types:{},functions:[]},3:{modules:{},types:{},functions:[]},61:{modules:{},types:{},functions:[]},292:{modules:{},types:{},functions:[]},561:{modules:{},types:{},functions:[]},1119:{modules:{},types:{},functions:[]},40589:{modules:{},types:{},functions:[]},40675:{modules:{},types:{},functions:[]},40945:{modules:{},types:{},functions:[]},40966:{modules:{},types:{},functions:[]}},types:{},functions:[]}},types:{},functions:[]},test_20news:{functions:["test_20news","test_20news_length_consistency","test_20news_vectorized"],types:{}},test_base:{functions:["_remove_dir","test_data_home","test_default_empty_load_files","test_default_load_files","test_load_files_w_categories_desc_and_encoding","test_load_files_wo_load_content","test_load_sample_images","test_load_digits","test_load_digits_n_class_lt_10","test_load_sample_image","test_load_missing_sample_image_error","test_load_diabetes","test_load_linnerud","test_load_iris","test_load_wine","test_load_breast_cancer","test_load_boston","test_loads_dumps_bunch","test_bunch_pickle_generated_with_0_16_and_read_with_0_17","test_bunch_dir","test_refresh_cache"],types:{}},test_california_housing:{functions:["fetch","test_fetch"],types:{}},test_common:{functions:["check_return_X_y"],types:{}},test_covtype:{functions:["fetch","test_fetch"],types:{}},test_kddcup99:{functions:["test_percent10","test_shuffle"],types:{}},test_lfw:{functions:["setup_module","teardown_module","test_load_empty_lfw_people","test_load_fake_lfw_people","test_load_fake_lfw_people_too_restrictive","test_load_empty_lfw_pairs","test_load_fake_lfw_pairs"],types:{}},test_mldata:{functions:[],types:{}},test_openml:{functions:["_test_features_list","_fetch_dataset_from_openml","_monkey_patch_webbased_functions","test_decode_iris","test_decode_anneal","test_decode_cpu","test_decode_emotions","test_retry_with_clean_cache","test_retry_with_clean_cache_http_error","test_fetch_openml_raises_illegal_argument"],types:{MockHTTPResponse:{methods:[{name:"__init__",updates:[0],returns:"MockHTTPResponse"},"read","tell","seek","close","info"]}}},test_rcv1:{functions:["test_fetch_rcv1"],types:{}},test_samples_generator:{functions:["test_make_classification","test_make_classification_informative_features","test_make_multilabel_classification_return_sequences","test_make_multilabel_classification_return_indicator","test_make_multilabel_classification_return_indicator_sparse","test_make_hastie_10_2","test_make_regression","test_make_regression_multitarget","test_make_blobs","test_make_blobs_n_samples_list","test_make_blobs_n_samples_list_with_centers","test_make_blobs_error","test_make_friedman1","test_make_friedman2","test_make_friedman3","test_make_low_rank_matrix","test_make_sparse_coded_signal","test_make_sparse_uncorrelated","test_make_spd_matrix","test_make_swiss_roll","test_make_s_curve","test_make_biclusters","test_make_checkerboard","test_make_moons","test_make_circles"],types:{}},test_svmlight_format:{functions:["test_load_svmlight_file","test_load_svmlight_file_fd","test_load_svmlight_file_multilabel","test_load_svmlight_files","test_load_svmlight_file_n_features","test_load_compressed","test_load_invalid_file","test_load_invalid_order_file","test_load_zero_based","test_load_zero_based_auto","test_load_with_qid","test_load_invalid_file2","test_not_a_filename","test_invalid_filename","test_dump","test_dump_multilabel","test_dump_concise","test_dump_comment","test_dump_invalid","test_dump_query_id","test_load_with_long_qid","test_load_zeros","test_load_offset_exhaustive_splits","test_load_with_offsets_error"],types:{}}},types:{},functions:[]},base:{functions:["get_data_home","clear_data_home","load_files","load_data","load_wine","load_iris","load_breast_cancer","load_digits","load_diabetes","load_linnerud","load_boston","load_sample_images","load_sample_image","_pkl_filepath","_sha256","_fetch_remote","_refresh_cache"],types:{}},california_housing:{functions:["fetch_california_housing"],types:{}},covtype:{functions:["fetch_covtype"],types:{}},kddcup99:{functions:["fetch_kddcup99","_fetch_brute_kddcup99","_mkdirp"],types:{}},lfw:{functions:["_check_fetch_lfw","_load_imgs","_fetch_lfw_people","fetch_lfw_people","_fetch_lfw_pairs","fetch_lfw_pairs"],types:{}},mldata:{functions:["setup_module","teardown_module"],types:{}},olivetti_faces:{functions:["fetch_olivetti_faces"],types:{}},openml:{functions:["_get_local_path","_retry_with_clean_cache","_open_openml_url","_get_json_content_from_openml_api","_split_sparse_columns","_sparse_data_to_array","_convert_arff_data","_get_data_info_by_name","_get_data_description_by_id","_get_data_features","_get_data_qualities","_get_data_shape","_download_data_arff","_verify_target_data_type","_valid_data_column_names","fetch_openml"],types:{}},rcv1:{functions:["fetch_rcv1","_inverse_permutation","_find_permutation"],types:{}},samples_generator:{functions:["_generate_hypercube",{name:"make_classification",updates:[7]},"make_multilabel_classification","make_hastie_10_2","make_regression","make_circles","make_moons","make_blobs","make_friedman1","make_friedman2","make_friedman3","make_low_rank_matrix","make_sparse_coded_signal","make_sparse_uncorrelated","make_spd_matrix","make_sparse_spd_matrix","make_swiss_roll","make_s_curve","make_gaussian_quantiles","_shuffle","make_biclusters","make_checkerboard"],types:{}},setup:{functions:["configuration"],types:{}},species_distributions:{functions:["_load_coverage","_load_csv","construct_grids","fetch_species_distributions"],types:{}},svmlight_format:{functions:["load_svmlight_file","_gen_open","_open_and_load","load_svmlight_files","_dump_svmlight","dump_svmlight_file"],types:{}},twenty_newsgroups:{functions:["_download_20newsgroups","strip_newsgroup_header","strip_newsgroup_quoting","strip_newsgroup_footer","fetch_20newsgroups","fetch_20newsgroups_vectorized"],types:{}}},types:{},functions:["load_breast_cancer","load_boston","load_diabetes","load_digits","load_files","load_iris","load_linnerud","load_sample_images","load_sample_image","load_wine","get_data_home","clear_data_home","fetch_covtype","fetch_kddcup99","fetch_lfw_pairs","fetch_lfw_people","fetch_20newsgroups","fetch_20newsgroups_vectorized","fetch_openml",{name:"make_classification",updates:[7]},"make_multilabel_classification","make_hastie_10_2","make_regression","make_blobs","make_moons","make_circles","make_friedman1","make_friedman2","make_friedman3","make_low_rank_matrix","make_sparse_coded_signal","make_sparse_uncorrelated","make_spd_matrix","make_swiss_roll","make_s_curve","make_sparse_spd_matrix","make_gaussian_quantiles","make_biclusters","make_checkerboard","load_svmlight_file","load_svmlight_files","dump_svmlight_file","fetch_olivetti_faces","fetch_species_distributions","fetch_california_housing","fetch_rcv1"]},decomposition:{modules:{tests:{modules:{test_dict_learning:{functions:["test_sparse_encode_shapes_omp","test_dict_learning_shapes","test_dict_learning_overcomplete","test_dict_learning_reconstruction","test_dict_learning_reconstruction_parallel","test_dict_learning_lassocd_readonly_data","test_dict_learning_nonzero_coefs","test_dict_learning_unknown_fit_algorithm","test_dict_learning_split","test_dict_learning_online_shapes","test_dict_learning_online_verbosity","test_dict_learning_online_estimator_shapes","test_dict_learning_online_overcomplete","test_dict_learning_online_initialization","test_dict_learning_online_readonly_initialization","test_dict_learning_online_partial_fit","test_sparse_encode_shapes","test_sparse_encode_input","test_sparse_encode_error","test_sparse_encode_error_default_sparsity","test_unknown_method","test_sparse_coder_estimator","test_sparse_coder_parallel_mmap"],types:{}},test_factor_analysis:{functions:[],types:{}},test_fastica:{functions:["center_and_norm","test_gs","test_fastica_nowhiten","test_fastica_convergence_fail","test_non_square_fastica","test_fit_transform","test_inverse_transform","test_fastica_errors"],types:{}},test_incremental_pca:{functions:["test_incremental_pca","test_incremental_pca_check_projection","test_incremental_pca_inverse","test_incremental_pca_validation","test_n_components_none","test_incremental_pca_set_params","test_incremental_pca_num_features_change","test_incremental_pca_batch_signs","test_incremental_pca_batch_values","test_incremental_pca_batch_rank","test_incremental_pca_partial_fit","test_incremental_pca_against_pca_iris","test_incremental_pca_against_pca_random_data","test_explained_variances","test_singular_values","test_whitening","test_incremental_pca_partial_fit_float_division"],types:{}},test_kernel_pca:{functions:["test_kernel_pca","test_kernel_pca_invalid_parameters","test_kernel_pca_consistent_transform","test_kernel_pca_deterministic_output","test_kernel_pca_sparse","test_kernel_pca_linear_kernel","test_kernel_pca_n_components","test_remove_zero_eig","test_leave_zero_eig","test_kernel_pca_precomputed","test_kernel_pca_invalid_kernel"],types:{}},test_nmf:{functions:["test_initialize_nn_output","test_parameter_checking","test_initialize_close","test_initialize_variants","test_nmf_transform_custom_init","test_n_components_greater_n_features","test_nmf_sparse_input","test_nmf_sparse_transform","test_non_negative_factorization_consistency","test_non_negative_factorization_checking","_beta_divergence_dense","test_beta_divergence","test_special_sparse_dot","test_nmf_negative_beta_loss","test_nmf_regularization","test_nmf_underflow"],types:{}},test_online_lda:{functions:["_build_sparse_mtx","test_lda_default_prior_params","test_lda_fit_batch","test_lda_fit_online","test_lda_partial_fit","test_lda_dense_input","test_lda_transform","test_lda_partial_fit_dim_mismatch","test_invalid_params","test_lda_negative_input","test_lda_no_component_error","test_lda_transform_mismatch","test_lda_preplexity_mismatch","test_perplexity_input_format","test_lda_score_perplexity","test_lda_fit_perplexity","test_lda_empty_docs","test_dirichlet_expectation","check_verbosity"],types:{}},test_pca:{functions:["test_pca","test_pca_arpack_solver","test_pca_randomized_solver","test_no_empty_slice_warning","test_whitening","test_singular_values","test_pca_check_projection","test_pca_inverse","test_randomized_pca_check_projection","test_randomized_pca_check_list","test_randomized_pca_inverse","test_n_components_mle","test_pca_dim","test_infer_dim_1","test_infer_dim_2","test_infer_dim_3","test_infer_dim_by_explained_variance","test_pca_score","test_pca_score2","test_pca_score3","test_pca_score_with_different_solvers","test_pca_zero_noise_variance_edge_cases","test_svd_solver_auto","test_pca_bad_solver","test_pca_deterministic_output","check_pca_float_dtype_preservation","check_pca_int_dtype_upcast_to_double"],types:{}},test_sparse_pca:{functions:["generate_toy_data","test_scaling_fit_transform","test_pca_vs_spca"],types:{}},test_truncated_svd:{functions:["test_algorithms","test_attributes","test_integers","test_explained_variance","test_singular_values","test_truncated_svd_eq_pca"],types:{}}},types:{},functions:[]},base:{functions:[],types:{_BasePCA:{methods:["get_covariance","get_precision","transform","inverse_transform"]}}},dict_learning:{functions:["_sparse_encode","sparse_encode",{name:"_update_dict",updates:[0,2]},"dict_learning","dict_learning_online"],types:{SparseCodingMixin:{methods:[{name:"_set_sparse_coding_params",updates:[0]},"transform"]},SparseCoder:{methods:[{name:"__init__",updates:[0],returns:"SparseCoder"},"fit","transform"]},DictionaryLearning:{methods:[{name:"__init__",updates:[0],returns:"DictionaryLearning"},{name:"fit",updates:[0]},"transform"]},MiniBatchDictionaryLearning:{methods:[{name:"__init__",updates:[0],returns:"MiniBatchDictionaryLearning"},{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]},"transform"]}}},factor_analysis:{functions:[],types:{FactorAnalysis:{methods:[{name:"__init__",updates:[0],returns:"FactorAnalysis"},{name:"fit",updates:[0]},"transform","get_covariance","get_precision","score_samples","score"]}}},fastica_:{functions:["_gs_decorrelation","_sym_decorrelation","_ica_def","_ica_par","_logcosh","_exp","_cube","fastica"],types:{FastICA:{methods:[{name:"__init__",updates:[0],returns:"FastICA"},{name:"_fit",updates:[0]},{name:"fit_transform",updates:[0]},{name:"fit",updates:[0]},"transform","inverse_transform"]}}},incremental_pca:{functions:[],types:{IncrementalPCA:{methods:[{name:"__init__",updates:[0],returns:"IncrementalPCA"},{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]}]}}},kernel_pca:{functions:[],types:{KernelPCA:{methods:[{name:"__init__",updates:[0],returns:"KernelPCA"},"_get_kernel",{name:"_fit_transform",updates:[0]},{name:"_fit_inverse_transform",updates:[0]},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","inverse_transform"]}}},nmf:{functions:["norm","trace_dot","_check_init","_beta_divergence","_special_sparse_dot","_compute_regularization","_check_string_param","_beta_loss_to_float","_initialize_nmf","_update_coordinate_descent","_fit_coordinate_descent","_multiplicative_update_w","_multiplicative_update_h",{name:"_fit_multiplicative_update",updates:[1,2]},"non_negative_factorization"],types:{NMF:{methods:[{name:"__init__",updates:[0],returns:"NMF"},{name:"fit_transform",updates:[0]},{name:"fit",updates:[0]},"transform","inverse_transform"]}}},online_lda:{functions:["_update_doc_distribution"],types:{LatentDirichletAllocation:{methods:[{name:"__init__",updates:[0],returns:"LatentDirichletAllocation"},"_check_params",{name:"_init_latent_vars",updates:[0]},"_e_step",{name:"_em_step",updates:[0]},"_check_non_neg_array",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"_unnormalized_transform","transform","_approx_bound","score","_perplexity_precomp_distr","perplexity"]}}},pca:{functions:["_assess_dimension_","_infer_dimension_"],types:{PCA:{methods:[{name:"__init__",updates:[0],returns:"PCA"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},{name:"_fit",updates:[0]},{name:"_fit_full",updates:[0]},{name:"_fit_truncated",updates:[0]},"score_samples","score"]}}},setup:{functions:["configuration"],types:{}},sparse_pca:{functions:[],types:{SparsePCA:{methods:[{name:"__init__",updates:[0],returns:"SparsePCA"},{name:"fit",updates:[0]},"transform"]},MiniBatchSparsePCA:{methods:[{name:"__init__",updates:[0],returns:"MiniBatchSparsePCA"},{name:"fit",updates:[0]},"transform"]}}},truncated_svd:{functions:[],types:{TruncatedSVD:{methods:[{name:"__init__",updates:[0],returns:"TruncatedSVD"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","inverse_transform"]}}}},types:{NMF:{methods:[{name:"__init__",updates:[0],returns:"NMF"},{name:"fit_transform",updates:[0]},{name:"fit",updates:[0]},"transform","inverse_transform"]},PCA:{methods:[{name:"__init__",updates:[0],returns:"PCA"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},{name:"_fit",updates:[0]},{name:"_fit_full",updates:[0]},{name:"_fit_truncated",updates:[0]},"score_samples","score"]},IncrementalPCA:{methods:[{name:"__init__",updates:[0],returns:"IncrementalPCA"},{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]}]},KernelPCA:{methods:[{name:"__init__",updates:[0],returns:"KernelPCA"},"_get_kernel",{name:"_fit_transform",updates:[0]},{name:"_fit_inverse_transform",updates:[0]},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","inverse_transform"]},SparsePCA:{methods:[{name:"__init__",updates:[0],returns:"SparsePCA"},{name:"fit",updates:[0]},"transform"]},MiniBatchSparsePCA:{methods:[{name:"__init__",updates:[0],returns:"MiniBatchSparsePCA"},{name:"fit",updates:[0]},"transform"]},TruncatedSVD:{methods:[{name:"__init__",updates:[0],returns:"TruncatedSVD"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","inverse_transform"]},FastICA:{methods:[{name:"__init__",updates:[0],returns:"FastICA"},{name:"_fit",updates:[0]},{name:"fit_transform",updates:[0]},{name:"fit",updates:[0]},"transform","inverse_transform"]},DictionaryLearning:{methods:[{name:"__init__",updates:[0],returns:"DictionaryLearning"},{name:"fit",updates:[0]},"transform"]},MiniBatchDictionaryLearning:{methods:[{name:"__init__",updates:[0],returns:"MiniBatchDictionaryLearning"},{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]},"transform"]},SparseCoder:{methods:[{name:"__init__",updates:[0],returns:"SparseCoder"},"fit","transform"]},FactorAnalysis:{methods:[{name:"__init__",updates:[0],returns:"FactorAnalysis"},{name:"fit",updates:[0]},"transform","get_covariance","get_precision","score_samples","score"]},LatentDirichletAllocation:{methods:[{name:"__init__",updates:[0],returns:"LatentDirichletAllocation"},"_check_params",{name:"_init_latent_vars",updates:[0]},"_e_step",{name:"_em_step",updates:[0]},"_check_non_neg_array",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"_unnormalized_transform","transform","_approx_bound","score","_perplexity_precomp_distr","perplexity"]}},functions:["non_negative_factorization","fastica","dict_learning","dict_learning_online","sparse_encode"]},ensemble:{modules:{tests:{modules:{test_bagging:{functions:["test_classification","test_sparse_classification","test_regression","test_sparse_regression","test_bootstrap_samples","test_bootstrap_features","test_oob_score_classification","test_oob_score_regression","test_single_estimator","test_error","test_parallel_classification","test_parallel_regression","test_base_estimator","test_bagging_with_pipeline","test_bagging_sample_weight_unsupported_but_passed","test_warm_start","test_warm_start_smaller_n_estimators","test_warm_start_equal_n_estimators","test_warm_start_equivalence","test_warm_start_with_oob_score_fails","test_oob_score_removed_on_warm_start","test_oob_score_consistency","test_max_samples_consistency","test_set_oob_score_label_encoding",{name:"replace",updates:[0]},"test_bagging_regressor_with_missing_inputs","test_bagging_classifier_with_missing_inputs"],types:{CustomSVC:{methods:[{name:"fit",updates:[0]}]},CustomSVR:{methods:[{name:"fit",updates:[0]}]},DummySizeEstimator:{methods:[{name:"fit",updates:[0]}]},DummyZeroEstimator:{methods:[{name:"fit",updates:[0]},"predict"]}}},test_base:{functions:["test_base","test_base_zero_n_estimators","test_base_not_int_n_estimators","test_set_random_states"],types:{AlphaParamPipeline:{methods:["get_params"]},RevParamPipeline:{methods:["get_params"]}}},test_forest:{functions:["check_classification_toy","check_iris_criterion","check_boston_criterion","check_regressor_attributes","check_probability","check_importances","test_importances_asymptotic","check_unfitted_feature_importances","check_oob_score","check_oob_score_raise_error","check_gridsearch","check_parallel","check_pickle","check_multioutput","check_classes_shape","test_random_trees_dense_type","test_random_trees_dense_equal","test_random_hasher_sparse_data","test_parallel_train","test_distribution","check_max_leaf_nodes_max_depth","check_min_samples_split","check_min_samples_leaf","check_min_weight_fraction_leaf","check_sparse_input","check_memory_layout","check_class_weights","check_class_weight_balanced_and_bootstrap_multi_output","check_class_weight_errors","check_warm_start","check_warm_start_clear","check_warm_start_smaller_n_estimators","check_warm_start_equal_n_estimators","check_warm_start_oob","check_decision_path","test_forest_feature_importances_sum","test_forest_degenerate_feature_importances"],types:{MyBackend:{methods:[{name:"__init__",updates:[0],returns:"MyBackend"},{name:"start_call",updates:[0]}]}}},test_gradient_boosting:{functions:["check_classification_toy","test_classifier_parameter_checks","test_regressor_parameter_checks","test_loss_function","check_classification_synthetic","check_boston","check_iris","test_regression_synthetic","test_feature_importances","test_probability_log","test_check_inputs","test_check_inputs_predict","test_check_inputs_predict_stages","test_check_max_features","test_max_feature_regression","test_max_feature_auto","test_staged_predict","test_staged_predict_proba","test_serialization","test_degenerate_targets","test_quantile_loss","test_symbol_labels","test_float_class_labels","test_shape_y","test_mem_layout","test_oob_improvement","test_oob_improvement_raise","test_oob_multilcass_iris","test_verbose_output","test_more_verbose_output","early_stopping_monitor","test_complete_classification","test_complete_regression","test_zero_estimator_reg","test_zero_estimator_clf","test_warm_start_wo_nestimators_change","test_probability_exponential","test_non_uniform_weights_toy_edge_case_reg","test_non_uniform_weights_toy_edge_case_clf","check_sparse_input","test_gradient_boosting_early_stopping","test_gradient_boosting_validation_fraction","test_early_stopping_stratified","_make_multiclass","test_gradient_boosting_with_init_pipeline","test_early_stopping_n_classes","test_gbr_degenerate_feature_importances"],types:{_NoSampleWeightWrapper:{methods:[{name:"__init__",updates:[0],returns:"_NoSampleWeightWrapper"},"fit","predict","predict_proba"]}}},test_gradient_boosting_loss_functions:{functions:["test_binomial_deviance","test_sample_weight_smoke","test_sample_weight_init_estimators","test_weighted_percentile","test_weighted_percentile_equal","test_weighted_percentile_zero_weight","test_quantile_loss_function","test_sample_weight_deviance","test_init_raw_predictions_shapes","test_init_raw_predictions_values"],types:{}},test_iforest:{functions:["test_iforest_average_path_length"],types:{}},test_partial_dependence:{functions:[],types:{}},test_voting:{functions:["test_weights_regressor","test_multilabel","test_sample_weight_kwargs"],types:{ClassifierErrorFit:{methods:["fit"]},MockClassifier:{methods:["fit"]}}},test_weight_boosting:{functions:["test_samme_proba","test_oneclass_adaboost_proba","test_classification_toy","test_regression_toy","test_iris","test_boston","test_staged_predict","test_pickle","test_importances","test_error","test_sample_weight_missing","test_sparse_classification","test_sparse_regression","test_sample_weight_adaboost_regressor","test_multidimensional_X"],types:{MockEstimator:{methods:["predict_proba"]},CustomSVC:{methods:[{name:"fit",updates:[0]}]},CustomSVR:{methods:[{name:"fit",updates:[0]}]},DummyEstimator:{methods:["fit","predict"]}}}},types:{},functions:[]},bagging:{functions:["_generate_indices","_generate_bagging_indices","_parallel_build_estimators","_parallel_predict_proba","_parallel_predict_log_proba","_parallel_decision_function","_parallel_predict_regression"],types:{BaseBagging:{methods:[{name:"fit",updates:[0]},"_parallel_args",{name:"_fit",updates:[0]},"_validate_y","_get_estimators_indices"]},BaggingClassifier:{methods:[{name:"__init__",updates:[],returns:"BaggingClassifier"},"__init__","_validate_estimator",{name:"_set_oob_score",updates:[0]},{name:"_validate_y",updates:[0]},"predict","predict_proba","predict_log_proba",{name:"fit",updates:[0]}]},BaggingRegressor:{methods:[{name:"__init__",updates:[],returns:"BaggingRegressor"},"__init__","predict","_validate_estimator",{name:"_set_oob_score",updates:[0]},{name:"fit",updates:[0]}]}}},base:{functions:["_set_random_states","_partition_estimators"],types:{BaseEnsemble:{methods:[{name:"_validate_estimator",updates:[0]},"_make_estimator","__len__","__getitem__","__iter__"]}}},forest:{functions:["_generate_sample_indices","_generate_unsampled_indices","_parallel_build_trees",{name:"_accumulate_prediction",updates:[2]}],types:{BaseForest:{methods:["apply","decision_path",{name:"fit",updates:[0]},"_validate_y_class_weight","_validate_X_predict"]},ForestClassifier:{methods:[{name:"_set_oob_score",updates:[0]},{name:"_validate_y_class_weight",updates:[0]},"predict","predict_proba","predict_log_proba","apply","decision_path",{name:"fit",updates:[0]}]},ForestRegressor:{methods:["predict",{name:"_set_oob_score",updates:[0]},"apply","decision_path",{name:"fit",updates:[0]}]},RandomForestClassifier:{methods:[{name:"__init__",updates:[0],returns:"RandomForestClassifier"},"predict","predict_proba","predict_log_proba","apply","decision_path",{name:"fit",updates:[0]}]},RandomForestRegressor:{methods:[{name:"__init__",updates:[0],returns:"RandomForestRegressor"},"predict","apply","decision_path",{name:"fit",updates:[0]}]},ExtraTreesClassifier:{methods:[{name:"__init__",updates:[0],returns:"ExtraTreesClassifier"},"predict","predict_proba","predict_log_proba","apply","decision_path",{name:"fit",updates:[0]}]},ExtraTreesRegressor:{methods:[{name:"__init__",updates:[0],returns:"ExtraTreesRegressor"},"predict","apply","decision_path",{name:"fit",updates:[0]}]},RandomTreesEmbedding:{methods:[{name:"__init__",updates:[0],returns:"RandomTreesEmbedding"},"_set_oob_score",{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","apply","decision_path"]}}},gradient_boosting:{functions:[],types:{QuantileEstimator:{methods:[{name:"__init__",updates:[0],returns:"QuantileEstimator"},{name:"fit",updates:[0]},"predict"]},MeanEstimator:{methods:[{name:"fit",updates:[0]},"predict"]},LogOddsEstimator:{methods:[{name:"fit",updates:[0]},"predict"]},ScaledLogOddsEstimator:{methods:[{name:"fit",updates:[0]},"predict"]},PriorProbabilityEstimator:{methods:[{name:"fit",updates:[0]},"predict"]},ZeroEstimator:{methods:[{name:"fit",updates:[0]},"predict","predict_proba"]},LossFunction:{methods:[{name:"__init__",updates:[0],returns:"LossFunction"},"init_estimator",{name:"update_terminal_regions",updates:[5]}]},RegressionLossFunction:{methods:[{name:"__init__",updates:[0],returns:"RegressionLossFunction"},"__init__","init_estimator",{name:"update_terminal_regions",updates:[5]}]},LeastSquaresError:{methods:["init_estimator","__call__","negative_gradient",{name:"update_terminal_regions",updates:[5]},"_update_terminal_region"]},LeastAbsoluteError:{methods:["init_estimator","__call__","negative_gradient","_update_terminal_region",{name:"update_terminal_regions",updates:[5]}]},HuberLossFunction:{methods:[{name:"__init__",updates:[0],returns:"HuberLossFunction"},"init_estimator","__call__",{name:"negative_gradient",updates:[0]},"_update_terminal_region",{name:"update_terminal_regions",updates:[5]}]},QuantileLossFunction:{methods:[{name:"__init__",updates:[0],returns:"QuantileLossFunction"},"init_estimator","__call__","negative_gradient","_update_terminal_region",{name:"update_terminal_regions",updates:[5]}]},ClassificationLossFunction:{methods:["_score_to_proba","init_estimator",{name:"update_terminal_regions",updates:[5]}]},BinomialDeviance:{methods:[{name:"__init__",updates:[],returns:"BinomialDeviance"},"__init__","init_estimator","__call__","negative_gradient","_update_terminal_region","_score_to_proba","_score_to_decision",{name:"update_terminal_regions",updates:[5]}]},MultinomialDeviance:{methods:[{name:"__init__",updates:[],returns:"MultinomialDeviance"},"__init__","init_estimator","__call__","negative_gradient","_update_terminal_region","_score_to_proba","_score_to_decision",{name:"update_terminal_regions",updates:[5]}]},ExponentialLoss:{methods:[{name:"__init__",updates:[],returns:"ExponentialLoss"},"__init__","init_estimator","__call__","negative_gradient","_update_terminal_region","_score_to_proba","_score_to_decision",{name:"update_terminal_regions",updates:[5]}]},VerboseReporter:{methods:[{name:"__init__",updates:[0],returns:"VerboseReporter"},{name:"init",updates:[0]},{name:"update",updates:[0]}]},BaseGradientBoosting:{methods:["_fit_stage",{name:"_check_params",updates:[0]},{name:"_init_state",updates:[0]},{name:"_clear_state",updates:[0]},{name:"_resize_state",updates:[0]},"_is_initialized","_check_initialized",{name:"fit",updates:[0]},"_fit_stages","_make_estimator","_raw_predict_init","_raw_predict","_staged_raw_predict",{name:"_validate_y",updates:[0]},"apply"]},GradientBoostingClassifier:{methods:[{name:"__init__",updates:[],returns:"GradientBoostingClassifier"},"__init__",{name:"_validate_y",updates:[0]},"decision_function","staged_decision_function","predict","staged_predict","predict_proba","predict_log_proba","staged_predict_proba",{name:"fit",updates:[0]},"apply"]},GradientBoostingRegressor:{methods:[{name:"__init__",updates:[],returns:"GradientBoostingRegressor"},"__init__","predict","staged_predict","apply",{name:"fit",updates:[0]}]}}},iforest:{functions:["_average_path_length"],types:{IsolationForest:{methods:[{name:"__init__",updates:[0],returns:"IsolationForest"},"_set_oob_score","_parallel_args",{name:"fit",updates:[0]},"predict","decision_function","score_samples","_compute_chunked_score_samples","_compute_score_samples"]}}},partial_dependence:{functions:["_grid_from_X"],types:{}},setup:{functions:["configuration"],types:{}},voting:{functions:["_parallel_fit_estimator"],types:{_BaseVoting:{methods:["_predict","set_params","get_params"]},VotingClassifier:{methods:[{name:"__init__",updates:[0],returns:"VotingClassifier"},{name:"fit",updates:[0]},"predict","_collect_probas","_predict_proba","transform","set_params","get_params"]},VotingRegressor:{methods:[{name:"__init__",updates:[0],returns:"VotingRegressor"},"fit","predict","transform","set_params","get_params"]}}},weight_boosting:{functions:["_samme_proba"],types:{BaseWeightBoosting:{methods:["_validate_data",{name:"fit",updates:[0,3]},"staged_score"]},AdaBoostClassifier:{methods:[{name:"__init__",updates:[0],returns:"AdaBoostClassifier"},{name:"fit",updates:[0,3]},"_validate_estimator",{name:"_boost",updates:[0]},{name:"_boost_real",updates:[0]},{name:"_boost_discrete",updates:[0]},"predict","staged_predict","decision_function","staged_decision_function","predict_proba","staged_predict_proba","predict_log_proba","staged_score"]},AdaBoostRegressor:{methods:[{name:"__init__",updates:[0],returns:"AdaBoostRegressor"},{name:"fit",updates:[0,3]},"_validate_estimator","_boost","_get_median_predict","predict","staged_predict","staged_score"]}}}},types:{BaseEnsemble:{methods:[{name:"_validate_estimator",updates:[0]},"_make_estimator","__len__","__getitem__","__iter__"]},RandomForestClassifier:{methods:[{name:"__init__",updates:[0],returns:"RandomForestClassifier"},"predict","predict_proba","predict_log_proba","apply","decision_path",{name:"fit",updates:[0]}]},RandomForestRegressor:{methods:[{name:"__init__",updates:[0],returns:"RandomForestRegressor"},"predict","apply","decision_path",{name:"fit",updates:[0]}]},RandomTreesEmbedding:{methods:[{name:"__init__",updates:[0],returns:"RandomTreesEmbedding"},"_set_oob_score",{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","apply","decision_path"]},ExtraTreesClassifier:{methods:[{name:"__init__",updates:[0],returns:"ExtraTreesClassifier"},"predict","predict_proba","predict_log_proba","apply","decision_path",{name:"fit",updates:[0]}]},ExtraTreesRegressor:{methods:[{name:"__init__",updates:[0],returns:"ExtraTreesRegressor"},"predict","apply","decision_path",{name:"fit",updates:[0]}]},BaggingClassifier:{methods:[{name:"__init__",updates:[],returns:"BaggingClassifier"},"__init__","_validate_estimator",{name:"_set_oob_score",updates:[0]},{name:"_validate_y",updates:[0]},"predict","predict_proba","predict_log_proba",{name:"fit",updates:[0]}]},BaggingRegressor:{methods:[{name:"__init__",updates:[],returns:"BaggingRegressor"},"__init__","predict","_validate_estimator",{name:"_set_oob_score",updates:[0]},{name:"fit",updates:[0]}]},IsolationForest:{methods:[{name:"__init__",updates:[0],returns:"IsolationForest"},"_set_oob_score","_parallel_args",{name:"fit",updates:[0]},"predict","decision_function","score_samples","_compute_chunked_score_samples","_compute_score_samples"]},AdaBoostClassifier:{methods:[{name:"__init__",updates:[0],returns:"AdaBoostClassifier"},{name:"fit",updates:[0,3]},"_validate_estimator",{name:"_boost",updates:[0]},{name:"_boost_real",updates:[0]},{name:"_boost_discrete",updates:[0]},"predict","staged_predict","decision_function","staged_decision_function","predict_proba","staged_predict_proba","predict_log_proba","staged_score"]},AdaBoostRegressor:{methods:[{name:"__init__",updates:[0],returns:"AdaBoostRegressor"},{name:"fit",updates:[0,3]},"_validate_estimator","_boost","_get_median_predict","predict","staged_predict","staged_score"]},GradientBoostingClassifier:{methods:[{name:"__init__",updates:[],returns:"GradientBoostingClassifier"},"__init__",{name:"_validate_y",updates:[0]},"decision_function","staged_decision_function","predict","staged_predict","predict_proba","predict_log_proba","staged_predict_proba",{name:"fit",updates:[0]},"apply"]},GradientBoostingRegressor:{methods:[{name:"__init__",updates:[],returns:"GradientBoostingRegressor"},"__init__","predict","staged_predict","apply",{name:"fit",updates:[0]}]},VotingClassifier:{methods:[{name:"__init__",updates:[0],returns:"VotingClassifier"},{name:"fit",updates:[0]},"predict","_collect_probas","_predict_proba","transform","set_params","get_params"]},VotingRegressor:{methods:[{name:"__init__",updates:[0],returns:"VotingRegressor"},"fit","predict","transform","set_params","get_params"]}},functions:[]},experimental:{modules:{tests:{modules:{test_enable_hist_gradient_boosting:{functions:["test_imports_strategies"],types:{}},test_enable_iterative_imputer:{functions:["test_imports_strategies"],types:{}}},types:{},functions:[]},enable_hist_gradient_boosting:{functions:[],types:{}},enable_iterative_imputer:{functions:[],types:{}}},types:{},functions:[]},externals:{modules:{joblib:{modules:{numpy_pickle:{functions:[],types:{}}},types:{},functions:[]},conftest:{functions:["pytest_ignore_collect"],types:{}},setup:{functions:["configuration"],types:{}},six:{functions:[{name:"_add_doc",updates:[0]},"_import_module","add_move","remove_move","iterkeys","itervalues","iteritems","iterlists","with_metaclass","add_metaclass"],types:{X:{methods:["__len__"]},_LazyDescr:{methods:[{name:"__init__",updates:[0],returns:"_LazyDescr"},"__get__"]},MovedModule:{methods:[{name:"__init__",updates:[0],returns:"MovedModule"},"_resolve"]},MovedAttribute:{methods:[{name:"__init__",updates:[0],returns:"MovedAttribute"},"_resolve"]},_MovedItems:{methods:[]},Module_six_moves_urllib_parse:{methods:[]},Module_six_moves_urllib_error:{methods:[]},Module_six_moves_urllib_request:{methods:[]},Module_six_moves_urllib_response:{methods:[]},Module_six_moves_urllib_robotparser:{methods:[]},Module_six_moves_urllib:{methods:[]},Iterator:{methods:["next"]}}}},types:{},functions:[]},feature_extraction:{modules:{tests:{modules:{test_dict_vectorizer:{functions:["test_feature_selection","test_one_of_k","test_unseen_or_no_features","test_deterministic_vocabulary"],types:{}},test_feature_hasher:{functions:["test_feature_hasher_dicts","test_feature_hasher_strings","test_feature_hasher_pairs","test_feature_hasher_pairs_with_string_values","test_hash_empty_input","test_hasher_invalid_input","test_hasher_set_params","test_hasher_zeros","test_hash_collisions"],types:{}},test_image:{functions:["test_img_to_graph","test_grid_to_graph","_downsampled_face","_orange_face","_make_images","test_extract_patches_all","test_extract_patches_all_color","test_extract_patches_all_rect","test_extract_patches_max_patches","test_extract_patch_same_size_image","test_extract_patches_less_than_max_patches","test_reconstruct_patches_perfect","test_reconstruct_patches_perfect_color","test_patch_extractor_fit","test_patch_extractor_max_patches","test_patch_extractor_max_patches_default","test_patch_extractor_all_patches","test_patch_extractor_color","test_extract_patches_strided","test_extract_patches_square","test_width_patch"],types:{}},test_text:{functions:["uppercase","strip_eacute","split_tokenize","lazy_analyze","test_strip_accents","test_to_ascii","test_word_analyzer_unigrams_and_bigrams","test_unicode_decode_error","test_char_ngram_analyzer","test_char_wb_ngram_analyzer","test_word_ngram_analyzer","test_countvectorizer_custom_vocabulary","test_countvectorizer_custom_vocabulary_pipeline","test_countvectorizer_custom_vocabulary_repeated_indices","test_countvectorizer_custom_vocabulary_gap_index","test_countvectorizer_stop_words","test_countvectorizer_empty_vocabulary","test_fit_countvectorizer_twice","test_tf_idf_smoothing","test_tfidf_no_smoothing","test_sublinear_tf","test_vectorizer","test_tfidf_vectorizer_setters","test_feature_names","test_count_vectorizer_max_features","test_vectorizer_max_df","test_vectorizer_min_df","test_count_binary_occurrences","test_vectorizer_pipeline_cross_validation","test_tfidf_vectorizer_with_fixed_vocabulary","test_pickling_vectorizer","test_countvectorizer_vocab_sets_when_pickling","test_countvectorizer_vocab_dicts_when_pickling","test_stop_words_removal","test_pickling_transformer","test_transformer_idf_setter","test_tfidf_vectorizer_setter","test_tfidfvectorizer_invalid_idf_attr","test_non_unique_vocab","test_tfidfvectorizer_binary","test_tfidfvectorizer_export_idf","test_vectorizer_vocab_clone","test_tfidf_transformer_sparse","_check_stop_words_consistency"],types:{CustomEstimator:{methods:["build_preprocessor"]}}}},types:{},functions:[]},dict_vectorizer:{functions:["_tosequence"],types:{DictVectorizer:{methods:[{name:"__init__",updates:[0],returns:"DictVectorizer"},{name:"fit",updates:[0]},{name:"_transform",updates:[0]},{name:"fit_transform",updates:[0]},"inverse_transform",{name:"transform",updates:[0]},"get_feature_names",{name:"restrict",updates:[0]},"_more_tags"]}}},hashing:{functions:["_iteritems"],types:{FeatureHasher:{methods:[{name:"__init__",updates:[0],returns:"FeatureHasher"},"fit","transform","_more_tags"]}}},image:{functions:["_make_edges_3d","_compute_gradient_3d","_mask_edges_weights","_to_graph","img_to_graph","grid_to_graph","_compute_n_patches","extract_patches","extract_patches_2d","reconstruct_from_patches_2d"],types:{PatchExtractor:{methods:[{name:"__init__",updates:[0],returns:"PatchExtractor"},"fit",{name:"transform",updates:[0]},"_more_tags"]}}},setup:{functions:["configuration"],types:{}},stop_words:{functions:[],types:{}},text:{functions:["strip_accents_unicode","strip_accents_ascii","strip_tags","_check_stop_list","_document_frequency","_make_int_array"],types:{VectorizerMixin:{methods:["decode","_word_ngrams","_char_ngrams","_char_wb_ngrams","build_preprocessor","build_tokenizer","get_stop_words",{name:"_check_stop_words_consistency",updates:[0]},"_validate_custom_analyzer",{name:"build_analyzer",updates:[0]},{name:"_validate_vocabulary",updates:[0]},"_check_vocabulary","_validate_params"]},HashingVectorizer:{methods:[{name:"__init__",updates:[0],returns:"HashingVectorizer"},"partial_fit","fit","transform","fit_transform","_get_hasher","_more_tags","decode","build_preprocessor","build_tokenizer","get_stop_words",{name:"build_analyzer",updates:[0]}]},CountVectorizer:{methods:[{name:"__init__",updates:[0],returns:"CountVectorizer"},{name:"_sort_features",updates:[1,2]},{name:"_limit_features",updates:[2]},"_count_vocab",{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","inverse_transform","get_feature_names","_more_tags","decode","build_preprocessor","build_tokenizer","get_stop_words",{name:"build_analyzer",updates:[0]}]},TfidfTransformer:{methods:[{name:"__init__",updates:[0],returns:"TfidfTransformer"},{name:"fit",updates:[0]},{name:"transform",updates:[1]},"_more_tags"]},TfidfVectorizer:{methods:[{name:"__init__",updates:[0],returns:"TfidfVectorizer"},"_check_params",{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","_more_tags","inverse_transform","get_feature_names","decode","build_preprocessor","build_tokenizer","get_stop_words",{name:"build_analyzer",updates:[0]}]}}}},types:{DictVectorizer:{methods:[{name:"__init__",updates:[0],returns:"DictVectorizer"},{name:"fit",updates:[0]},{name:"_transform",updates:[0]},{name:"fit_transform",updates:[0]},"inverse_transform",{name:"transform",updates:[0]},"get_feature_names",{name:"restrict",updates:[0]},"_more_tags"]},FeatureHasher:{methods:[{name:"__init__",updates:[0],returns:"FeatureHasher"},"fit","transform","_more_tags"]}},functions:["img_to_graph","grid_to_graph"]},feature_selection:{modules:{tests:{modules:{test_base:{functions:["test_transform_dense","test_transform_sparse","test_inverse_transform_dense","test_inverse_transform_sparse","test_get_support"],types:{StepSelector:{methods:[{name:"__init__",updates:[0],returns:"StepSelector"},{name:"fit",updates:[0]},"_get_support_mask"]}}},test_chi2:{functions:["mkchi2","test_chi2","test_chi2_coo","test_chi2_negative","test_chi2_unused_feature","test_chisquare"],types:{}},test_feature_select:{functions:["test_f_oneway_vs_scipy_stats","test_f_oneway_ints","test_f_classif","test_f_regression","test_f_regression_input_dtype","test_f_regression_center","test_f_classif_multi_class","test_select_percentile_classif","test_select_percentile_classif_sparse","test_select_kbest_classif","test_select_kbest_all","test_select_kbest_zero","test_select_heuristics_classif","assert_best_scores_kept","test_select_percentile_regression","test_select_percentile_regression_full","test_invalid_percentile","test_select_kbest_regression","test_select_heuristics_regression","test_boundary_case_ch2","test_select_fdr_regression","test_select_fwe_regression","test_selectkbest_tiebreaking","test_selectpercentile_tiebreaking","test_tied_pvalues","test_scorefunc_multilabel","test_tied_scores","test_nans","test_score_func_error","test_invalid_k","test_f_classif_constant_feature","test_no_feature_selected","test_mutual_info_classif","test_mutual_info_regression"],types:{}},test_from_model:{functions:["test_max_features","test_max_features_tiebreak","test_threshold_and_max_features","test_coef_default_threshold","test_calling_fit_reinitializes","test_threshold_string"],types:{FixedImportanceEstimator:{methods:[{name:"__init__",updates:[0],returns:"FixedImportanceEstimator"},{name:"fit",updates:[0]}]}}},test_mutual_info:{functions:["test_compute_mi_dd","test_compute_mi_cc","test_compute_mi_cd","test_compute_mi_cd_unique_label","test_mutual_info_classif_discrete","test_mutual_info_regression","test_mutual_info_classif_mixed","test_mutual_info_options"],types:{}},test_rfe:{functions:["test_rfe_features_importance","test_rfe","test_rfe_mockclassifier","test_rfecv","test_rfecv_mockclassifier","test_rfecv_verbose_output","test_rfecv_grid_scores_size","test_rfe_min_step","test_number_of_subsets_of_features"],types:{MockClassifier:{methods:[{name:"__init__",updates:[0],returns:"MockClassifier"},{name:"fit",updates:[0]},"predict","score","get_params","set_params"]}}},test_variance_threshold:{functions:["test_zero_variance","test_variance_threshold"],types:{}}},types:{},functions:[]},base:{functions:[],types:{SelectorMixin:{methods:["get_support","transform","inverse_transform"]}}},from_model:{functions:["_get_feature_importances","_calculate_threshold"],types:{SelectFromModel:{methods:[{name:"__init__",updates:[0],returns:"SelectFromModel"},"_get_support_mask",{name:"fit",updates:[0]}]}}},mutual_info_:{functions:["_compute_mi_cc","_compute_mi_cd","_compute_mi","_iterate_columns",{name:"_estimate_mi",updates:[0]},"mutual_info_regression","mutual_info_classif"],types:{}},rfe:{functions:["_rfe_single_fit"],types:{RFE:{methods:[{name:"__init__",updates:[0],returns:"RFE"},{name:"fit",updates:[0]},{name:"_fit",updates:[0]},"_get_support_mask","_more_tags"]},RFECV:{methods:[{name:"__init__",updates:[0],returns:"RFECV"},{name:"fit",updates:[0]}]}}},univariate_selection:{functions:[{name:"_clean_nans",updates:[0]},"f_oneway","f_classif","_chisquare","chi2","f_regression"],types:{_BaseFilter:{methods:[{name:"__init__",updates:[0],returns:"_BaseFilter"},{name:"fit",updates:[0]},"_check_params"]},SelectPercentile:{methods:[{name:"__init__",updates:[0],returns:"SelectPercentile"},"_check_params","_get_support_mask",{name:"fit",updates:[0]}]},SelectKBest:{methods:[{name:"__init__",updates:[0],returns:"SelectKBest"},"_check_params","_get_support_mask",{name:"fit",updates:[0]}]},SelectFpr:{methods:[{name:"__init__",updates:[0],returns:"SelectFpr"},"_get_support_mask",{name:"fit",updates:[0]}]},SelectFdr:{methods:[{name:"__init__",updates:[0],returns:"SelectFdr"},"_get_support_mask",{name:"fit",updates:[0]}]},SelectFwe:{methods:[{name:"__init__",updates:[0],returns:"SelectFwe"},"_get_support_mask",{name:"fit",updates:[0]}]},GenericUnivariateSelect:{methods:[{name:"__init__",updates:[0],returns:"GenericUnivariateSelect"},"_make_selector","_check_params","_get_support_mask",{name:"fit",updates:[0]}]}}},variance_threshold:{functions:[],types:{VarianceThreshold:{methods:[{name:"__init__",updates:[0],returns:"VarianceThreshold"},{name:"fit",updates:[0]},"_get_support_mask"]}}}},types:{SelectPercentile:{methods:[{name:"__init__",updates:[0],returns:"SelectPercentile"},"_check_params","_get_support_mask",{name:"fit",updates:[0]}]},SelectKBest:{methods:[{name:"__init__",updates:[0],returns:"SelectKBest"},"_check_params","_get_support_mask",{name:"fit",updates:[0]}]},SelectFpr:{methods:[{name:"__init__",updates:[0],returns:"SelectFpr"},"_get_support_mask",{name:"fit",updates:[0]}]},SelectFdr:{methods:[{name:"__init__",updates:[0],returns:"SelectFdr"},"_get_support_mask",{name:"fit",updates:[0]}]},SelectFwe:{methods:[{name:"__init__",updates:[0],returns:"SelectFwe"},"_get_support_mask",{name:"fit",updates:[0]}]},GenericUnivariateSelect:{methods:[{name:"__init__",updates:[0],returns:"GenericUnivariateSelect"},"_make_selector","_check_params","_get_support_mask",{name:"fit",updates:[0]}]},VarianceThreshold:{methods:[{name:"__init__",updates:[0],returns:"VarianceThreshold"},{name:"fit",updates:[0]},"_get_support_mask"]},RFE:{methods:[{name:"__init__",updates:[0],returns:"RFE"},{name:"fit",updates:[0]},{name:"_fit",updates:[0]},"_get_support_mask","_more_tags"]},RFECV:{methods:[{name:"__init__",updates:[0],returns:"RFECV"},{name:"fit",updates:[0]}]},SelectFromModel:{methods:[{name:"__init__",updates:[0],returns:"SelectFromModel"},"_get_support_mask",{name:"fit",updates:[0]}]}},functions:["chi2","f_classif","f_oneway","f_regression","mutual_info_regression","mutual_info_classif"]},gaussian_process:{modules:{tests:{modules:{test_gpc:{functions:["f","test_random_starts"],types:{}},test_gpr:{functions:["f","test_no_optimizer","test_anisotropic_kernel","test_random_starts","test_y_multioutput","test_gpr_correct_error_message","test_no_fit_default_predict"],types:{}},test_kernels:{functions:["test_kernel_operator_commutative","test_kernel_anisotropic","check_hyperparameters_equal","test_matern_kernel"],types:{}}},types:{},functions:[]},correlation_models:{functions:[],types:{}},gpc:{functions:[],types:{_BinaryGaussianProcessClassifierLaplace:{methods:[{name:"__init__",updates:[0],returns:"_BinaryGaussianProcessClassifierLaplace"},{name:"fit",updates:[0]},"predict","predict_proba",{name:"log_marginal_likelihood",updates:[0]},{name:"_posterior_mode",updates:[0]},"_constrained_optimization"]},GaussianProcessClassifier:{methods:[{name:"__init__",updates:[0],returns:"GaussianProcessClassifier"},{name:"fit",updates:[0]},"predict","predict_proba","log_marginal_likelihood"]}}},gpr:{functions:[],types:{GaussianProcessRegressor:{methods:[{name:"__init__",updates:[0],returns:"GaussianProcessRegressor"},{name:"fit",updates:[0]},{name:"predict",updates:[0]},{name:"sample_y",updates:[0]},"log_marginal_likelihood","_constrained_optimization"]}}},kernels:{functions:["_check_length_scale","_approx_fprime"],types:{Hyperparameter:{methods:["__new__","__eq__"]},Kernel:{methods:["get_params","set_params","clone_with_theta","__add__","__radd__","__mul__","__rmul__","__pow__","__eq__","__repr__"]},NormalizedKernelMixin:{methods:["diag"]},StationaryKernelMixin:{methods:["is_stationary"]},CompoundKernel:{methods:[{name:"__init__",updates:[0],returns:"CompoundKernel"},"get_params","__call__","__eq__","is_stationary","diag","set_params","clone_with_theta"]},KernelOperator:{methods:[{name:"__init__",updates:[0],returns:"KernelOperator"},"get_params","__eq__","is_stationary","set_params","clone_with_theta"]},Sum:{methods:["__call__","diag","__repr__","get_params","is_stationary","set_params","clone_with_theta"]},Product:{methods:["__call__","diag","__repr__","get_params","is_stationary","set_params","clone_with_theta"]},Exponentiation:{methods:[{name:"__init__",updates:[0],returns:"Exponentiation"},"get_params","__eq__","__call__","diag","__repr__","is_stationary","set_params","clone_with_theta"]},ConstantKernel:{methods:[{name:"__init__",updates:[0],returns:"ConstantKernel"},"__call__","diag","__repr__","is_stationary","get_params","set_params","clone_with_theta"]},WhiteKernel:{methods:[{name:"__init__",updates:[0],returns:"WhiteKernel"},"__call__","diag","__repr__","is_stationary","get_params","set_params","clone_with_theta"]},RBF:{methods:[{name:"__init__",updates:[0],returns:"RBF"},"__call__","__repr__","is_stationary","diag","get_params","set_params","clone_with_theta"]},Matern:{methods:[{name:"__init__",updates:[0],returns:"Matern"},"__call__","__repr__","is_stationary","diag","get_params","set_params","clone_with_theta"]},RationalQuadratic:{methods:[{name:"__init__",updates:[0],returns:"RationalQuadratic"},"__call__","__repr__","is_stationary","diag","get_params","set_params","clone_with_theta"]},ExpSineSquared:{methods:[{name:"__init__",updates:[0],returns:"ExpSineSquared"},"__call__","__repr__","is_stationary","diag","get_params","set_params","clone_with_theta"]},DotProduct:{methods:[{name:"__init__",updates:[0],returns:"DotProduct"},"__call__","diag","is_stationary","__repr__","get_params","set_params","clone_with_theta"]},PairwiseKernel:{methods:[{name:"__init__",updates:[0],returns:"PairwiseKernel"},"__call__","diag","is_stationary","__repr__","get_params","set_params","clone_with_theta"]}}},regression_models:{functions:[],types:{}}},types:{GaussianProcessRegressor:{methods:[{name:"__init__",updates:[0],returns:"GaussianProcessRegressor"},{name:"fit",updates:[0]},{name:"predict",updates:[0]},{name:"sample_y",updates:[0]},"log_marginal_likelihood","_constrained_optimization"]},GaussianProcessClassifier:{methods:[{name:"__init__",updates:[0],returns:"GaussianProcessClassifier"},{name:"fit",updates:[0]},"predict","predict_proba","log_marginal_likelihood"]}},functions:[]},impute:{modules:{tests:{modules:{test_impute:{functions:["_check_statistics","test_imputation_shape","safe_median","safe_mean","test_imputation_mean_median","test_imputation_median_special_cases","test_imputation_most_frequent","test_imputation_constant_integer","test_imputation_copy","test_iterative_imputer_zero_iters","test_iterative_imputer_verbose","test_iterative_imputer_all_missing","test_iterative_imputer_clip","test_iterative_imputer_clip_truncnorm","test_iterative_imputer_truncated_normal_posterior","test_iterative_imputer_transform_stochasticity","test_iterative_imputer_no_missing","test_iterative_imputer_rank_one","test_iterative_imputer_additive_matrix","test_iterative_imputer_early_stopping","test_iterative_imputer_catch_warning","test_missing_indicator_string","test_missing_indicator_no_missing","test_missing_indicator_sparse_no_explicit_zeros"],types:{}}},types:{},functions:[]}},types:{},functions:[]},inspection:{modules:{tests:{modules:{test_partial_dependence:{functions:["test_grid_from_X","test_warning_recursion_non_constant_init","test_partial_dependence_sample_weight","test_plot_partial_dependence","test_plot_partial_dependence_multiclass","test_plot_partial_dependence_multioutput","test_plot_partial_dependence_fig"],types:{NoPredictProbaNoDecisionFunction:{methods:[{name:"fit",updates:[0]}]}}}},types:{},functions:[]},partial_dependence:{functions:["_grid_from_X","_partial_dependence_recursion","_partial_dependence_brute","partial_dependence","plot_partial_dependence"],types:{}}},types:{},functions:["partial_dependence","plot_partial_dependence"]},linear_model:{modules:{tests:{modules:{test_base:{functions:["test_linear_regression","test_linear_regression_sample_weights","test_raises_value_error_if_sample_weights_greater_than_1d","test_fit_intercept","test_linear_regression_sparse","test_linear_regression_multiple_outcome","test_linear_regression_sparse_multiple_outcome","test_preprocess_data","test_preprocess_data_multioutput","test_preprocess_data_weighted","test_sparse_preprocess_data_with_return_mean","test_csr_preprocess_data","test_dtype_preprocess_data","test_rescale_data","test_fused_types_make_dataset"],types:{}},test_bayes:{functions:["test_n_iter","test_bayesian_ridge_scores","test_bayesian_ridge_score_values","test_bayesian_ridge_parameter","test_bayesian_sample_weights","test_toy_bayesian_ridge_object","test_prediction_bayesian_ridge_ard_with_constant_input","test_std_bayesian_ridge_ard_with_constant_input","test_update_of_sigma_in_ard","test_toy_ard_object","test_ard_accuracy_on_easy_problem","test_return_std"],types:{}},test_coordinate_descent:{functions:["test_lasso_zero","test_lasso_toy","test_enet_toy","build_dataset","test_lasso_cv_with_some_model_selection","test_lasso_cv_positive_constraint","test_lasso_path_return_models_vs_new_return_gives_same_coefficients","test_warm_start","test_lasso_alpha_warning","test_lasso_positive_constraint","test_enet_positive_constraint","test_enet_cv_positive_constraint","test_multi_task_lasso_and_enet","test_lasso_readonly_data","test_multi_task_lasso_readonly_data","test_enet_multitarget","test_multioutput_enetcv_error","test_warm_start_convergence","test_warm_start_convergence_with_regularizer_decrement","test_random_descent","test_enet_path_positive","test_sparse_dense_descent_paths","test_check_input_false","test_enet_copy_X_False_check_input_False","test_overrided_gram_matrix","test_enet_float_precision","test_enet_l1_ratio","test_coef_shape_not_zero","test_warm_start_multitask_lasso","test_convergence_warnings","test_sparse_input_convergence_warning"],types:{}},test_huber:{functions:["make_regression_with_outliers","test_huber_equals_lr_for_high_epsilon","test_huber_max_iter","test_huber_gradient","test_huber_sample_weights","test_huber_sparse","test_huber_scaling_invariant","test_huber_warm_start","test_huber_better_r2_score","test_huber_bool"],types:{}},test_least_angle:{functions:["test_simple","test_simple_precomputed","_assert_same_lars_path_result","test_x_none_gram_none_raises_value_error","test_all_precomputed","test_collinearity","test_no_path","test_no_path_precomputed","test_no_path_all_precomputed","test_singular_matrix","test_rank_deficient_design","test_lasso_lars_vs_lasso_cd","test_lasso_lars_vs_lasso_cd_early_stopping","test_lasso_lars_path_length","test_lasso_lars_vs_lasso_cd_ill_conditioned","test_lasso_lars_vs_lasso_cd_ill_conditioned2","test_lars_add_features","test_lars_n_nonzero_coefs","test_lars_cv_max_iter","test_lasso_lars_ic","test_lars_path_readonly_data","test_lasso_lars_vs_lasso_cd_positive","test_lasso_lars_vs_R_implementation"],types:{}},test_logistic:{functions:["check_predictions","test_logistic_cv_score_does_not_warn_by_default","test_predict_iris","test_multinomial_binary_probabilities","test_consistency_path","test_logistic_regression_path_convergence_fail","test_liblinear_dual_random_state","test_logistic_loss_and_grad","test_logistic_grad_hess","test_intercept_logistic_helper","test_ovr_multinomial_iris","test_logistic_regression_solvers","test_logistic_regression_solvers_multiclass","_compute_class_weight_dictionary","test_logistic_regression_class_weights","test_multinomial_grad_hess","test_liblinear_decision_function_zero","test_logreg_intercept_scaling","test_logreg_l1","test_logreg_l1_sparse_data","test_logreg_predict_proba_multinomial","test_max_iter","test_saga_vs_liblinear","test_warm_start_converge_LR","test_elastic_net_coeffs","test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr","test_logistic_regression_path_coefs_multinomial","test_logistic_regression_path_deprecation"],types:{MockScorer:{methods:[{name:"__init__",updates:[0],returns:"MockScorer"},{name:"__call__",updates:[0]}]}}},test_omp:{functions:["test_correct_shapes","test_correct_shapes_gram","test_n_nonzero_coefs","test_tol","test_with_without_gram","test_with_without_gram_tol","test_unreachable_accuracy","test_bad_input","test_perfect_signal_recovery","test_orthogonal_mp_gram_readonly","test_estimator","test_identical_regressors","test_swapped_regressors","test_no_atoms","test_omp_path","test_omp_return_path_prop_with_gram","test_omp_cv","test_omp_reaches_least_squares"],types:{}},test_passive_aggressive:{functions:["test_classifier_undefined_methods","test_regressor_undefined_methods"],types:{MyPassiveAggressive:{methods:[{name:"__init__",updates:[0],returns:"MyPassiveAggressive"},{name:"fit",updates:[0]},"project"]}}},test_perceptron:{functions:["test_undefined_methods"],types:{MyPerceptron:{methods:[{name:"__init__",updates:[0],returns:"MyPerceptron"},{name:"fit",updates:[0]},"project","predict"]}}},test_ransac:{functions:["test_ransac_inliers_outliers","test_ransac_is_data_valid","test_ransac_is_model_valid","test_ransac_max_trials","test_ransac_stop_n_inliers","test_ransac_stop_score","test_ransac_score","test_ransac_predict","test_ransac_resid_thresh_no_inliers","test_ransac_no_valid_data","test_ransac_no_valid_model","test_ransac_exceed_max_skips","test_ransac_warn_exceed_max_skips","test_ransac_sparse_coo","test_ransac_sparse_csr","test_ransac_sparse_csc","test_ransac_none_estimator","test_ransac_min_n_samples","test_ransac_default_residual_threshold","test_ransac_dynamic_max_trials","test_ransac_fit_sample_weight"],types:{}},test_ridge:{functions:["test_primal_dual_relationship","test_ridge_singular","test_ridge_regression_sample_weights","test_ridge_regression_convergence_fail","test_ridge_sample_weights","test_ridge_shapes","test_ridge_intercept","test_toy_ridge_object","test_ridge_vs_lstsq","test_ridge_individual_penalties","_make_sparse_offset_regression","_test_ridge_loo","_test_ridge_cv_normalize","_test_ridge_cv","_test_ridge_diabetes","_test_multi_ridge_diabetes","_test_ridge_classifiers","_test_tolerance","check_dense_sparse","test_ridge_sparse_svd","test_class_weights","test_raises_value_error_if_sample_weights_greater_than_1d","test_sparse_design_with_sample_weights","test_raises_value_error_if_solver_not_supported","test_sparse_cg_max_iter","test_ridge_fit_intercept_sparse","test_ridge_classifier_no_support_multilabel","test_dtype_match_cholesky"],types:{}},test_sag:{functions:["log_dloss","log_loss","squared_dloss","squared_loss","get_pobj","sag","sag_sparse","get_step_size","test_classifier_matching","test_regressor_matching","test_get_auto_step_size","test_sag_regressor","test_multinomial_loss","test_multinomial_loss_ground_truth"],types:{}},test_sgd:{functions:[{name:"_update_kwargs",updates:[0]},"SGDClassifier","SGDRegressor","SparseSGDClassifier","SparseSGDRegressor","asgd","_test_warm_start","test_l1_ratio","test_underflow_or_overlow","test_numerical_stability_large_gradient","test_tol_parameter","_test_gradient_common","test_gradient_hinge","test_gradient_squared_hinge","test_gradient_log","test_gradient_squared_loss","test_gradient_huber","test_gradient_modified_huber","test_gradient_epsilon_insensitive","test_gradient_squared_epsilon_insensitive","test_multi_thread_multi_class_and_early_stopping","test_multi_core_gridsearch_and_early_stopping"],types:{_SparseSGDClassifier:{methods:["fit","partial_fit","decision_function","predict_proba"]},_SparseSGDRegressor:{methods:["fit","partial_fit","decision_function"]}}},test_sparse_coordinate_descent:{functions:["test_sparse_coef","test_normalize_option","test_lasso_zero","test_enet_toy_list_input","test_enet_toy_explicit_sparse_input","make_sparse_data","_test_sparse_enet_not_as_toy_dataset","test_sparse_enet_not_as_toy_dataset","test_sparse_lasso_not_as_toy_dataset","test_enet_multitarget","test_path_parameters","test_same_output_sparse_dense_lasso_and_enet_cv","test_same_multiple_output_sparse_dense","test_sparse_enet_coordinate_descent"],types:{}},test_theil_sen:{functions:["gen_toy_problem_1d","gen_toy_problem_2d","gen_toy_problem_4d","test_modweiszfeld_step_1d","test_modweiszfeld_step_2d","test_spatial_median_1d","test_spatial_median_2d","test_theil_sen_1d","test_theil_sen_1d_no_intercept","test_theil_sen_2d","test_calc_breakdown_point","test_checksubparams_negative_subpopulation","test_checksubparams_too_few_subsamples","test_checksubparams_too_many_subsamples","test_checksubparams_n_subsamples_if_less_samples_than_features","test_subpopulation","test_subsamples","test_verbosity","test_theil_sen_parallel","test_less_samples_than_features"],types:{}}},types:{},functions:[]},base:{functions:["make_dataset","_preprocess_data","_rescale_data","_pre_fit"],types:{LinearModel:{methods:["_decision_function","predict",{name:"_set_intercept",updates:[0]}]},LinearClassifierMixin:{methods:["decision_function","predict","_predict_proba_lr"]},SparseCoefMixin:{methods:[{name:"densify",updates:[0]},{name:"sparsify",updates:[0]}]},LinearRegression:{methods:[{name:"__init__",updates:[0],returns:"LinearRegression"},{name:"fit",updates:[0]},"predict"]}}},bayes:{functions:[],types:{BayesianRidge:{methods:[{name:"__init__",updates:[0],returns:"BayesianRidge"},{name:"fit",updates:[0]},"predict","_update_coef_","_log_marginal_likelihood"]},ARDRegression:{methods:[{name:"__init__",updates:[0],returns:"ARDRegression"},{name:"fit",updates:[0]},"predict"]}}},coordinate_descent:{functions:["_alpha_grid","lasso_path","enet_path",{name:"_path_residuals",updates:[5]}],types:{ElasticNet:{methods:[{name:"__init__",updates:[0],returns:"ElasticNet"},{name:"fit",updates:[0]},"_decision_function"]},Lasso:{methods:[{name:"__init__",updates:[0],returns:"Lasso"},"__init__",{name:"fit",updates:[0]}]},LinearModelCV:{methods:[{name:"fit",updates:[0]}]},LassoCV:{methods:[{name:"__init__",updates:[],returns:"LassoCV"},"__init__",{name:"fit",updates:[0]}]},ElasticNetCV:{methods:[{name:"__init__",updates:[0],returns:"ElasticNetCV"},{name:"fit",updates:[0]}]},MultiTaskElasticNet:{methods:[{name:"__init__",updates:[0],returns:"MultiTaskElasticNet"},{name:"fit",updates:[0]},"_more_tags"]},MultiTaskLasso:{methods:[{name:"__init__",updates:[0],returns:"MultiTaskLasso"},{name:"fit",updates:[0]}]},MultiTaskElasticNetCV:{methods:[{name:"__init__",updates:[0],returns:"MultiTaskElasticNetCV"},"_more_tags",{name:"fit",updates:[0]}]},MultiTaskLassoCV:{methods:[{name:"__init__",updates:[],returns:"MultiTaskLassoCV"},"__init__","_more_tags",{name:"fit",updates:[0]}]}}},huber:{functions:["_huber_loss_and_gradient"],types:{HuberRegressor:{methods:[{name:"__init__",updates:[0],returns:"HuberRegressor"},{name:"fit",updates:[0]}]}}},least_angle:{functions:["lars_path","lars_path_gram",{name:"_lars_path_solver",updates:[3]},"_check_copy_and_writeable",{name:"_lars_path_residues",updates:[0]}],types:{Lars:{methods:[{name:"__init__",updates:[0],returns:"Lars"},{name:"_fit",updates:[0]},{name:"fit",updates:[0]}]},LassoLars:{methods:[{name:"__init__",updates:[0],returns:"LassoLars"},{name:"fit",updates:[0]}]},LarsCV:{methods:[{name:"__init__",updates:[0],returns:"LarsCV"},{name:"fit",updates:[0]}]},LassoLarsCV:{methods:[{name:"__init__",updates:[0],returns:"LassoLarsCV"},{name:"fit",updates:[0]}]},LassoLarsIC:{methods:[{name:"__init__",updates:[0],returns:"LassoLarsIC"},{name:"fit",updates:[0]}]}}},logistic:{functions:["_intercept_dot","_logistic_loss_and_grad","_logistic_loss","_logistic_grad_hess","_multinomial_loss","_multinomial_loss_grad","_multinomial_grad_hess","_check_solver","_check_multi_class","_logistic_regression_path","_log_reg_scoring_path"],types:{LogisticRegression:{methods:[{name:"__init__",updates:[0],returns:"LogisticRegression"},{name:"fit",updates:[0]},"score","predict","predict_proba","predict_log_proba"]},LogisticRegressionCV:{methods:[{name:"__init__",updates:[0],returns:"LogisticRegressionCV"},{name:"fit",updates:[0]},"score","predict","predict_proba","predict_log_proba"]}}},omp:{functions:["_cholesky_omp",{name:"_gram_omp",updates:[0,1]},"orthogonal_mp","orthogonal_mp_gram",{name:"_omp_path_residues",updates:[0]}],types:{OrthogonalMatchingPursuit:{methods:[{name:"__init__",updates:[0],returns:"OrthogonalMatchingPursuit"},{name:"fit",updates:[0]}]},OrthogonalMatchingPursuitCV:{methods:[{name:"__init__",updates:[0],returns:"OrthogonalMatchingPursuitCV"},{name:"fit",updates:[0]}]}}},passive_aggressive:{functions:[],types:{PassiveAggressiveClassifier:{methods:[{name:"__init__",updates:[0],returns:"PassiveAggressiveClassifier"},"partial_fit","fit"]},PassiveAggressiveRegressor:{methods:[{name:"__init__",updates:[0],returns:"PassiveAggressiveRegressor"},"partial_fit","fit"]}}},perceptron:{functions:[],types:{Perceptron:{methods:[{name:"__init__",updates:[],returns:"Perceptron"},"__init__"]}}},ransac:{functions:["_dynamic_max_trials"],types:{RANSACRegressor:{methods:[{name:"__init__",updates:[0],returns:"RANSACRegressor"},{name:"fit",updates:[0]},"predict","score"]}}},ridge:{functions:["_solve_sparse_cg","_solve_lsqr","_solve_cholesky","_solve_cholesky_kernel","_solve_svd","_get_valid_accept_sparse","ridge_regression","_ridge_regression","_check_gcv_mode","_find_smallest_angle"],types:{_BaseRidge:{methods:[{name:"fit",updates:[0]}]},Ridge:{methods:[{name:"__init__",updates:[],returns:"Ridge"},"__init__",{name:"fit",updates:[0]}]},RidgeClassifier:{methods:[{name:"__init__",updates:[0],returns:"RidgeClassifier"},{name:"fit",updates:[0]},"predict","score"]},_X_operator:{methods:[{name:"__init__",updates:[0],returns:"_X_operator"},"_matvec","_matmat","_transpose"]},_Xt_operator:{methods:[{name:"__init__",updates:[0],returns:"_Xt_operator"},"_matvec","_matmat"]},_RidgeGCV:{methods:[{name:"__init__",updates:[0],returns:"_RidgeGCV"},"_decomp_diag","_diag_dot","_compute_gram","_compute_covariance","_sparse_multidot_diag","_eigen_decompose_gram","_solve_eigen_gram","_eigen_decompose_covariance","_solve_eigen_covariance_no_intercept","_solve_eigen_covariance_intercept","_solve_eigen_covariance","_svd_decompose_design_matrix","_solve_svd_design_matrix",{name:"fit",updates:[0]}]},_BaseRidgeCV:{methods:[{name:"__init__",updates:[0],returns:"_BaseRidgeCV"},{name:"fit",updates:[0]}]},RidgeCV:{methods:[{name:"fit",updates:[0]}]},RidgeClassifierCV:{methods:[{name:"__init__",updates:[0],returns:"RidgeClassifierCV"},{name:"fit",updates:[0]},"predict","score"]}}},sag:{functions:["get_auto_step_size","sag_solver"],types:{}},setup:{functions:["configuration"],types:{}},stochastic_gradient:{functions:["_prepare_fit_binary","fit_binary"],types:{_ValidationScoreCallback:{methods:[{name:"__init__",updates:[0],returns:"_ValidationScoreCallback"},"__call__"]},BaseSGD:{methods:[{name:"__init__",updates:[0],returns:"BaseSGD"},"set_params","_validate_params","_get_loss_function","_get_learning_rate_type","_get_penalty_type","_validate_sample_weight",{name:"_allocate_parameter_mem",updates:[0]},"_make_validation_split","_make_validation_score_cb"]},BaseSGDClassifier:{methods:[{name:"_partial_fit",updates:[0]},{name:"_fit",updates:[0]},{name:"_fit_binary",updates:[0]},{name:"_fit_multiclass",updates:[0]},{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"set_params"]},SGDClassifier:{methods:[{name:"__init__",updates:[],returns:"SGDClassifier"},"__init__","_check_proba","_predict_proba","_predict_log_proba",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"set_params"]},BaseSGDRegressor:{methods:[{name:"_partial_fit",updates:[0]},{name:"partial_fit",updates:[0]},{name:"_fit",updates:[0]},{name:"fit",updates:[0]},"_decision_function","predict",{name:"_fit_regressor",updates:[0]},"set_params"]},SGDRegressor:{methods:[{name:"__init__",updates:[],returns:"SGDRegressor"},"__init__",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"predict","set_params"]}}},theil_sen:{functions:["_modified_weiszfeld_step","_spatial_median","_breakdown_point","_lstsq"],types:{TheilSenRegressor:{methods:[{name:"__init__",updates:[0],returns:"TheilSenRegressor"},"_check_subparams",{name:"fit",updates:[0]}]}}}},types:{LinearRegression:{methods:[{name:"__init__",updates:[0],returns:"LinearRegression"},{name:"fit",updates:[0]},"predict"]},BayesianRidge:{methods:[{name:"__init__",updates:[0],returns:"BayesianRidge"},{name:"fit",updates:[0]},"predict","_update_coef_","_log_marginal_likelihood"]},ARDRegression:{methods:[{name:"__init__",updates:[0],returns:"ARDRegression"},{name:"fit",updates:[0]},"predict"]},Lars:{methods:[{name:"__init__",updates:[0],returns:"Lars"},{name:"_fit",updates:[0]},{name:"fit",updates:[0]}]},LassoLars:{methods:[{name:"__init__",updates:[0],returns:"LassoLars"},{name:"fit",updates:[0]}]},LarsCV:{methods:[{name:"__init__",updates:[0],returns:"LarsCV"},{name:"fit",updates:[0]}]},LassoLarsCV:{methods:[{name:"__init__",updates:[0],returns:"LassoLarsCV"},{name:"fit",updates:[0]}]},LassoLarsIC:{methods:[{name:"__init__",updates:[0],returns:"LassoLarsIC"},{name:"fit",updates:[0]}]},Lasso:{methods:[{name:"__init__",updates:[0],returns:"Lasso"},"__init__",{name:"fit",updates:[0]}]},ElasticNet:{methods:[{name:"__init__",updates:[0],returns:"ElasticNet"},{name:"fit",updates:[0]},"_decision_function"]},LassoCV:{methods:[{name:"__init__",updates:[],returns:"LassoCV"},"__init__",{name:"fit",updates:[0]}]},ElasticNetCV:{methods:[{name:"__init__",updates:[0],returns:"ElasticNetCV"},{name:"fit",updates:[0]}]},MultiTaskLasso:{methods:[{name:"__init__",updates:[0],returns:"MultiTaskLasso"},{name:"fit",updates:[0]}]},MultiTaskElasticNet:{methods:[{name:"__init__",updates:[0],returns:"MultiTaskElasticNet"},{name:"fit",updates:[0]},"_more_tags"]},MultiTaskElasticNetCV:{methods:[{name:"__init__",updates:[0],returns:"MultiTaskElasticNetCV"},"_more_tags",{name:"fit",updates:[0]}]},MultiTaskLassoCV:{methods:[{name:"__init__",updates:[],returns:"MultiTaskLassoCV"},"__init__","_more_tags",{name:"fit",updates:[0]}]},HuberRegressor:{methods:[{name:"__init__",updates:[0],returns:"HuberRegressor"},{name:"fit",updates:[0]}]},SGDClassifier:{methods:[{name:"__init__",updates:[],returns:"SGDClassifier"},"__init__","_check_proba","_predict_proba","_predict_log_proba",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"set_params"]},SGDRegressor:{methods:[{name:"__init__",updates:[],returns:"SGDRegressor"},"__init__",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"predict","set_params"]},Ridge:{methods:[{name:"__init__",updates:[],returns:"Ridge"},"__init__",{name:"fit",updates:[0]}]},RidgeCV:{methods:[{name:"fit",updates:[0]}]},RidgeClassifier:{methods:[{name:"__init__",updates:[0],returns:"RidgeClassifier"},{name:"fit",updates:[0]}]},RidgeClassifierCV:{methods:[{name:"__init__",updates:[0],returns:"RidgeClassifierCV"},{name:"fit",updates:[0]}]},LogisticRegression:{methods:[{name:"__init__",updates:[0],returns:"LogisticRegression"},{name:"fit",updates:[0]},"score","predict","predict_proba","predict_log_proba"]},LogisticRegressionCV:{methods:[{name:"__init__",updates:[0],returns:"LogisticRegressionCV"},{name:"fit",updates:[0]},"score","predict","predict_proba","predict_log_proba"]},OrthogonalMatchingPursuit:{methods:[{name:"__init__",updates:[0],returns:"OrthogonalMatchingPursuit"},{name:"fit",updates:[0]}]},OrthogonalMatchingPursuitCV:{methods:[{name:"__init__",updates:[0],returns:"OrthogonalMatchingPursuitCV"},{name:"fit",updates:[0]}]},PassiveAggressiveClassifier:{methods:[{name:"__init__",updates:[0],returns:"PassiveAggressiveClassifier"},{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"score","predict"]},PassiveAggressiveRegressor:{methods:[{name:"__init__",updates:[0],returns:"PassiveAggressiveRegressor"},{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"score","predict"]},Perceptron:{methods:[{name:"__init__",updates:[],returns:"Perceptron"},{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"score","predict"]},RANSACRegressor:{methods:[{name:"__init__",updates:[0],returns:"RANSACRegressor"},{name:"fit",updates:[0]},"predict","score"]},TheilSenRegressor:{methods:[{name:"__init__",updates:[0],returns:"TheilSenRegressor"},"_check_subparams",{name:"fit",updates:[0]}]}},functions:["lars_path","lars_path_gram","lasso_path","enet_path","ridge_regression","orthogonal_mp","orthogonal_mp_gram"]},manifold:{modules:{tests:{modules:{test_isomap:{functions:["test_isomap_simple_grid","test_isomap_reconstruction_error","test_transform","test_pipeline","test_isomap_clone_bug","test_sparse_input"],types:{}},test_locally_linear:{functions:["test_barycenter_kneighbors_graph","test_lle_simple_grid","test_lle_manifold","test_lle_init_parameters","test_pipeline","test_singular_matrix","test_integer_input"],types:{}},test_mds:{functions:["test_smacof","test_smacof_error","test_MDS"],types:{}},test_spectral_embedding:{functions:["_check_with_col_sign_flipping","test_sparse_graph_connected_component","test_spectral_embedding_precomputed_affinity","test_spectral_embedding_callable_affinity","test_spectral_embedding_amg_solver","test_spectral_embedding_unknown_eigensolver","test_spectral_embedding_unknown_affinity","test_connectivity","test_spectral_embedding_deterministic","test_spectral_embedding_unnormalized","test_spectral_embedding_first_eigen_vector"],types:{}},test_t_sne:{functions:["test_gradient_descent_stops","test_binary_search","test_binary_search_neighbors","test_binary_perplexity_stability","test_gradient","test_trustworthiness","test_preserve_trustworthiness_approximately","test_optimization_minimizes_kl_divergence","test_fit_csr_matrix","test_preserve_trustworthiness_approximately_with_precomputed_distances","test_trustworthiness_precomputed_deprecation","test_trustworthiness_not_euclidean_metric","test_early_exaggeration_too_small","test_too_few_iterations","test_non_square_precomputed_distances","test_non_positive_precomputed_distances","test_non_positive_computed_distances","test_init_not_available","test_init_ndarray","test_init_ndarray_precomputed","test_distance_not_available","test_method_not_available","test_angle_out_of_range_checks","test_pca_initialization_not_compatible_with_precomputed_kernel","test_n_components_range","test_early_exaggeration_used","test_n_iter_used","test_answer_gradient_two_points","test_answer_gradient_four_points","test_skip_num_points_gradient","_run_answer_test","test_verbose","test_chebyshev_metric","test_reduction_to_one_component","test_no_sparse_on_barnes_hut","test_barnes_hut_angle","test_min_grad_norm","test_accessible_kl_divergence","check_uniform_grid","assert_uniform_grid","test_bh_match_exact","test_tsne_with_different_distance_metrics"],types:{ObjectiveSmallGradient:{methods:[{name:"__init__",updates:[0],returns:"ObjectiveSmallGradient"},{name:"__call__",updates:[0]}]}}}},types:{},functions:[]},isomap:{functions:[],types:{Isomap:{methods:[{name:"__init__",updates:[0],returns:"Isomap"},{name:"_fit_transform",updates:[0]},"reconstruction_error",{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform"]}}},locally_linear:{functions:["barycenter_weights","barycenter_kneighbors_graph","null_space","locally_linear_embedding"],types:{LocallyLinearEmbedding:{methods:[{name:"__init__",updates:[0],returns:"LocallyLinearEmbedding"},{name:"_fit_transform",updates:[0]},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform"]}}},mds:{functions:["_smacof_single","smacof"],types:{MDS:{methods:[{name:"__init__",updates:[0],returns:"MDS"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]}]}}},setup:{functions:["configuration"],types:{}},spectral_embedding_:{functions:["_graph_connected_component","_graph_is_connected","_set_diag","spectral_embedding"],types:{SpectralEmbedding:{methods:[{name:"__init__",updates:[0],returns:"SpectralEmbedding"},{name:"_get_affinity_matrix",updates:[0]},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]}]}}},t_sne:{functions:["_joint_probabilities","_joint_probabilities_nn","_kl_divergence","_kl_divergence_bh",{name:"_gradient_descent",updates:[12]},"trustworthiness"],types:{TSNE:{methods:[{name:"__init__",updates:[0],returns:"TSNE"},{name:"_fit",updates:[0]},{name:"_tsne",updates:[0]},{name:"fit_transform",updates:[0]},{name:"fit",updates:[0]}]}}}},types:{LocallyLinearEmbedding:{methods:[{name:"__init__",updates:[0],returns:"LocallyLinearEmbedding"},{name:"_fit_transform",updates:[0]},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform"]},Isomap:{methods:[{name:"__init__",updates:[0],returns:"Isomap"},{name:"_fit_transform",updates:[0]},"reconstruction_error",{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform"]},MDS:{methods:[{name:"__init__",updates:[0],returns:"MDS"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]}]},SpectralEmbedding:{methods:[{name:"__init__",updates:[0],returns:"SpectralEmbedding"},{name:"_get_affinity_matrix",updates:[0]},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]}]},TSNE:{methods:[{name:"__init__",updates:[0],returns:"TSNE"},{name:"_fit",updates:[0]},{name:"_tsne",updates:[0]},{name:"fit_transform",updates:[0]},{name:"fit",updates:[0]}]}},functions:["locally_linear_embedding","smacof","spectral_embedding"]},metrics:{modules:{cluster:{modules:{tests:{modules:{test_bicluster:{functions:["test_jaccard","test_consensus_score","test_consensus_score_issue2445"],types:{}},test_common:{functions:["test_symmetric_non_symmetric_union"],types:{}},test_supervised:{functions:["test_future_warning","test_generalized_average","test_homogeneous_but_not_complete_labeling","test_complete_but_not_homogeneous_labeling","test_not_complete_and_not_homogeneous_labeling","test_beta_parameter","test_non_consecutive_labels","test_expected_mutual_info_overflow","test_int_overflow_mutual_info_fowlkes_mallows_score","test_entropy","test_contingency_matrix","test_contingency_matrix_sparse","test_v_measure_and_mutual_information","test_fowlkes_mallows_score","test_fowlkes_mallows_score_properties"],types:{}},test_unsupervised:{functions:["test_silhouette","test_cluster_size_1","test_silhouette_paper_example","test_correct_labelsize","test_non_encoded_labels","test_non_numpy_labels","assert_raises_on_only_one_label","assert_raises_on_all_points_same_cluster","test_calinski_harabasz_score","test_deprecated_calinski_harabaz_score","test_davies_bouldin_score"],types:{}}},types:{},functions:[]},bicluster:{functions:["_check_rows_and_columns","_jaccard","_pairwise_similarity","consensus_score"],types:{}},setup:{functions:["configuration"],types:{}},supervised:{functions:["_comb2","check_clusterings","_generalized_average","contingency_matrix","adjusted_rand_score","homogeneity_completeness_v_measure","homogeneity_score","completeness_score","v_measure_score","mutual_info_score","adjusted_mutual_info_score","normalized_mutual_info_score","fowlkes_mallows_score","entropy"],types:{}},unsupervised:{functions:["check_number_of_labels","silhouette_score","_silhouette_reduce","silhouette_samples","calinski_harabasz_score","davies_bouldin_score"],types:{}}},types:{},functions:["adjusted_mutual_info_score","normalized_mutual_info_score","adjusted_rand_score","completeness_score","contingency_matrix","homogeneity_completeness_v_measure","homogeneity_score","mutual_info_score","v_measure_score","fowlkes_mallows_score","entropy","silhouette_samples","silhouette_score","calinski_harabasz_score","davies_bouldin_score","consensus_score"]},tests:{modules:{test_classification:{functions:["make_prediction","test_classification_report_dictionary_output","test_multilabel_accuracy_score_subset_accuracy","test_precision_recall_f1_score_binary","test_average_precision_score_score_non_binary_class","test_average_precision_score_duplicate_values","test_average_precision_score_tied_values","test_precision_recall_f_unused_pos_label","test_confusion_matrix_binary","test_multilabel_confusion_matrix_binary","test_multilabel_confusion_matrix_multiclass","test_multilabel_confusion_matrix_multilabel","test_multilabel_confusion_matrix_errors","test_cohen_kappa","test_matthews_corrcoef_against_numpy_corrcoef","test_matthews_corrcoef_against_jurman","test_matthews_corrcoef","test_matthews_corrcoef_multiclass","test_precision_recall_f1_score_multiclass","test_precision_recall_f1_score_binary_averaged","test_zero_precision_recall","test_confusion_matrix_multiclass_subset_labels","test_confusion_matrix_dtype","test_classification_report_multiclass","test_classification_report_multiclass_balanced","test_classification_report_multiclass_with_label_detection","test_classification_report_multiclass_with_digits","test_classification_report_multiclass_with_string_label","test_classification_report_multiclass_with_unicode_label","test_classification_report_multiclass_with_long_string_label","test_classification_report_labels_target_names_unequal_length","test_classification_report_no_labels_target_names_unequal_length","test_multilabel_zero_one_loss_subset","test_multilabel_hamming_loss","test_jaccard_score_validation","test_multilabel_jaccard_score","test_multiclass_jaccard_score","test_average_binary_jaccard_score","test_precision_recall_f1_no_labels_average_none","test_prf_warnings","test_recall_warnings","test_precision_warnings","test_fscore_warnings","test_prf_average_binary_data_non_binary","test__check_targets","test__check_targets_multiclass_with_both_y_true_and_y_pred_binary","test_hinge_loss_binary","test_hinge_loss_multiclass","test_hinge_loss_multiclass_missing_labels_with_labels_none","test_hinge_loss_multiclass_with_missing_labels","test_hinge_loss_multiclass_invariance_lists","test_log_loss","test_log_loss_pandas_input","test_brier_score_loss","test_balanced_accuracy_score_unseen","test_multilabel_jaccard_similarity_score_deprecation"],types:{}},test_common:{functions:["precision_recall_curve_padded_thresholds","test_normalize_option_multilabel_classification","check_averaging","test_averaging_binary_multilabel_all_zeroes"],types:{}},test_pairwise:{functions:["test_pairwise_distances","test_no_data_conversion_warning","test_pairwise_precomputed_non_negative","callable_rbf_kernel","test_pairwise_callable_nonstrict_metric","test_pairwise_kernels_callable","test_pairwise_kernels_filter_param","test_paired_distances_callable","test_pairwise_distances_argmin_min","_reduce_func","test_pairwise_distances_chunked_reduce","check_pairwise_distances_chunked","test_cosine_distances","test_haversine_distances","test_paired_euclidean_distances","test_paired_manhattan_distances","test_chi_square_kernel","test_linear_kernel","test_rbf_kernel","test_laplacian_kernel","test_cosine_similarity","test_check_dense_matrices","test_check_XB_returned","test_check_different_dimensions","test_check_invalid_dimensions","test_check_sparse_arrays","tuplify","test_check_tuple_input","test_check_preserve_type"],types:{}},test_ranking:{functions:["make_prediction","_auc","_average_precision","_average_precision_slow","_partial_roc_auc_score","test_roc_curve_end_points","test_roc_returns_consistency","test_roc_curve_multi","test_roc_curve_confidence","test_roc_curve_hard","test_roc_curve_one_label","test_roc_curve_toydata","test_roc_curve_drop_intermediate","test_roc_curve_fpr_tpr_increasing","test_auc","test_auc_errors","test_deprecated_auc_reorder","test_auc_score_non_binary_class","test_binary_clf_curve","test_precision_recall_curve","_test_precision_recall_curve","test_precision_recall_curve_errors","test_precision_recall_curve_toydata","test_average_precision_constant_values","test_average_precision_score_pos_label_errors","test_score_scale_invariance","check_lrap_toy","check_zero_or_all_relevant_labels","check_lrap_error_raised","check_lrap_only_ties","check_lrap_without_tie_and_increasing_score","_my_lrap","check_alternative_lrap_implementation","test_lrap_error_raised","test_lrap_sample_weighting_zero_labels","test_coverage_error","test_coverage_tie_handling","test_label_ranking_loss","test_ranking_appropriate_input_shape","test_ranking_loss_ties_handling","test_partial_roc_auc_score"],types:{}},test_regression:{functions:["test_regression_metrics","test_multioutput_regression","test_regression_metrics_at_limits","test__check_reg_targets","test__check_reg_targets_exception","test_regression_multioutput_array","test_regression_custom_weights"],types:{}},test_score_objects:{functions:["_make_estimators","setup_module","teardown_module","test_all_scorers_repr","check_scoring_validator_for_single_metric_usecases","check_multimetric_scoring_single_metric_wrapper","test_check_scoring_and_check_multimetric_scoring","test_make_scorer","test_classification_scores","test_regression_scorers","test_thresholded_scorers_multilabel_indicator_data"],types:{EstimatorWithoutFit:{methods:[]},EstimatorWithFit:{methods:["fit"]},EstimatorWithFitAndScore:{methods:["fit","score"]},EstimatorWithFitAndPredict:{methods:[{name:"fit",updates:[0]},"predict"]},DummyScorer:{methods:["__call__"]}}}},types:{},functions:[]},base:{functions:["_average_binary_score"],types:{}},classification:{functions:["_check_targets","_weighted_sum","accuracy_score","confusion_matrix","multilabel_confusion_matrix","cohen_kappa_score","jaccard_similarity_score","jaccard_score","matthews_corrcoef","zero_one_loss","f1_score","fbeta_score",{name:"_prf_divide",updates:[1]},"_check_set_wise_labels","precision_recall_fscore_support","precision_score","recall_score","balanced_accuracy_score","classification_report","hamming_loss","log_loss","hinge_loss","brier_score_loss"],types:{}},pairwise:{functions:["_return_float_dtype","check_pairwise_arrays","check_paired_arrays","euclidean_distances","_euclidean_distances_upcast","_argmin_min_reduce","pairwise_distances_argmin_min","pairwise_distances_argmin","haversine_distances","manhattan_distances","cosine_distances","paired_euclidean_distances","paired_manhattan_distances","paired_cosine_distances","paired_distances","linear_kernel","polynomial_kernel","sigmoid_kernel","rbf_kernel","laplacian_kernel","cosine_similarity","additive_chi2_kernel","chi2_kernel","distance_metrics",{name:"_dist_wrapper",updates:[1]},"_parallel_pairwise","_pairwise_callable","_check_chunk_size","_precompute_metric_params","pairwise_distances_chunked","pairwise_distances","kernel_metrics","pairwise_kernels"],types:{}},ranking:{functions:["auc","average_precision_score","roc_auc_score","_binary_clf_curve","precision_recall_curve","roc_curve","label_ranking_average_precision_score","coverage_error","label_ranking_loss"],types:{}},regression:{functions:["_check_reg_targets","mean_absolute_error","mean_squared_error","mean_squared_log_error","median_absolute_error","explained_variance_score","r2_score","max_error"],types:{}},scorer:{functions:["get_scorer","_passthrough_scorer","check_scoring","_check_multimetric_scoring","make_scorer"],types:{_BaseScorer:{methods:[{name:"__init__",updates:[0],returns:"_BaseScorer"},"__repr__","_factory_args"]},_PredictScorer:{methods:["__call__"]},_ProbaScorer:{methods:["__call__","_factory_args"]},_ThresholdScorer:{methods:["__call__","_factory_args"]}}},setup:{functions:["configuration"],types:{}}},types:{},functions:["auc","average_precision_score","coverage_error","label_ranking_average_precision_score","label_ranking_loss","precision_recall_curve","roc_auc_score","roc_curve","accuracy_score","balanced_accuracy_score","classification_report","cohen_kappa_score","confusion_matrix","f1_score","fbeta_score","hamming_loss","hinge_loss","jaccard_similarity_score","jaccard_score","log_loss","matthews_corrcoef","precision_recall_fscore_support","precision_score","recall_score","zero_one_loss","brier_score_loss","multilabel_confusion_matrix","adjusted_mutual_info_score","adjusted_rand_score","completeness_score","consensus_score","homogeneity_completeness_v_measure","homogeneity_score","mutual_info_score","normalized_mutual_info_score","fowlkes_mallows_score","silhouette_samples","silhouette_score","calinski_harabasz_score","v_measure_score","davies_bouldin_score","euclidean_distances","pairwise_distances","pairwise_distances_argmin","pairwise_distances_argmin_min","pairwise_kernels","pairwise_distances_chunked","explained_variance_score","max_error","mean_absolute_error","mean_squared_error","mean_squared_log_error","median_absolute_error","r2_score","check_scoring","make_scorer","get_scorer"]},mixture:{modules:{tests:{modules:{test_bayesian_mixture:{functions:["test_log_dirichlet_norm","test_log_wishart_norm","test_bayesian_mixture_covariance_type","test_bayesian_mixture_weight_concentration_prior_type","test_bayesian_mixture_weights_prior_initialisation","test_bayesian_mixture_mean_prior_initialisation","test_bayesian_mixture_precisions_prior_initialisation","test_bayesian_mixture_check_is_fitted","test_bayesian_mixture_weights","test_compare_covar_type","test_bayesian_mixture_fit_predict_n_init","test_bayesian_mixture_predict_predict_proba"],types:{}},test_gaussian_mixture:{functions:["generate_data","test_gaussian_mixture_attributes","test_check_X","test_check_weights","test_check_means","test_check_precisions","test_suffstat_sk_full","test_suffstat_sk_tied","test_suffstat_sk_diag","test_gaussian_suffstat_sk_spherical","test_compute_log_det_cholesky","_naive_lmvnpdf_diag","test_gaussian_mixture_log_probabilities","test_gaussian_mixture_estimate_log_prob_resp","test_gaussian_mixture_predict_predict_proba","test_gaussian_mixture_fit_predict_n_init","test_gaussian_mixture_fit","test_gaussian_mixture_fit_best_params","test_gaussian_mixture_fit_convergence_warning","test_multiple_init","test_gaussian_mixture_n_parameters","test_bic_1d_1component","test_gaussian_mixture_aic_bic","test_gaussian_mixture_verbose","test_score","test_score_samples","test_monotonic_likelihood","test_regularisation","test_property","test_sample"],types:{RandomData:{methods:[{name:"__init__",updates:[0],returns:"RandomData"}]}}},test_mixture:{functions:[],types:{}}},types:{},functions:[]},base:{functions:["_check_shape","_check_X"],types:{BaseMixture:{methods:[{name:"__init__",updates:[0],returns:"BaseMixture"},"_check_initial_parameters","_initialize_parameters",{name:"fit",updates:[0]},{name:"fit_predict",updates:[0]},"_e_step","score_samples","score","predict","predict_proba","sample","_estimate_weighted_log_prob","_estimate_log_prob_resp",{name:"_print_verbose_msg_init_beg",updates:[0]},{name:"_print_verbose_msg_iter_end",updates:[0]},"_print_verbose_msg_init_end"]}}},bayesian_mixture:{functions:["_log_dirichlet_norm","_log_wishart_norm"],types:{BayesianGaussianMixture:{methods:[{name:"__init__",updates:[0],returns:"BayesianGaussianMixture"},{name:"_check_parameters",updates:[0]},{name:"_check_weights_parameters",updates:[0]},{name:"_check_means_parameters",updates:[0]},{name:"_check_precision_parameters",updates:[0]},{name:"_checkcovariance_prior_parameter",updates:[0]},{name:"_initialize",updates:[0]},{name:"_estimate_weights",updates:[0]},{name:"_estimate_means",updates:[0]},{name:"_estimate_precisions",updates:[0]},{name:"_estimate_wishart_full",updates:[0]},{name:"_estimate_wishart_tied",updates:[0]},{name:"_estimate_wishart_diag",updates:[0]},{name:"_estimate_wishart_spherical",updates:[0]},"_check_is_fitted",{name:"_m_step",updates:[0]},"_estimate_log_weights","_estimate_log_prob","_compute_lower_bound","_get_parameters",{name:"_set_parameters",updates:[0]}]}}},gaussian_mixture:{functions:["_check_weights","_check_means","_check_precision_positivity","_check_precision_matrix","_check_precisions_full","_check_precisions","_estimate_gaussian_covariances_full","_estimate_gaussian_covariances_tied","_estimate_gaussian_covariances_diag","_estimate_gaussian_covariances_spherical","_estimate_gaussian_parameters","_compute_precision_cholesky","_compute_log_det_cholesky","_estimate_log_gaussian_prob"],types:{GaussianMixture:{methods:[{name:"__init__",updates:[0],returns:"GaussianMixture"},{name:"_check_parameters",updates:[0]},{name:"_initialize",updates:[0]},{name:"_m_step",updates:[0]},"_estimate_log_prob","_estimate_log_weights","_compute_lower_bound","_check_is_fitted","_get_parameters",{name:"_set_parameters",updates:[0]},"_n_parameters","bic","aic"]}}}},types:{GaussianMixture:{methods:[{name:"__init__",updates:[0],returns:"GaussianMixture"},{name:"_check_parameters",updates:[0]},{name:"_initialize",updates:[0]},{name:"_m_step",updates:[0]},"_estimate_log_prob","_estimate_log_weights","_compute_lower_bound","_check_is_fitted","_get_parameters",{name:"_set_parameters",updates:[0]},"_n_parameters","bic","aic"]},BayesianGaussianMixture:{methods:[{name:"__init__",updates:[0],returns:"BayesianGaussianMixture"},{name:"_check_parameters",updates:[0]},{name:"_check_weights_parameters",updates:[0]},{name:"_check_means_parameters",updates:[0]},{name:"_check_precision_parameters",updates:[0]},{name:"_checkcovariance_prior_parameter",updates:[0]},{name:"_initialize",updates:[0]},{name:"_estimate_weights",updates:[0]},{name:"_estimate_means",updates:[0]},{name:"_estimate_precisions",updates:[0]},{name:"_estimate_wishart_full",updates:[0]},{name:"_estimate_wishart_tied",updates:[0]},{name:"_estimate_wishart_diag",updates:[0]},{name:"_estimate_wishart_spherical",updates:[0]},"_check_is_fitted",{name:"_m_step",updates:[0]},"_estimate_log_weights","_estimate_log_prob","_compute_lower_bound","_get_parameters",{name:"_set_parameters",updates:[0]}]}},functions:[]},model_selection:{modules:{tests:{modules:{common:{functions:[],types:{OneTimeSplitter:{methods:[{name:"__init__",updates:[0],returns:"OneTimeSplitter"},"split","get_n_splits"]}}},test_search:{functions:["assert_grid_iter_equals_getitem","test_parameter_grid","check_hyperparameter_searcher_with_fit_params","test_refit_callable","test_refit_callable_invalid_type","test_refit_callable_multi_metric","test_param_sampler","check_cv_results_array_types","check_cv_results_keys","test_grid_search_cv_results","test_random_search_cv_results","test_grid_search_cv_results_multimetric","test_random_search_cv_results_multimetric","compare_cv_results_multimetric_with_single","compare_refit_methods_when_refit_with_acc","test_parameters_sampler_replacement","test_custom_run_search","test__custom_fit_no_run_search","test_deprecated_grid_search_iid","test_empty_cv_iterator_error","test_random_search_bad_cv"],types:{MockClassifier:{methods:[{name:"__init__",updates:[0],returns:"MockClassifier"},{name:"fit",updates:[0]},"predict","transform","inverse_transform","score","get_params",{name:"set_params",updates:[0]}]},LinearSVCNoScore:{methods:[]},BrokenClassifier:{methods:[{name:"__init__",updates:[0],returns:"BrokenClassifier"},{name:"fit",updates:[0]},"predict"]},FailingClassifier:{methods:[{name:"__init__",updates:[0],returns:"FailingClassifier"},"fit","predict","score"]},CustomSearchCV:{methods:[{name:"__init__",updates:[],returns:"CustomSearchCV"},"__init__","_run_search"]},NoRunSearchSearchCV:{methods:[{name:"__init__",updates:[],returns:"NoRunSearchSearchCV"},"__init__","fit"]},BadSearchCV:{methods:[{name:"__init__",updates:[],returns:"BadSearchCV"},"__init__"]},BrokenKFold:{methods:["get_n_splits"]}}},test_split:{functions:["check_valid_split","check_cv_coverage","test_kfold_valueerrors","test_kfold_indices","test_kfold_no_shuffle","test_stratified_kfold_no_shuffle","test_stratified_kfold_ratios","test_kfold_balance","test_stratifiedkfold_balance","test_shuffle_kfold","test_shuffle_kfold_stratifiedkfold_reproducibility","test_shuffle_stratifiedkfold","test_kfold_can_detect_dependent_samples_on_digits","test_shuffle_split","test_stratified_shuffle_split_respects_test_size","test_stratified_shuffle_split_iter","test_stratified_shuffle_split_even","test_stratified_shuffle_split_overlap_train_test_bug","test_stratified_shuffle_split_multilabel","test_stratified_shuffle_split_multilabel_many_labels","test_predefinedsplit_with_kfold_split","test_group_shuffle_split","test_leave_one_p_group_out","test_leave_group_out_changing_groups","test_leave_one_p_group_out_error_on_fewer_number_of_groups","test_repeated_kfold_determinstic_split","test_get_n_splits_for_repeated_kfold","test_get_n_splits_for_repeated_stratified_kfold","test_repeated_stratified_kfold_determinstic_split","test_train_test_split_errors","test_train_test_split","test_train_test_split_sparse","test_train_test_split_mock_pandas","test_train_test_split_list_input","test_shufflesplit_reproducible","test_stratifiedshufflesplit_list_input","test_train_test_split_allow_nans","test_check_cv","test_cv_iterable_wrapper","test_group_kfold","test_time_series_cv","_check_time_series_max_train_size","test_time_series_max_train_size","test_nsplit_default_warn","test_check_cv_default_warn","test_build_repr","test_train_test_split_empty_trainset","test_leave_one_out_empty_trainset","test_leave_p_out_empty_trainset"],types:{MockClassifier:{methods:[{name:"__init__",updates:[0],returns:"MockClassifier"},{name:"fit",updates:[0]},"predict","score","get_params"]},MockSplitter:{methods:[{name:"__init__",updates:[0],returns:"MockSplitter"},"__repr__"]}}},test_validation:{functions:["test_cross_validate","check_cross_validate_single_metric","check_cross_validate_multi_metric","test_cross_val_score_mask","test_cross_val_score_score_func","test_cross_val_score_errors","test_cross_val_score_with_score_func_classification","test_cross_val_score_with_score_func_regression","test_permutation_score","test_permutation_test_score_allow_nans","test_cross_val_score_allow_nans","test_cross_val_score_multilabel","test_learning_curve","test_learning_curve_unsupervised","test_learning_curve_verbose","test_learning_curve_incremental_learning_not_possible","test_learning_curve_incremental_learning","test_learning_curve_incremental_learning_unsupervised","test_learning_curve_n_sample_range_out_of_bounds","test_learning_curve_remove_duplicate_sample_sizes","test_learning_curve_with_boolean_indices","test_validation_curve","test_validation_curve_clone_estimator","test_validation_curve_cv_splits_consistency","test_check_is_permutation","test_cross_val_predict_sparse_prediction","check_cross_val_predict_binary","check_cross_val_predict_multiclass","check_cross_val_predict_multilabel","check_cross_val_predict_with_method_binary","check_cross_val_predict_with_method_multiclass","test_cross_val_predict_with_method_multilabel_ovr","test_cross_val_predict_with_method_multilabel_rf","test_cross_val_predict_with_method_rare_class","test_cross_val_predict_with_method_multilabel_rf_rare_class","get_expected_predictions","test_fit_and_score_failing","test_fit_and_score_working","three_params_scorer","test_score"],types:{MockImprovingEstimator:{methods:[{name:"__init__",updates:[0],returns:"MockImprovingEstimator"},{name:"fit",updates:[0]},"predict","score","_is_training_data"]},MockIncrementalImprovingEstimator:{methods:[{name:"__init__",updates:[0],returns:"MockIncrementalImprovingEstimator"},"_is_training_data",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"predict","score"]},MockEstimatorWithParameter:{methods:[{name:"__init__",updates:[0],returns:"MockEstimatorWithParameter"},{name:"fit",updates:[0]},"predict","score","_is_training_data"]},MockEstimatorWithSingleFitCallAllowed:{methods:[{name:"fit",updates:[0]},"predict","score"]},MockClassifier:{methods:[{name:"__init__",updates:[0],returns:"MockClassifier"},{name:"fit",updates:[0]},"predict","score","get_params"]},BrokenEstimator:{methods:[]},BadCV:{methods:["split"]},RFWithDecisionFunction:{methods:["decision_function"]}}}},types:{},functions:[]}},types:{},functions:[]},neighbors:{modules:{tests:{modules:{test_ball_tree:{functions:["dist_func","brute_force_neighbors","test_ball_tree_query_radius","test_ball_tree_query_radius_distance","compute_kernel_slow","test_gaussian_kde","test_ball_tree_two_point","test_ball_tree_pickle","test_neighbors_heap","test_node_heap","test_simultaneous_sort","test_query_haversine"],types:{}},test_dist_metrics:{functions:["dist_func","check_cdist","check_cdist_bool","check_pdist",{name:"check_pdist_bool",updates:[1]},"check_pickle","test_haversine_metric","test_pyfunc_metric","test_bad_pyfunc_metric","test_input_data_size"],types:{}},test_kde:{functions:["compute_kernel_slow","check_results","test_kernel_density_sampling","test_kde_score","test_kde_badargs","test_kde_pipeline_gridsearch","test_kde_sample_weights"],types:{}},test_kd_tree:{functions:["brute_force_neighbors","check_neighbors","test_kd_tree_query_radius","test_kd_tree_query_radius_distance","compute_kernel_slow","check_results","test_gaussian_kde","test_neighbors_heap","test_node_heap","test_simultaneous_sort"],types:{}},test_lof:{functions:["test_contamination","test_contamination_future_warning","test_predicted_outlier_number"],types:{}},test_nca:{functions:["test_simple_example","test_toy_example_collapse_points","test_finite_differences","test_params_validation","test_transformation_dimensions","test_n_components","test_init_transformation","test_warm_start_validation","test_warm_start_effectiveness","test_no_verbose","test_singleton_class","test_one_class","test_callback","test_expected_transformation_shape","test_convergence_warning"],types:{LossStorer:{methods:[{name:"__init__",updates:[0],returns:"LossStorer"},{name:"callback",updates:[0]}]},TransformationStorer:{methods:[{name:"__init__",updates:[0],returns:"TransformationStorer"},{name:"callback",updates:[0]}]}}},test_nearest_centroid:{functions:["test_classification_toy","test_precomputed","test_iris","test_iris_shrinkage","test_pickle","test_shrinkage_correct","test_shrinkage_threshold_decoded_y","test_predict_translated_data","test_manhattan_metric"],types:{}},test_neighbors:{functions:["_weight_func","test_unsupervised_kneighbors","test_unsupervised_inputs","test_n_neighbors_datatype","test_not_fitted_error_gets_raised","test_precomputed","test_unsupervised_radius_neighbors","test_kneighbors_classifier","test_kneighbors_classifier_float_labels","test_kneighbors_classifier_predict_proba","test_radius_neighbors_classifier","test_radius_neighbors_classifier_when_no_neighbors","test_radius_neighbors_classifier_outlier_labeling","test_radius_neighbors_classifier_zero_distance","test_neighbors_regressors_zero_distance","test_radius_neighbors_boundary_handling","test_RadiusNeighborsClassifier_multioutput","test_kneighbors_classifier_sparse","test_KNeighborsClassifier_multioutput","test_kneighbors_regressor","test_KNeighborsRegressor_multioutput_uniform_weight","test_kneighbors_regressor_multioutput","test_radius_neighbors_regressor","test_RadiusNeighborsRegressor_multioutput_with_uniform_weight","test_RadiusNeighborsRegressor_multioutput","test_kneighbors_regressor_sparse","test_neighbors_iris","test_neighbors_digits","test_kneighbors_graph","test_kneighbors_graph_sparse","test_radius_neighbors_graph","test_radius_neighbors_graph_sparse","test_neighbors_badargs","test_neighbors_metrics","test_callable_metric","test_valid_brute_metric_for_auto_algorithm","test_metric_params_interface","test_predict_sparse_ball_kd_tree","test_non_euclidean_kneighbors","check_object_arrays","test_k_and_radius_neighbors_train_is_not_query","test_k_and_radius_neighbors_X_None","test_k_and_radius_neighbors_duplicates","test_include_self_neighbors_graph","test_dtype_convert","test_sparse_metric_callable"],types:{}},test_quad_tree:{functions:["test_quadtree_boundary_computation","test_quadtree_similar_point","test_summarize"],types:{}}},types:{},functions:[]},base:{functions:["_check_weights",{name:"_get_weights",updates:[0]},"_tree_query_parallel_helper","_tree_query_radius_parallel_helper"],types:{NeighborsBase:{methods:["_check_algorithm_metric",{name:"_fit",updates:[0]}]},KNeighborsMixin:{methods:["_kneighbors_reduce_func","kneighbors","kneighbors_graph"]},RadiusNeighborsMixin:{methods:["_radius_neighbors_reduce_func","radius_neighbors","radius_neighbors_graph"]},SupervisedFloatMixin:{methods:[{name:"fit",updates:[0]}]},SupervisedIntegerMixin:{methods:[{name:"fit",updates:[0]}]},UnsupervisedMixin:{methods:["fit"]}}},classification:{functions:[],types:{KNeighborsClassifier:{methods:[{name:"__init__",updates:[0],returns:"KNeighborsClassifier"},"predict","predict_proba"]},RadiusNeighborsClassifier:{methods:[{name:"__init__",updates:[0],returns:"RadiusNeighborsClassifier"},"predict"]}}},graph:{functions:["_check_params","_query_include_self","kneighbors_graph","radius_neighbors_graph"],types:{}},kde:{functions:[],types:{KernelDensity:{methods:[{name:"__init__",updates:[0],returns:"KernelDensity"},"_choose_algorithm",{name:"fit",updates:[0]},"score_samples","score","sample"]}}},lof:{functions:[],types:{LocalOutlierFactor:{methods:[{name:"__init__",updates:[0],returns:"LocalOutlierFactor"},{name:"_fit_predict",updates:[0]},{name:"fit",updates:[0]},"_predict","_decision_function","_score_samples","_local_reachability_density"]}}},nca:{functions:[],types:{NeighborhoodComponentsAnalysis:{methods:[{name:"__init__",updates:[0],returns:"NeighborhoodComponentsAnalysis"},{name:"fit",updates:[0]},"transform","_validate_params","_initialize",{name:"_callback",updates:[0]},{name:"_loss_grad_lbfgs",updates:[0]}]}}},nearest_centroid:{functions:[],types:{NearestCentroid:{methods:[{name:"__init__",updates:[0],returns:"NearestCentroid"},{name:"fit",updates:[0]},"predict"]}}},regression:{functions:[],types:{KNeighborsRegressor:{methods:[{name:"__init__",updates:[0],returns:"KNeighborsRegressor"},"predict"]},RadiusNeighborsRegressor:{methods:[{name:"__init__",updates:[0],returns:"RadiusNeighborsRegressor"},"predict"]}}},setup:{functions:["configuration"],types:{}},unsupervised:{functions:[],types:{NearestNeighbors:{methods:[{name:"__init__",updates:[],returns:"NearestNeighbors"},"__init__"]}}}},types:{NearestNeighbors:{methods:[{name:"__init__",updates:[],returns:"NearestNeighbors"},"__init__"]},KNeighborsClassifier:{methods:[{name:"__init__",updates:[0],returns:"KNeighborsClassifier"},"predict","predict_proba"]},RadiusNeighborsClassifier:{methods:[{name:"__init__",updates:[0],returns:"RadiusNeighborsClassifier"},"predict"]},KNeighborsRegressor:{methods:[{name:"__init__",updates:[0],returns:"KNeighborsRegressor"},"predict"]},RadiusNeighborsRegressor:{methods:[{name:"__init__",updates:[0],returns:"RadiusNeighborsRegressor"},"predict"]},NearestCentroid:{methods:[{name:"__init__",updates:[0],returns:"NearestCentroid"},{name:"fit",updates:[0]},"predict"]},KernelDensity:{methods:[{name:"__init__",updates:[0],returns:"KernelDensity"},"_choose_algorithm",{name:"fit",updates:[0]},"score_samples","score","sample"]},LocalOutlierFactor:{methods:[{name:"__init__",updates:[0],returns:"LocalOutlierFactor"},{name:"_fit_predict",updates:[0]},{name:"fit",updates:[0]},"_predict","_decision_function","_score_samples","_local_reachability_density"]},NeighborhoodComponentsAnalysis:{methods:[{name:"__init__",updates:[0],returns:"NeighborhoodComponentsAnalysis"},{name:"fit",updates:[0]},"transform","_validate_params","_initialize",{name:"_callback",updates:[0]},{name:"_loss_grad_lbfgs",updates:[0]}]}},functions:["kneighbors_graph","radius_neighbors_graph"]},neural_network:{modules:{tests:{modules:{test_mlp:{functions:["test_alpha","test_fit","test_gradient","test_lbfgs_classification","test_lbfgs_regression","test_learning_rate_warmstart","test_multilabel_classification","test_partial_fit_classes_error","test_partial_fit_classification","test_partial_fit_unseen_classes","test_partial_fit_regression","test_partial_fit_errors","test_params_errors","test_predict_proba_binary","test_predict_proba_multiclass","test_predict_proba_multilabel","test_shuffle","test_sparse_matrices","test_tolerance","test_verbose_sgd","test_early_stopping","test_adaptive_learning_rate","test_n_iter_no_change","test_early_stopping_stratified"],types:{}},test_rbm:{functions:["test_fit","test_partial_fit","test_transform","test_small_sparse","test_small_sparse_partial_fit","test_sample_hiddens","test_fit_gibbs","test_fit_gibbs_sparse","test_gibbs_smoke","test_score_samples","test_rbm_verbose","test_sparse_and_verbose"],types:{}},test_stochastic_optimizers:{functions:["test_base_optimizer","test_sgd_optimizer_no_momentum","test_sgd_optimizer_momentum","test_sgd_optimizer_trigger_stopping","test_sgd_optimizer_nesterovs_momentum","test_adam_optimizer"],types:{}}},types:{},functions:[]},multilayer_perceptron:{functions:["_pack"],types:{BaseMultilayerPerceptron:{methods:["_unpack",{name:"_forward_pass",updates:[1]},{name:"_compute_loss_grad",updates:[5,6]},{name:"_loss_grad_lbfgs",updates:[0,4]},{name:"_backprop",updates:[4,5,6]},{name:"_initialize",updates:[0]},"_init_coef",{name:"_fit",updates:[0,3]},"_validate_hyperparameters",{name:"_fit_lbfgs",updates:[0]},{name:"_fit_stochastic",updates:[0,3,4,5,6]},{name:"_update_no_improvement_count",updates:[0]},{name:"fit",updates:[0]},{name:"_partial_fit",updates:[0]},"_predict"]},MLPClassifier:{methods:[{name:"__init__",updates:[],returns:"MLPClassifier"},"__init__",{name:"_validate_input",updates:[0]},"predict","fit",{name:"_partial_fit",updates:[0]},"predict_log_proba","predict_proba"]},MLPRegressor:{methods:[{name:"__init__",updates:[],returns:"MLPRegressor"},"__init__","predict","_validate_input",{name:"fit",updates:[0]}]}}},rbm:{functions:[],types:{BernoulliRBM:{methods:[{name:"__init__",updates:[0],returns:"BernoulliRBM"},"transform","_mean_hiddens","_sample_hiddens","_sample_visibles","_free_energy",{name:"gibbs",updates:[0]},{name:"partial_fit",updates:[0]},{name:"_fit",updates:[0]},"score_samples",{name:"fit",updates:[0]}]}}}},types:{BernoulliRBM:{methods:[{name:"__init__",updates:[0],returns:"BernoulliRBM"},"transform","_mean_hiddens","_sample_hiddens","_sample_visibles","_free_energy",{name:"gibbs",updates:[0]},{name:"partial_fit",updates:[0]},{name:"_fit",updates:[0]},"score_samples",{name:"fit",updates:[0]}]},MLPClassifier:{methods:[{name:"__init__",updates:[],returns:"MLPClassifier"},"__init__",{name:"_validate_input",updates:[0]},"predict","fit",{name:"_partial_fit",updates:[0]},"predict_log_proba","predict_proba"]},MLPRegressor:{methods:[{name:"__init__",updates:[],returns:"MLPRegressor"},"__init__","predict","_validate_input",{name:"fit",updates:[0]}]}},functions:[]},preprocessing:{modules:{tests:{modules:{test_base:{functions:["toarray","_check_transform_selected","test_transform_selected_retain_order"],types:{}},test_common:{functions:["_get_valid_samples_by_column"],types:{}},test_data:{functions:["toarray","_check_dim_1axis","assert_correct_incr","test_polynomial_features","test_polynomial_feature_names","test_polynomial_feature_array_order","test_standard_scaler_1d","test_standard_scaler_dtype","test_scale_1d","test_scaler_2d_arrays","test_scaler_float16_overflow","test_handle_zeros_in_scale","test_minmax_scaler_partial_fit","test_standard_scaler_partial_fit","test_standard_scaler_partial_fit_numerical_stability","test_partial_fit_sparse_input","test_standard_scaler_trasform_with_partial_fit","test_min_max_scaler_iris","test_min_max_scaler_zero_variance_features","test_minmax_scale_axis1","test_min_max_scaler_1d","test_scaler_without_centering","_check_identity_scalers_attributes","test_scaler_return_identity","test_scaler_int","test_scaler_without_copy","test_scale_sparse_with_mean_raise_exception","test_scale_input_finiteness_validation","test_robust_scaler_error_sparse","test_robust_scaler_col_zero_sparse","test_robust_scaler_2d_arrays","test_robust_scaler_transform_one_row_csr","test_robust_scaler_iris","test_robust_scaler_iris_quantiles","test_quantile_transform_iris","test_quantile_transform_check_error","test_quantile_transform_sparse_ignore_zeros","test_quantile_transform_dense_toy","test_quantile_transform_subsampling","test_quantile_transform_sparse_toy","test_quantile_transform_bounds","test_quantile_transform_and_inverse","test_quantile_transform_nan","test_deprecated_quantile_transform_copy","test_robust_scaler_invalid_range","test_scale_function_without_centering","test_robust_scale_axis1","test_robust_scale_1d_array","test_robust_scaler_zero_variance_features","test_maxabs_scaler_zero_variance_features","test_maxabs_scaler_large_negative_value","test_maxabs_scaler_transform_one_row_csr","test_maxabs_scaler_1d","test_maxabs_scaler_partial_fit","test_normalizer_l1","test_normalizer_l2","test_normalizer_max","test_normalize","test_binarizer","test_center_kernel","test_cv_pipeline_precomputed","test_fit_transform","test_add_dummy_feature","test_add_dummy_feature_coo","test_add_dummy_feature_csc","test_add_dummy_feature_csr","test_fit_cold_start","test_power_transformer_1d","test_power_transformer_2d","test_power_transformer_boxcox_strictly_positive_exception","test_power_transformer_method_exception","test_power_transformer_lambda_zero","test_power_transformer_lambda_one","test_yeo_johnson_darwin_example","test_power_transform_default_method"],types:{}},test_discretization:{functions:["test_valid_n_bins","test_invalid_n_bins","test_invalid_n_bins_array","test_invalid_n_features","test_transform_1d_behavior","test_numeric_stability","test_invalid_encode_option","test_encode_options","test_invalid_strategy_option","test_overwrite","test_percentile_numeric_stability"],types:{}},test_encoders:{functions:["toarray","test_one_hot_encoder_sparse","test_one_hot_encoder_dense","test_one_hot_encoder_deprecationwarnings","test_one_hot_encoder_force_new_behaviour","_run_one_hot","_check_one_hot","test_one_hot_encoder_categorical_features","test_one_hot_encoder_categorical_features_ignore_unknown","test_one_hot_encoder_handle_unknown","test_one_hot_encoder_not_fitted","test_one_hot_encoder_no_categorical_features","test_one_hot_encoder_handle_unknown_strings","test_one_hot_encoder_set_params","check_categorical_onehot","test_one_hot_encoder_unsorted_categories","test_one_hot_encoder_specified_categories_mixed_columns","test_one_hot_encoder_pandas","test_one_hot_encoder_feature_names","test_one_hot_encoder_feature_names_unicode","test_ordinal_encoder_inverse","test_ordinal_encoder_raise_categories_shape","test_encoder_dtypes","test_encoder_dtypes_pandas","test_one_hot_encoder_warning","test_one_hot_encoder_drop_manual","test_one_hot_encoder_invalid_params"],types:{}},test_function_transformer:{functions:["_make_func","test_delegate_to_func","test_function_transformer_frame"],types:{}},test_imputation:{functions:["safe_median","safe_mean"],types:{}},test_label:{functions:["toarray","test_label_binarizer","test_label_binarizer_unseen_labels","test_label_binarizer_set_label_encoding","test_label_encoder_negative_ints","test_label_encoder_errors","test_sparse_output_multilabel_binarizer","test_multilabel_binarizer","test_multilabel_binarizer_empty_sample","test_multilabel_binarizer_unknown_class","test_multilabel_binarizer_given_classes","test_multilabel_binarizer_multiple_calls","test_multilabel_binarizer_same_length_sequence","test_multilabel_binarizer_non_integer_labels","test_multilabel_binarizer_non_unique","test_multilabel_binarizer_inverse_validation","test_label_binarize_with_class_order","check_binarized_results","test_label_binarize_binary","test_label_binarize_multiclass","test_label_binarize_multilabel","test_invalid_input_label_binarize","test_inverse_binarize_multiclass"],types:{}}},types:{},functions:[]},base:{functions:[{name:"_transform_selected",updates:[0]}],types:{}},data:{functions:[{name:"_handle_zeros_in_scale",updates:[0]},"scale","minmax_scale","maxabs_scale","robust_scale","normalize",{name:"binarize",updates:[0]},"add_dummy_feature","quantile_transform","power_transform"],types:{MinMaxScaler:{methods:[{name:"__init__",updates:[0],returns:"MinMaxScaler"},"_reset",{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]},"transform","inverse_transform","_more_tags"]},StandardScaler:{methods:[{name:"__init__",updates:[0],returns:"StandardScaler"},"_reset",{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]},"transform","inverse_transform","_more_tags"]},MaxAbsScaler:{methods:[{name:"__init__",updates:[0],returns:"MaxAbsScaler"},"_reset",{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]},"transform","inverse_transform","_more_tags"]},RobustScaler:{methods:[{name:"__init__",updates:[0],returns:"RobustScaler"},{name:"fit",updates:[0]},"transform","inverse_transform","_more_tags"]},PolynomialFeatures:{methods:[{name:"__init__",updates:[0],returns:"PolynomialFeatures"},"get_feature_names",{name:"fit",updates:[0]},"transform"]},Normalizer:{methods:[{name:"__init__",updates:[0],returns:"Normalizer"},"fit","transform","_more_tags"]},Binarizer:{methods:[{name:"__init__",updates:[0],returns:"Binarizer"},"fit","transform","_more_tags"]},KernelCenterer:{methods:[{name:"__init__",updates:[],returns:"KernelCenterer"},"__init__",{name:"fit",updates:[0]},"transform"]},QuantileTransformer:{methods:[{name:"__init__",updates:[0],returns:"QuantileTransformer"},{name:"_dense_fit",updates:[0]},{name:"_sparse_fit",updates:[0]},{name:"fit",updates:[0]},{name:"_transform_col",updates:[1]},"_check_inputs","_check_is_fitted",{name:"_transform",updates:[1]},{name:"transform",updates:[1]},{name:"inverse_transform",updates:[1]},"_more_tags"]},PowerTransformer:{methods:[{name:"__init__",updates:[0],returns:"PowerTransformer"},{name:"fit",updates:[0,1]},{name:"fit_transform",updates:[0,1]},{name:"_fit",updates:[0,1]},{name:"transform",updates:[1]},{name:"inverse_transform",updates:[1]},"_box_cox_inverse_tranform","_yeo_johnson_inverse_transform","_yeo_johnson_transform","_box_cox_optimize","_yeo_johnson_optimize","_check_input","_more_tags"]}}},imputation:{functions:["_get_mask","_most_frequent"],types:{Imputer:{methods:[{name:"__init__",updates:[0],returns:"Imputer"},{name:"fit",updates:[0]},"_sparse_fit","_dense_fit",{name:"transform",updates:[1]},"_more_tags"]}}},label:{functions:["_encode_numpy","_encode_python","_encode","_encode_check_unknown","label_binarize","_inverse_binarize_multiclass",{name:"_inverse_binarize_thresholding",updates:[0]}],types:{LabelEncoder:{methods:[{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","inverse_transform","_more_tags"]},LabelBinarizer:{methods:[{name:"__init__",updates:[0],returns:"LabelBinarizer"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","inverse_transform","_more_tags"]},MultiLabelBinarizer:{methods:[{name:"__init__",updates:[0],returns:"MultiLabelBinarizer"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},{name:"transform",updates:[0]},{name:"_build_cache",updates:[0]},"_transform","inverse_transform","_more_tags"]}}},setup:{functions:["configuration"],types:{}}},types:{Binarizer:{methods:[{name:"__init__",updates:[0],returns:"Binarizer"},"fit","transform","_more_tags"]},KernelCenterer:{methods:[{name:"__init__",updates:[],returns:"KernelCenterer"},"__init__",{name:"fit",updates:[0]},"transform"]},MinMaxScaler:{methods:[{name:"__init__",updates:[0],returns:"MinMaxScaler"},"_reset",{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]},"transform","inverse_transform","_more_tags"]},MaxAbsScaler:{methods:[{name:"__init__",updates:[0],returns:"MaxAbsScaler"},"_reset",{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]},"transform","inverse_transform","_more_tags"]},Normalizer:{methods:[{name:"__init__",updates:[0],returns:"Normalizer"},"fit","transform","_more_tags"]},RobustScaler:{methods:[{name:"__init__",updates:[0],returns:"RobustScaler"},{name:"fit",updates:[0]},"transform","inverse_transform","_more_tags"]},StandardScaler:{methods:[{name:"__init__",updates:[0],returns:"StandardScaler"},"_reset",{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]},"transform","inverse_transform","_more_tags"]},QuantileTransformer:{methods:[{name:"__init__",updates:[0],returns:"QuantileTransformer"},{name:"_dense_fit",updates:[0]},{name:"_sparse_fit",updates:[0]},{name:"fit",updates:[0]},{name:"_transform_col",updates:[1]},"_check_inputs","_check_is_fitted",{name:"_transform",updates:[1]},{name:"transform",updates:[1]},{name:"inverse_transform",updates:[1]},"_more_tags"]},PowerTransformer:{methods:[{name:"__init__",updates:[0],returns:"PowerTransformer"},{name:"fit",updates:[0,1]},{name:"fit_transform",updates:[0,1]},{name:"_fit",updates:[0,1]},{name:"transform",updates:[1]},{name:"inverse_transform",updates:[1]},"_box_cox_inverse_tranform","_yeo_johnson_inverse_transform","_yeo_johnson_transform","_box_cox_optimize","_yeo_johnson_optimize","_check_input","_more_tags"]},PolynomialFeatures:{methods:[{name:"__init__",updates:[0],returns:"PolynomialFeatures"},"get_feature_names",{name:"fit",updates:[0]},"transform"]},LabelBinarizer:{methods:[{name:"__init__",updates:[0],returns:"LabelBinarizer"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","inverse_transform","_more_tags"]},LabelEncoder:{methods:[{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform","inverse_transform","_more_tags"]},MultiLabelBinarizer:{methods:[{name:"__init__",updates:[0],returns:"MultiLabelBinarizer"},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},{name:"transform",updates:[0]},{name:"_build_cache",updates:[0]},"_transform","inverse_transform","_more_tags"]},Imputer:{methods:[{name:"__init__",updates:[0],returns:"Imputer"},{name:"fit",updates:[0]},"_sparse_fit","_dense_fit",{name:"transform",updates:[1]},"_more_tags"]}},functions:["add_dummy_feature",{name:"binarize",updates:[0]},"normalize","scale","robust_scale","maxabs_scale","minmax_scale","quantile_transform","power_transform","label_binarize"]},semi_supervised:{modules:{tests:{modules:{test_label_propagation:{functions:["test_fit_transduction","test_distribution","test_predict","test_predict_proba","test_label_spreading_closed_form","test_label_propagation_closed_form","test_valid_alpha","test_convergence_speed","test_convergence_warning"],types:{}}},types:{},functions:[]},label_propagation:{functions:[],types:{BaseLabelPropagation:{methods:[{name:"__init__",updates:[0],returns:"BaseLabelPropagation"},{name:"_get_kernel",updates:[0]},"predict",{name:"predict_proba",updates:[0]},{name:"fit",updates:[0]}]},LabelPropagation:{methods:[{name:"__init__",updates:[0],returns:"LabelPropagation"},"__init__",{name:"_build_graph",updates:[0]},{name:"fit",updates:[0]},"predict",{name:"predict_proba",updates:[0]}]},LabelSpreading:{methods:[{name:"__init__",updates:[0],returns:"LabelSpreading"},"__init__",{name:"_build_graph",updates:[0]},"predict",{name:"predict_proba",updates:[0]},{name:"fit",updates:[0]}]}}}},types:{LabelPropagation:{methods:[{name:"__init__",updates:[0],returns:"LabelPropagation"},"__init__",{name:"_build_graph",updates:[0]},{name:"fit",updates:[0]},"predict",{name:"predict_proba",updates:[0]}]},LabelSpreading:{methods:[{name:"__init__",updates:[0],returns:"LabelSpreading"},"__init__",{name:"_build_graph",updates:[0]},"predict",{name:"predict_proba",updates:[0]},{name:"fit",updates:[0]}]}},functions:[]},svm:{modules:{tests:{modules:{test_bounds:{functions:["test_l1_min_c_l2_loss","check_l1_min_c","test_ill_posed_min_c","test_unsupported_loss"],types:{}},test_sparse:{functions:["check_svm_model_equal","test_unsorted_indices","test_svc_with_custom_kernel","test_svc_iris","test_sparse_decision_function","test_error","test_linearsvc","test_linearsvc_iris","test_sample_weights","test_sparse_liblinear_intercept_handling","test_sparse_realdata","test_sparse_svc_clone_with_callable_kernel","test_timeout","test_consistent_proba"],types:{}},test_svm:{functions:["test_libsvm_parameters","test_libsvm_iris","test_precomputed","test_svr","test_linearsvr","test_linearsvr_fit_sampleweight","test_svr_errors","test_oneclass","test_oneclass_decision_function","test_oneclass_score_samples","test_tweak_params","test_probability","test_decision_function","test_decision_function_shape","test_svr_predict","test_sample_weights","test_bad_input","test_unicode_kernel","test_sparse_precomputed","test_linearsvc_parameters","test_linearsvx_loss_penalty_deprecations","test_linear_svx_uppercase_loss_penality_raises_error","test_linearsvc","test_linearsvc_crammer_singer","test_linearsvc_fit_sampleweight","test_crammer_singer_binary","test_linearsvc_iris","test_dense_liblinear_intercept_handling","test_liblinear_set_coef","test_immutable_coef_property","test_linearsvc_verbose","test_svc_clone_with_callable_kernel","test_svc_bad_kernel","test_timeout","test_unfitted","test_linear_svm_convergence_warnings","test_svr_coef_sign","test_linear_svc_intercept_scaling","test_lsvc_intercept_scaling_zero","test_hasattr_predict_proba","test_decision_function_shape_two_class","test_ovr_decision_function","test_gamma_auto","test_gamma_scale"],types:{}}},types:{},functions:[]},base:{functions:["_one_vs_one_coef","_get_liblinear_solver_type","_fit_liblinear"],types:{BaseLibSVM:{methods:[{name:"fit",updates:[0]},{name:"_validate_targets",updates:[0]},"_warn_from_fit_status",{name:"_dense_fit",updates:[0]},{name:"_sparse_fit",updates:[1,0]},"predict","_dense_predict","_sparse_predict","_compute_kernel",{name:"_decision_function",updates:[1]},"_dense_decision_function",{name:"_sparse_decision_function",updates:[1]},"_validate_for_predict","_get_coef"]},BaseSVC:{methods:[{name:"_validate_targets",updates:[0]},"decision_function","predict","_check_proba","_predict_proba","_predict_log_proba","_dense_predict_proba",{name:"_sparse_predict_proba",updates:[1]},"_get_coef",{name:"fit",updates:[0]}]}}},bounds:{functions:["l1_min_c"],types:{}},classes:{functions:[],types:{LinearSVC:{methods:[{name:"__init__",updates:[0],returns:"LinearSVC"},{name:"fit",updates:[0]},"predict","score"]},LinearSVR:{methods:[{name:"__init__",updates:[0],returns:"LinearSVR"},{name:"fit",updates:[0]},"predict","score"]},SVC:{methods:[{name:"__init__",updates:[],returns:"SVC"},"__init__"]},NuSVC:{methods:[{name:"__init__",updates:[],returns:"NuSVC"},"__init__"]},SVR:{methods:[{name:"__init__",updates:[],returns:"SVR"},"__init__"]},NuSVR:{methods:[{name:"__init__",updates:[],returns:"NuSVR"},"__init__"]},OneClassSVM:{methods:[{name:"__init__",updates:[],returns:"OneClassSVM"},"__init__",{name:"fit",updates:[0]},"decision_function","score_samples","predict"]}}},setup:{functions:["configuration"],types:{}}},types:{SVC:{methods:[{name:"__init__",updates:[],returns:"SVC"},"__init__"]},NuSVC:{methods:[{name:"__init__",updates:[],returns:"NuSVC"},"__init__"]},SVR:{methods:[{name:"__init__",updates:[],returns:"SVR"},"__init__"]},NuSVR:{methods:[{name:"__init__",updates:[],returns:"NuSVR"},"__init__"]},OneClassSVM:{methods:[{name:"__init__",updates:[],returns:"OneClassSVM"},"__init__",{name:"fit",updates:[0]},"decision_function","score_samples","predict"]},LinearSVC:{methods:[{name:"__init__",updates:[0],returns:"LinearSVC"},{name:"fit",updates:[0]}]},LinearSVR:{methods:[{name:"__init__",updates:[0],returns:"LinearSVR"},{name:"fit",updates:[0]}]}},functions:["l1_min_c"]},tests:{modules:{test_base:{functions:["test_clone","test_clone_2","test_clone_buggy","test_clone_empty_array","test_clone_nan","test_clone_sparse_matrices","test_clone_estimator_types","test_repr","test_str","test_get_params","test_is_classifier","test_set_params","test_set_params_passes_all_parameters","test_set_params_updates_valid_params","test_score_sample_weight","test_clone_pandas_dataframe","test_pickle_version_warning_is_not_raised_with_matching_version","test_pickle_version_warning_is_issued_upon_different_version","test_pickle_version_warning_is_issued_when_no_version_info_in_pickle","test_pickle_version_no_warning_is_issued_with_non_sklearn_estimator","test_pickling_when_getstate_is_overwritten_by_mixin","test_pickling_when_getstate_is_overwritten_by_mixin_outside_of_sklearn","test_tag_inheritance","test_regressormixin_score_multioutput"],types:{MyEstimator:{methods:[{name:"__init__",updates:[0],returns:"MyEstimator"}]},K:{methods:[{name:"__init__",updates:[0],returns:"K"}]},T:{methods:[{name:"__init__",updates:[0],returns:"T"}]},NaNTag:{methods:["_more_tags"]},NoNaNTag:{methods:["_more_tags"]},OverrideTag:{methods:["_more_tags"]},DiamondOverwriteTag:{methods:[]},ModifyInitParams:{methods:[{name:"__init__",updates:[0],returns:"ModifyInitParams"}]},Buggy:{methods:[{name:"__init__",updates:[0],returns:"Buggy"}]},NoEstimator:{methods:[{name:"__init__",updates:[],returns:"NoEstimator"},"__init__","fit","predict"]},VargEstimator:{methods:[{name:"__init__",updates:[],returns:"VargEstimator"},"__init__"]},TestDecisionTree:{methods:["set_params"]},DummyEstimator:{methods:[{name:"__init__",updates:[0],returns:"DummyEstimator"},"fit","transform"]},TreeBadVersion:{methods:["__getstate__"]},TreeNoVersion:{methods:["__getstate__"]},DontPickleAttributeMixin:{methods:["__getstate__",{name:"__setstate__",updates:[1]}]},MultiInheritanceEstimator:{methods:[{name:"__init__",updates:[0],returns:"MultiInheritanceEstimator"}]},SingleInheritanceEstimator:{methods:[{name:"__init__",updates:[0],returns:"SingleInheritanceEstimator"},"__getstate__"]}}},test_calibration:{functions:["test_calibration_multiclass","test_calibration_prefit","test_sigmoid_calibration","test_calibration_curve","test_calibration_nan_imputer","test_calibration_prob_sum","test_calibration_less_classes"],types:{MockTensorClassifier:{methods:[{name:"fit",updates:[0]},"decision_function"]}}},test_check_build:{functions:["test_raise_build_error"],types:{}},test_common:{functions:["test_all_estimator_no_base_class","_tested_estimators","_generate_checks_per_estimator","_rename_partial","_tested_linear_classifiers","test_root_import_all_completeness","test_all_tests_are_importable"],types:{}},test_config:{functions:["test_config_context","test_config_context_exception","test_set_config"],types:{}},test_discriminant_analysis:{functions:["test_lda_predict","test_lda_priors","test_lda_coefs","test_lda_transform","test_lda_explained_variance_ratio","test_lda_orthogonality","test_lda_scaling","test_lda_store_covariance","test_lda_numeric_consistency_float32_float64","test_qda","test_qda_priors","test_qda_store_covariance","test_qda_regularization","test_covariance"],types:{}},test_docstring_parameters:{functions:[],types:{}},test_dummy:{functions:["_check_behavior_2d","_check_behavior_2d_for_constant","_check_equality_regressor","test_most_frequent_and_prior_strategy","test_most_frequent_and_prior_strategy_with_2d_column_y","test_most_frequent_and_prior_strategy_multioutput","test_stratified_strategy","test_stratified_strategy_multioutput","test_uniform_strategy","test_uniform_strategy_multioutput","test_string_labels","test_classifier_exceptions","test_mean_strategy_regressor","test_mean_strategy_multioutput_regressor","test_regressor_exceptions","test_median_strategy_regressor","test_median_strategy_multioutput_regressor","test_quantile_strategy_regressor","test_quantile_strategy_multioutput_regressor","test_quantile_invalid","test_quantile_strategy_empty_train","test_constant_strategy_regressor","test_constant_strategy_multioutput_regressor","test_y_mean_attribute_regressor","test_unknown_strategey_regressor","test_constants_not_specified_regressor","test_constant_size_multioutput_regressor","test_constant_strategy","test_constant_strategy_multioutput","test_constant_strategy_exceptions","test_classification_sample_weight","test_constant_strategy_sparse_target","test_uniform_strategy_sparse_target_warning","test_stratified_strategy_sparse_target","test_most_frequent_and_prior_strategy_sparse_target","test_dummy_regressor_sample_weight","test_dummy_regressor_on_3D_array","test_dummy_classifier_on_3D_array","test_dummy_regressor_return_std"],types:{}},test_init:{functions:["test_import_skl"],types:{}},test_isotonic:{functions:["test_permutation_invariance","test_check_increasing_small_number_of_samples","test_check_increasing_up","test_check_increasing_up_extreme","test_check_increasing_down","test_check_increasing_down_extreme","test_check_ci_warn","test_isotonic_regression","test_isotonic_regression_ties_min","test_isotonic_regression_ties_max","test_isotonic_regression_ties_secondary_","test_isotonic_regression_with_ties_in_differently_sized_groups","test_isotonic_regression_reversed","test_isotonic_regression_auto_decreasing","test_isotonic_regression_auto_increasing","test_assert_raises_exceptions","test_isotonic_sample_weight_parameter_default_value","test_isotonic_min_max_boundaries","test_isotonic_sample_weight","test_isotonic_regression_oob_raise","test_isotonic_regression_oob_clip","test_isotonic_regression_oob_nan","test_isotonic_regression_oob_bad","test_isotonic_regression_oob_bad_after","test_isotonic_regression_pickle","test_isotonic_duplicate_min_entry","test_isotonic_ymin_ymax","test_isotonic_zero_weight_loop","test_fast_predict","test_isotonic_copy_before_fit","test_isotonic_dtype","test_make_unique_dtype"],types:{}},test_kernel_approximation:{functions:["test_additive_chi2_sampler","test_skewed_chi2_sampler","test_rbf_sampler","test_input_validation","test_nystroem_approximation","test_nystroem_default_parameters","test_nystroem_singular_kernel","test_nystroem_poly_kernel_params","test_nystroem_callable"],types:{}},test_kernel_ridge:{functions:["test_kernel_ridge","test_kernel_ridge_csr","test_kernel_ridge_csc","test_kernel_ridge_singular_kernel","test_kernel_ridge_precomputed","test_kernel_ridge_precomputed_kernel_unchanged","test_kernel_ridge_sample_weights","test_kernel_ridge_multi_output"],types:{}},test_metaestimators:{functions:[],types:{DelegatorData:{methods:[{name:"__init__",updates:[0],returns:"DelegatorData"}]},SubEstimator:{methods:[{name:"__init__",updates:[0],returns:"SubEstimator"},{name:"fit",updates:[0]},"_check_fit"]}}},test_multiclass:{functions:["test_ovr_exceptions","test_check_classification_targets","test_ovr_fit_predict","test_ovr_partial_fit_exceptions","test_ovr_ovo_regressor","test_ovr_fit_predict_sparse","test_ovr_multiclass","test_ovr_multilabel","test_ovr_fit_predict_svc","test_ovr_multilabel_dataset","test_ovr_single_label_predict_proba","test_ovr_multilabel_decision_function","test_ovr_single_label_decision_function","test_ovr_pipeline","test_ovr_coef_","test_ovr_coef_exceptions","test_ovo_exceptions","test_ovo_fit_on_list","test_ovo_fit_predict","test_ovo_partial_fit_predict","test_ovo_decision_function","test_ovo_string_y","test_ovo_one_class","test_ovo_float_y","test_ecoc_exceptions","test_ecoc_fit_predict","test_ecoc_float_y","test_pairwise_indices","test_pairwise_attribute"],types:{}},test_multioutput:{functions:["test_multi_target_regression","test_multi_target_regression_one_target","test_multi_target_sparse_regression","test_multi_target_sample_weights_api","test_multi_target_sample_weights","test_multi_output_classification_partial_fit_parallelism","test_multi_output_predict_proba","test_multi_output_classification","test_multiclass_multioutput_estimator","test_multiclass_multioutput_estimator_predict_proba","test_multi_output_classification_sample_weights","test_multi_output_exceptions","generate_multilabel_dataset_with_correlations","test_classifier_chain_fit_and_predict_with_linear_svc"],types:{}},test_naive_bayes:{functions:["test_gnb","test_gnb_prior","test_gnb_sample_weight","test_gnb_neg_priors","test_gnb_priors","test_gnb_priors_sum_isclose","test_gnb_wrong_nb_priors","test_gnb_prior_greater_one","test_gnb_prior_large_bias","test_check_update_with_no_data","test_gnb_pfit_wrong_nb_features","test_discrete_prior","check_partial_fit","test_mnb_prior_unobserved_targets","test_gnb_partial_fit","test_discretenb_predict_proba","check_sample_weight_multiclass","test_sample_weight_mnb","test_coef_intercept_shape","test_check_accuracy_on_digits","test_feature_log_prob_bnb","test_bnb","test_cnb","test_naive_bayes_scale_invariance","test_alpha","test_alpha_vector"],types:{}},test_pipeline:{functions:["test_pipeline_init","test_pipeline_init_tuple","test_pipeline_fit_params","test_pipeline_sample_weight_supported","test_pipeline_sample_weight_unsupported","test_pipeline_raise_set_params_error","test_pipeline_methods_pca_svm","test_pipeline_methods_preprocessing_svm","test_fit_predict_on_pipeline","test_fit_predict_on_pipeline_without_fit_predict","test_fit_predict_with_intermediate_fit_params","test_predict_with_predict_params","test_feature_union","test_make_union","test_make_union_kwargs","test_pipeline_transform","test_pipeline_fit_transform","test_pipeline_slice","test_pipeline_index","test_set_pipeline_steps","test_pipeline_named_steps","test_pipeline_ducktyping","test_make_pipeline","test_feature_union_weights","test_feature_union_parallel","test_feature_union_feature_names","test_set_feature_union_steps","test_step_name_validation","test_pipeline_wrong_memory","test_pipeline_with_cache_attribute","test_pipeline_memory","test_make_pipeline_memory","test_pipeline_param_error"],types:{NoFit:{methods:[{name:"__init__",updates:[0],returns:"NoFit"}]},NoTrans:{methods:["fit","get_params",{name:"set_params",updates:[0]}]},NoInvTransf:{methods:["transform","fit","get_params",{name:"set_params",updates:[0]}]},Transf:{methods:["transform","inverse_transform","fit","get_params",{name:"set_params",updates:[0]}]},TransfFitParams:{methods:[{name:"fit",updates:[0]},"transform","inverse_transform","get_params",{name:"set_params",updates:[0]}]},Mult:{methods:[{name:"__init__",updates:[0],returns:"Mult"},"fit","transform","inverse_transform","predict","score"]},FitParamT:{methods:[{name:"__init__",updates:[0],returns:"FitParamT"},{name:"fit",updates:[0]},"predict",{name:"fit_predict",updates:[0]},"score"]},DummyTransf:{methods:[{name:"fit",updates:[0]},"transform","inverse_transform","get_params",{name:"set_params",updates:[0]}]},DummyEstimatorParams:{methods:["fit",{name:"predict",updates:[0]}]},DummyMemory:{methods:["cache"]},WrongDummyMemory:{methods:[]}}},test_random_projection:{functions:["make_sparse_random_data","densify","test_invalid_jl_domain","test_input_size_jl_min_dim","check_input_size_random_matrix","check_size_generated","check_zero_mean_and_unit_norm","check_input_with_sparse_random_matrix","test_gaussian_random_matrix","test_sparse_random_matrix","test_sparse_random_projection_transformer_invalid_density","test_random_projection_transformer_invalid_input","test_try_to_transform_before_fit","test_too_many_samples_to_find_a_safe_embedding","test_random_projection_embedding_quality","test_SparseRandomProjection_output_representation","test_correct_RandomProjection_dimensions_embedding","test_warning_n_components_greater_than_n_features","test_works_with_sparse_data"],types:{}},test_site_joblib:{functions:["test_old_pickle"],types:{}}},types:{},functions:[]},tree:{modules:{tests:{modules:{test_export:{functions:["test_graphviz_toy","test_graphviz_errors","test_friedman_mse_in_graphviz","test_precision","test_export_text_errors","test_export_text","test_plot_tree_entropy","test_plot_tree_gini"],types:{}},test_reingold_tilford:{functions:[],types:{}},test_tree:{functions:["assert_tree_equal","test_classification_toy","test_weighted_classification_toy","test_regression_toy","test_xor","test_iris","test_boston","test_probability","test_arrayrepr","test_pure_set","test_numerical_stability","test_importances","test_importances_raises","test_importances_gini_equal_mse","test_max_features","test_error","test_min_samples_split","test_min_samples_leaf","check_min_weight_fraction_leaf","check_min_weight_fraction_leaf_with_min_samples_leaf","test_min_impurity_split","test_min_impurity_decrease","test_multioutput","test_classes_shape","test_unbalanced_iris","test_memory_layout","test_sample_weight","test_sample_weight_invalid","check_class_weights","check_class_weight_errors","test_max_leaf_nodes","test_max_leaf_nodes_max_depth","test_arrays_persist","test_only_constant_features","test_behaviour_constant_feature_after_splits","test_with_only_one_non_constant_features","test_big_input","test_realloc","test_huge_allocations","check_sparse_input","check_sparse_parameters","check_sparse_criterion","check_explicit_sparse_zeros","_check_min_weight_leaf_split_level","check_min_weight_leaf_split_level","check_public_apply","check_public_apply_sparse","check_presort_sparse","test_presort_sparse","test_decision_path_hardcoded","check_decision_path","check_no_sparse_y_support","test_mae","test_criterion_copy","test_empty_leaf_infinite_threshold","test_decision_tree_memmap"],types:{}}},types:{},functions:[]},export:{functions:["_color_brew","plot_tree","export_graphviz","_compute_depth","export_text"],types:{Sentinel:{methods:["__repr__"]},_BaseTreeExporter:{methods:[{name:"__init__",updates:[0],returns:"_BaseTreeExporter"},"get_color","get_fill_color","node_to_str"]},_DOTTreeExporter:{methods:[{name:"__init__",updates:[0],returns:"_DOTTreeExporter"},"export","tail","head","recurse","get_color","get_fill_color","node_to_str"]},_MPLTreeExporter:{methods:[{name:"__init__",updates:[0],returns:"_MPLTreeExporter"},"_make_tree","export","recurse","get_color","get_fill_color","node_to_str"]}}},setup:{functions:["configuration"],types:{}},tree:{functions:[],types:{BaseDecisionTree:{methods:["get_depth","get_n_leaves",{name:"fit",updates:[0]},"_validate_X_predict","predict","apply","decision_path"]},DecisionTreeClassifier:{methods:[{name:"__init__",updates:[],returns:"DecisionTreeClassifier"},"__init__",{name:"fit",updates:[0]},"predict_proba","predict_log_proba","get_depth","get_n_leaves","predict","apply","decision_path"]},DecisionTreeRegressor:{methods:[{name:"__init__",updates:[],returns:"DecisionTreeRegressor"},"__init__",{name:"fit",updates:[0]},"get_depth","get_n_leaves","predict","apply","decision_path"]},ExtraTreeClassifier:{methods:[{name:"__init__",updates:[],returns:"ExtraTreeClassifier"},"__init__",{name:"fit",updates:[0]},"predict_proba","predict_log_proba","get_depth","get_n_leaves","predict","apply","decision_path"]},ExtraTreeRegressor:{methods:[{name:"__init__",updates:[],returns:"ExtraTreeRegressor"},"__init__",{name:"fit",updates:[0]},"get_depth","get_n_leaves","predict","apply","decision_path"]}}}},types:{DecisionTreeClassifier:{methods:[{name:"__init__",updates:[],returns:"DecisionTreeClassifier"},"__init__",{name:"fit",updates:[0]},"predict_proba","predict_log_proba","get_depth","get_n_leaves","predict","apply","decision_path"]},DecisionTreeRegressor:{methods:[{name:"__init__",updates:[],returns:"DecisionTreeRegressor"},"__init__",{name:"fit",updates:[0]},"get_depth","get_n_leaves","predict","apply","decision_path"]},ExtraTreeClassifier:{methods:[{name:"__init__",updates:[],returns:"ExtraTreeClassifier"},"__init__",{name:"fit",updates:[0]},"predict_proba","predict_log_proba","get_depth","get_n_leaves","predict","apply","decision_path"]},ExtraTreeRegressor:{methods:[{name:"__init__",updates:[],returns:"ExtraTreeRegressor"},"__init__",{name:"fit",updates:[0]},"get_depth","get_n_leaves","predict","apply","decision_path"]}},functions:["export_graphviz","plot_tree","export_text"]},utils:{modules:{tests:{modules:{test_class_weight:{functions:["test_compute_class_weight","test_compute_class_weight_not_present","test_compute_class_weight_dict","test_compute_class_weight_balanced_negative","test_compute_class_weight_balanced_unordered","test_compute_class_weight_default","test_compute_sample_weight","test_compute_sample_weight_with_subsample","test_compute_sample_weight_errors","test_compute_sample_weight_more_than_32"],types:{}},test_cython_blas:{functions:["_no_op"],types:{}},test_deprecation:{functions:["test_deprecated","test_is_deprecated","test_pickle"],types:{MockClass1:{methods:[]},MockClass2:{methods:[]},MockClass3:{methods:[]},MockClass4:{methods:[]}}},test_estimator_checks:{functions:["test_check_fit_score_takes_y_works_on_deprecated_fit","test_check_estimator","test_check_outlier_corruption","test_check_estimator_transformer_no_mixin","test_check_estimator_clones","test_check_estimators_unfitted","test_check_no_attributes_set_in_init","test_check_estimator_pairwise","run_tests_without_pytest","test_check_class_weight_balanced_linear_classifier"],types:{CorrectNotFittedError:{methods:[]},BaseBadClassifier:{methods:["fit","predict"]},ChangesDict:{methods:[{name:"__init__",updates:[0],returns:"ChangesDict"},"fit",{name:"predict",updates:[0]}]},SetsWrongAttribute:{methods:[{name:"__init__",updates:[0],returns:"SetsWrongAttribute"},{name:"fit",updates:[0]}]},ChangesWrongAttribute:{methods:[{name:"__init__",updates:[0],returns:"ChangesWrongAttribute"},{name:"fit",updates:[0]}]},ChangesUnderscoreAttribute:{methods:[{name:"fit",updates:[0]}]},RaisesErrorInSetParams:{methods:[{name:"__init__",updates:[0],returns:"RaisesErrorInSetParams"},{name:"set_params",updates:[0]},"fit"]},ModifiesValueInsteadOfRaisingError:{methods:[{name:"__init__",updates:[0],returns:"ModifiesValueInsteadOfRaisingError"},{name:"set_params",updates:[0]},"fit"]},ModifiesAnotherValue:{methods:[{name:"__init__",updates:[0],returns:"ModifiesAnotherValue"},{name:"set_params",updates:[0]},"fit"]},NoCheckinPredict:{methods:["fit","predict"]},NoSparseClassifier:{methods:["fit","predict"]},CorrectNotFittedErrorClassifier:{methods:[{name:"fit",updates:[0]},"predict"]},NoSampleWeightPandasSeriesType:{methods:["fit","predict"]},BadBalancedWeightsClassifier:{methods:[{name:"__init__",updates:[0],returns:"BadBalancedWeightsClassifier"},{name:"fit",updates:[0]},"predict"]},BadTransformerWithoutMixin:{methods:["fit","transform"]},NotInvariantPredict:{methods:["fit","predict"]},LargeSparseNotSupportedClassifier:{methods:["fit"]},SparseTransformer:{methods:[{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"transform"]},TestEstimatorWithDeprecatedFitMethod:{methods:[]},NonConformantEstimatorPrivateSet:{methods:[{name:"__init__",updates:[0],returns:"NonConformantEstimatorPrivateSet"}]},NonConformantEstimatorNoParamSet:{methods:[{name:"__init__",updates:[],returns:"NonConformantEstimatorNoParamSet"},"__init__"]}}},test_extmath:{functions:["test_density","test_uniform_weights","test_random_weights","check_randomized_svd_low_rank","test_randomized_svd_low_rank_with_noise","test_randomized_svd_infinite_rank","test_randomized_svd_transpose_consistency","test_randomized_svd_power_iteration_normalizer","test_randomized_svd_sparse_warnings","test_svd_flip","test_randomized_svd_sign_flip","test_randomized_svd_sign_flip_with_transpose","test_cartesian","test_logistic_sigmoid","test_incremental_variance_update_formulas","test_incremental_mean_and_variance_ignore_nan","test_incremental_variance_ddof","test_vector_sign_flip","test_softmax","test_stable_cumsum"],types:{}},test_fast_dict:{functions:["test_int_float_dict","test_int_float_dict_argmin"],types:{}},test_fixes:{functions:["test_masked_array_obj_dtype_pickleable"],types:{}},test_linear_assignment:{functions:[],types:{}},test_metaestimators:{functions:["test_delegated_docstring","test_if_delegate_has_method"],types:{Prefix:{methods:["func"]},MockMetaEstimator:{methods:[]},MetaEst:{methods:[{name:"__init__",updates:[0],returns:"MetaEst"}]},MetaEstTestTuple:{methods:[]},MetaEstTestList:{methods:[]},HasPredict:{methods:["predict"]},HasNoPredict:{methods:[]}}},test_multiclass:{functions:["test_unique_labels","test_unique_labels_non_specific","test_unique_labels_mixed_types","test_is_multilabel","test_check_classification_targets","test_type_of_target","test_class_distribution","test_safe_split_with_precomputed_kernel","test_ovr_decision_function"],types:{NotAnArray:{methods:[{name:"__init__",updates:[0],returns:"NotAnArray"},"__array__"]}}},test_murmurhash:{functions:["test_mmhash3_int","test_mmhash3_int_array","test_mmhash3_bytes","test_mmhash3_unicode","test_no_collision_on_byte_range","test_uniform_distribution"],types:{}},test_optimize:{functions:["test_newton_cg"],types:{}},test_pprint:{functions:["test_basic","test_changed_only","test_pipeline","test_deeply_nested","test_gridsearch","test_gridsearch_pipeline","test_n_max_elements_to_show","test_bruteforce_ellipsis","test_builtin_prettyprinter"],types:{LogisticRegression:{methods:[{name:"__init__",updates:[0],returns:"LogisticRegression"},{name:"fit",updates:[0]},"score","predict","predict_proba","predict_log_proba"]},StandardScaler:{methods:[{name:"__init__",updates:[0],returns:"StandardScaler"},"transform"]},RFE:{methods:[{name:"__init__",updates:[0],returns:"RFE"}]},GridSearchCV:{methods:[{name:"__init__",updates:[0],returns:"GridSearchCV"}]},CountVectorizer:{methods:[{name:"__init__",updates:[0],returns:"CountVectorizer"}]},Pipeline:{methods:[{name:"__init__",updates:[0],returns:"Pipeline"}]},SVC:{methods:[{name:"__init__",updates:[0],returns:"SVC"}]},PCA:{methods:[{name:"__init__",updates:[0],returns:"PCA"}]},NMF:{methods:[{name:"__init__",updates:[0],returns:"NMF"}]},SimpleImputer:{methods:[{name:"__init__",updates:[0],returns:"SimpleImputer"}]}}},test_random:{functions:["test_invalid_sample_without_replacement_algorithm","test_sample_without_replacement_algorithms","check_edge_case_of_sample_int","check_sample_int","check_sample_int_distribution","test_random_choice_csc","test_random_choice_csc_errors","test_our_rand_r"],types:{}},test_seq_dataset:{functions:["assert_csr_equal_values","make_dense_dataset_32","make_dense_dataset_64","make_sparse_dataset_32","make_sparse_dataset_64","test_buffer_dtype_mismatch_error"],types:{}},test_shortest_path:{functions:[{name:"floyd_warshall_slow",updates:[0]},"generate_graph","test_floyd_warshall","test_dijkstra","test_shortest_path","test_dijkstra_bug_fix"],types:{}},test_show_versions:{functions:["test_get_sys_info","test_get_deps_info","test_show_versions_with_blas"],types:{}},test_sparsefuncs:{functions:["test_mean_variance_axis0","test_mean_variance_axis1","test_incr_mean_variance_axis","test_mean_variance_illegal_axis","test_densify_rows","test_inplace_column_scale","test_inplace_row_scale","test_inplace_swap_row","test_inplace_swap_column","test_min_max_axis_errors","test_count_nonzero","test_csc_row_median","test_inplace_normalize"],types:{}},test_testing:{functions:["test_assert_less","test_assert_greater","test_assert_less_equal","test_assert_greater_equal","test_set_random_state","test_assert_allclose_dense_sparse","test_assert_raises_msg","test_assert_raise_message","test_ignore_warning","f_ok","f_bad_sections","f_bad_order","f_missing","f_check_param_definition","test_check_docstring_parameters","check_memmap","test_tempmemmap","test_create_memmap_backed_data"],types:{TestWarns:{methods:["test_warn","test_warn_wrong_warning"]},Klass:{methods:["f_missing","f_bad_sections"]},MockEst:{methods:[{name:"__init__",updates:[],returns:"MockEst"},"__init__","fit","predict","predict_proba","score"]},MockMetaEstimator:{methods:[{name:"__init__",updates:[0],returns:"MockMetaEstimator"}]},RegistrationCounter:{methods:[{name:"__init__",updates:[0],returns:"RegistrationCounter"},{name:"__call__",updates:[0]}]}}},test_utils:{functions:["test_make_rng","test_deprecated","test_resample","test_resample_stratified","test_resample_stratified_replace","test_resample_stratify_2dy","test_resample_stratify_sparse_error","test_safe_mask","test_column_or_1d","test_safe_indexing","test_safe_indexing_pandas","test_safe_indexing_mock_pandas","test_shuffle_on_ndim_equals_three","test_shuffle_dont_convert_to_array","test_gen_even_slices","dummy_func","test_deprecation_joblib_api"],types:{Ham:{methods:[]}}},test_validation:{functions:["test_as_float_array","test_np_matrix","test_memmap","test_ordering","test_check_array_force_all_finite_object","test_check_array_pandas_dtype_object_conversion","test_check_array_on_mock_dataframe","test_check_array_dtype_stability","test_check_array_dtype_warning","test_check_array_warn_on_dtype_deprecation","test_check_array_accept_sparse_type_exception","test_check_array_accept_sparse_no_exception","test_check_array_accept_large_sparse_no_exception","test_check_array_accept_large_sparse_raise_exception","test_check_array_min_samples_and_features_messages","test_check_array_complex_data_error","test_has_fit_parameter","test_check_symmetric","test_check_is_fitted","test_check_consistent_length","test_check_dataframe_fit_attribute","test_suppress_validation","test_check_array_series","test_check_dataframe_warns_on_dtype","test_check_X_y_informative_error","test_retrieve_samples_from_non_standard_shape"],types:{TestClassWithDeprecatedFitMethod:{methods:[]},DummyMemory:{methods:["cache"]},WrongDummyMemory:{methods:[]},TestNonNumericShape:{methods:[{name:"__init__",updates:[0],returns:"TestNonNumericShape"},"__len__"]}}}},types:{},functions:[]},class_weight:{functions:["compute_class_weight","compute_sample_weight"],types:{}},deprecation:{functions:["_is_deprecated"],types:{deprecated:{methods:[{name:"__init__",updates:[0],returns:"deprecated"},{name:"__call__",updates:[1]},{name:"_decorate_class",updates:[1]},"_decorate_fun","_decorate_property","_update_doc"]}}},estimator_checks:{functions:["_safe_tags","_yield_checks","_yield_classifier_checks","_yield_regressor_checks","_yield_transformer_checks","_yield_clustering_checks","_yield_outliers_checks","_yield_all_checks","check_estimator","_boston_subset",{name:"set_checking_parameters",updates:[0]},"_is_pairwise","_is_pairwise_metric","pairwise_estimator_convert_X","_generate_sparse_matrix","check_estimator_sparse_data","check_complex_data","is_public_parameter","_apply_on_subsets","_check_transformer","check_outlier_corruption","check_outliers_train","choose_check_classifiers_labels","check_classifiers_classes","check_no_attributes_set_in_init","check_parameters_default_constructible","multioutput_estimator_convert_y_2d","check_outliers_fit_predict","check_fit_idempotent"],types:{NotAnArray:{methods:[{name:"__init__",updates:[0],returns:"NotAnArray"},"__array__"]}}},extmath:{functions:["squared_norm","row_norms","fast_logdet","density","safe_sparse_dot","randomized_range_finder","randomized_svd","weighted_mode",{name:"cartesian",updates:[1]},"svd_flip","log_logistic","softmax","safe_min","make_nonnegative","_safe_accumulator_op","_incremental_mean_and_var","_deterministic_vector_sign_flip","stable_cumsum"],types:{}},fixes:{functions:["_parse_version","parallel_helper","_astype_copy_false","_joblib_parallel_args"],types:{MaskedArray:{methods:["__getstate__"]}}},graph:{functions:["single_source_shortest_path_length"],types:{}},linear_assignment_:{functions:["linear_assignment","_hungarian",{name:"_step1",updates:[0]},"_step3",{name:"_step4",updates:[0]},"_step5","_step6"],types:{_HungarianState:{methods:[{name:"__init__",updates:[0],returns:"_HungarianState"},"_clear_covers"]}}},metaestimators:{functions:["if_delegate_has_method","_safe_split"],types:{_BaseComposition:{methods:["_get_params","_set_params","_replace_estimator","_validate_names"]},_IffHasAttrDescriptor:{methods:[{name:"__init__",updates:[0],returns:"_IffHasAttrDescriptor"},"__get__"]}}},mocking:{functions:[],types:{ArraySlicingWrapper:{methods:[{name:"__init__",updates:[0],returns:"ArraySlicingWrapper"},"__getitem__"]},MockDataFrame:{methods:[{name:"__init__",updates:[0],returns:"MockDataFrame"},"__len__","__array__","__eq__","__ne__"]},CheckingClassifier:{methods:[{name:"__init__",updates:[0],returns:"CheckingClassifier"},{name:"fit",updates:[0]},"predict","score","_more_tags"]}}},multiclass:{functions:["_unique_multiclass","_unique_indicator","unique_labels","_is_integral_float","is_multilabel","check_classification_targets","type_of_target",{name:"_check_partial_fit_first_call",updates:[0]},"class_distribution","_ovr_decision_function"],types:{}},optimize:{functions:["_line_search_wolfe12","_cg","newton_cg"],types:{_LineSearchError:{methods:[]}}},random:{functions:[{name:"random_choice_csc",updates:[1]}],types:{}},setup:{functions:["configuration"],types:{}},sparsefuncs:{functions:["_raise_typeerror","_raise_error_wrong_axis",{name:"inplace_csr_column_scale",updates:[0]},{name:"inplace_csr_row_scale",updates:[0]},"mean_variance_axis","incr_mean_variance_axis","inplace_column_scale","inplace_row_scale","inplace_swap_row_csc",{name:"inplace_swap_row_csr",updates:[0]},"inplace_swap_row","inplace_swap_column","_minor_reduce","_min_or_max_axis","_sparse_min_or_max","_sparse_min_max","_sparse_nan_min_max","min_max_axis","count_nonzero","_get_median","_get_elem_at_rank","csc_median_axis_0"],types:{}},stats:{functions:["_weighted_percentile"],types:{}},testing:{functions:["assert_warns","assert_warns_message","assert_warns_div0","assert_no_warnings","ignore_warnings","assert_raise_message","assert_allclose_dense_sparse","install_mldata_mock","uninstall_mldata_mock","all_estimators","set_random_state","clean_warning_registry","check_skip_network","_delete_folder","create_memmap_backed_data","_get_args","_get_func_name","check_docstring_parameters","assert_run_python_script"],types:{_IgnoreWarnings:{methods:[{name:"__init__",updates:[0],returns:"_IgnoreWarnings"},"__call__","__repr__",{name:"__enter__",updates:[0]},"__exit__"]},mock_mldata_urlopen:{methods:[{name:"__init__",updates:[0],returns:"mock_mldata_urlopen"},"__call__"]},TempMemmap:{methods:[{name:"__init__",updates:[0],returns:"TempMemmap"},{name:"__enter__",updates:[0]},"__exit__"]}}},validation:{functions:["_assert_all_finite","assert_all_finite","as_float_array","_is_arraylike","_num_samples","check_memory","check_consistent_length","indexable","_ensure_sparse_format","_ensure_no_complex_data","check_array","_check_large_sparse","check_X_y","column_or_1d","check_random_state","has_fit_parameter","check_symmetric","check_is_fitted","check_non_negative","check_scalar"],types:{}}},types:{deprecated:{methods:[{name:"__init__",updates:[0],returns:"deprecated"},{name:"__call__",updates:[1]},{name:"_decorate_class",updates:[1]},"_decorate_fun","_decorate_property","_update_doc"]}},functions:["compute_class_weight","compute_sample_weight","as_float_array","assert_all_finite","check_random_state","column_or_1d","check_array","check_consistent_length","check_X_y","indexable","check_symmetric","check_scalar"]},base:{functions:["clone","_pprint","_update_if_consistent","is_classifier","is_regressor","is_outlier_detector"],types:{BaseEstimator:{methods:["get_params","set_params","__repr__","__getstate__","__setstate__","_get_tags"]},ClassifierMixin:{methods:["score"]},RegressorMixin:{methods:["score"]},ClusterMixin:{methods:["fit_predict"]},BiclusterMixin:{methods:["get_indices","get_shape","get_submatrix"]},TransformerMixin:{methods:["fit_transform"]},DensityMixin:{methods:["score"]},OutlierMixin:{methods:["fit_predict"]},MetaEstimatorMixin:{methods:[]},MultiOutputMixin:{methods:["_more_tags"]},_UnstableArchMixin:{methods:["_more_tags"]}}},calibration:{functions:["_sigmoid_calibration","calibration_curve"],types:{CalibratedClassifierCV:{methods:[{name:"__init__",updates:[0],returns:"CalibratedClassifierCV"},{name:"fit",updates:[0]},"predict_proba","predict"]},_CalibratedClassifier:{methods:[{name:"__init__",updates:[0],returns:"_CalibratedClassifier"},"_preproc",{name:"fit",updates:[0]},"predict_proba"]},_SigmoidCalibration:{methods:[{name:"fit",updates:[0]},"predict"]}}},conftest:{functions:[],types:{}},discriminant_analysis:{functions:["_cov","_class_means","_class_cov"],types:{LinearDiscriminantAnalysis:{methods:[{name:"__init__",updates:[0],returns:"LinearDiscriminantAnalysis"},{name:"_solve_lsqr",updates:[0]},{name:"_solve_eigen",updates:[0]},{name:"_solve_svd",updates:[0]},{name:"fit",updates:[0]},"transform","predict_proba","predict_log_proba"]},QuadraticDiscriminantAnalysis:{methods:[{name:"__init__",updates:[0],returns:"QuadraticDiscriminantAnalysis"},{name:"fit",updates:[0]},"_decision_function","decision_function","predict","predict_proba","predict_log_proba"]}}},dummy:{functions:[],types:{DummyClassifier:{methods:[{name:"__init__",updates:[0],returns:"DummyClassifier"},{name:"fit",updates:[0]},"predict","predict_proba","predict_log_proba","_more_tags","score"]},DummyRegressor:{methods:[{name:"__init__",updates:[0],returns:"DummyRegressor"},{name:"fit",updates:[0]},"predict","_more_tags","score"]}}},exceptions:{functions:[],types:{NotFittedError:{methods:[]},ChangedBehaviorWarning:{methods:[]},ConvergenceWarning:{methods:[]},DataConversionWarning:{methods:[]},DataDimensionalityWarning:{methods:[]},EfficiencyWarning:{methods:[]},FitFailedWarning:{methods:[]},NonBLASDotWarning:{methods:[]},SkipTestWarning:{methods:[]},UndefinedMetricWarning:{methods:[]}}},isotonic:{functions:["check_increasing","isotonic_regression"],types:{IsotonicRegression:{methods:[{name:"__init__",updates:[0],returns:"IsotonicRegression"},"_check_fit_data",{name:"_build_f",updates:[0]},{name:"_build_y",updates:[0]},{name:"fit",updates:[0]},"transform","predict","__getstate__",{name:"__setstate__",updates:[0]},"_more_tags"]}}},kernel_approximation:{functions:[],types:{RBFSampler:{methods:[{name:"__init__",updates:[0],returns:"RBFSampler"},{name:"fit",updates:[0]},"transform"]},SkewedChi2Sampler:{methods:[{name:"__init__",updates:[0],returns:"SkewedChi2Sampler"},{name:"fit",updates:[0]},"transform"]},AdditiveChi2Sampler:{methods:[{name:"__init__",updates:[0],returns:"AdditiveChi2Sampler"},{name:"fit",updates:[0]},"transform","_transform_dense","_transform_sparse","_more_tags"]},Nystroem:{methods:[{name:"__init__",updates:[0],returns:"Nystroem"},{name:"fit",updates:[0]},"transform","_get_kernel_params"]}}},kernel_ridge:{functions:[],types:{KernelRidge:{methods:[{name:"__init__",updates:[0],returns:"KernelRidge"},"_get_kernel",{name:"fit",updates:[0]},"predict"]}}},multiclass:{functions:["_fit_binary","_partial_fit_binary","_predict_binary","_check_estimator","_fit_ovo_binary","_partial_fit_ovo_binary"],types:{_ConstantPredictor:{methods:[{name:"fit",updates:[0]},"predict","decision_function","predict_proba"]},OneVsRestClassifier:{methods:[{name:"__init__",updates:[0],returns:"OneVsRestClassifier"},{name:"fit",updates:[0]},"predict"]},OneVsOneClassifier:{methods:[{name:"__init__",updates:[0],returns:"OneVsOneClassifier"},{name:"fit",updates:[0]},"predict","decision_function"]},OutputCodeClassifier:{methods:[{name:"__init__",updates:[0],returns:"OutputCodeClassifier"},{name:"fit",updates:[0]},"predict"]}}},multioutput:{functions:["_fit_estimator","_partial_fit_estimator"],types:{MultiOutputEstimator:{methods:[{name:"fit",updates:[0]},"predict","_more_tags"]},MultiOutputRegressor:{methods:[{name:"__init__",updates:[],returns:"MultiOutputRegressor"},"__init__","score",{name:"fit",updates:[0]},"predict"]},MultiOutputClassifier:{methods:[{name:"__init__",updates:[],returns:"MultiOutputClassifier"},"__init__","predict_proba","score","_more_tags",{name:"fit",updates:[0]},"predict"]},_BaseChain:{methods:[{name:"__init__",updates:[0],returns:"_BaseChain"},"predict"]},ClassifierChain:{methods:[{name:"fit",updates:[0]},"_more_tags","predict"]},RegressorChain:{methods:["fit","_more_tags","predict"]}}},naive_bayes:{functions:[],types:{BaseNB:{methods:["predict","predict_log_proba","predict_proba"]},GaussianNB:{methods:[{name:"__init__",updates:[0],returns:"GaussianNB"},{name:"fit",updates:[0]},{name:"partial_fit",updates:[0]},{name:"_partial_fit",updates:[0]},"_joint_log_likelihood","predict","predict_log_proba","predict_proba"]},BaseDiscreteNB:{methods:[{name:"_update_class_log_prior",updates:[0]},"_check_alpha",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"_get_coef","_get_intercept","_more_tags","predict","predict_log_proba","predict_proba"]},MultinomialNB:{methods:[{name:"__init__",updates:[0],returns:"MultinomialNB"},{name:"_count",updates:[0]},{name:"_update_feature_log_prob",updates:[0]},"_joint_log_likelihood",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"predict","predict_log_proba","predict_proba"]},ComplementNB:{methods:[{name:"__init__",updates:[0],returns:"ComplementNB"},{name:"_count",updates:[0]},{name:"_update_feature_log_prob",updates:[0]},"_joint_log_likelihood",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"predict","predict_log_proba","predict_proba"]},BernoulliNB:{methods:[{name:"__init__",updates:[0],returns:"BernoulliNB"},{name:"_count",updates:[0]},{name:"_update_feature_log_prob",updates:[0]},"_joint_log_likelihood",{name:"partial_fit",updates:[0]},{name:"fit",updates:[0]},"predict","predict_log_proba","predict_proba"]}}},pipeline:{functions:["_name_estimators","make_pipeline","_transform_one","_fit_transform_one","_fit_one","make_union"],types:{Pipeline:{methods:[{name:"__init__",updates:[0],returns:"Pipeline"},"get_params","set_params","_validate_steps","_iter","__len__","__getitem__","_log_message",{name:"_fit",updates:[0]},{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"_transform","_inverse_transform"]},FeatureUnion:{methods:[{name:"__init__",updates:[0],returns:"FeatureUnion"},"get_params","set_params","_validate_transformers","_iter","get_feature_names",{name:"fit",updates:[0]},{name:"fit_transform",updates:[0]},"_log_message",{name:"_parallel_func",updates:[0]},"transform","_update_transformer_list"]}}},random_projection:{functions:["johnson_lindenstrauss_min_dim","_check_density","_check_input_size","gaussian_random_matrix","sparse_random_matrix"],types:{BaseRandomProjection:{methods:[{name:"fit",updates:[0]},"transform"]},GaussianRandomProjection:{methods:[{name:"__init__",updates:[],returns:"GaussianRandomProjection"},"__init__","_make_random_matrix",{name:"fit",updates:[0]},"transform"]},SparseRandomProjection:{methods:[{name:"__init__",updates:[0],returns:"SparseRandomProjection"},{name:"_make_random_matrix",updates:[0]},{name:"fit",updates:[0]},"transform"]}}},setup:{functions:["configuration"],types:{}}},types:{},functions:[]}}},5665:function(e,t){e.exports={numpy:{modules:{random:{functions:[{name:"seed",updates:["$global"]}]}},functions:[{name:"abs",returns:"ndarray"},{name:"absolute",returns:"ndarray"},{name:"add",returns:"ndarray"},{name:"add_docstring",returns:"ndarray"},{name:"add_newdoc",returns:"ndarray"},{name:"add_newdoc_ufunc",returns:"ndarray"},{name:"alen",returns:"ndarray"},{name:"all",returns:"ndarray"},{name:"allclose",returns:"ndarray"},{name:"alltrue",returns:"ndarray"},{name:"amax",returns:"ndarray"},{name:"amin",returns:"ndarray"},{name:"angle",returns:"ndarray"},{name:"any",returns:"ndarray"},{name:"append",returns:"ndarray"},{name:"apply_along_axis",returns:"ndarray"},{name:"apply_over_axes",returns:"ndarray"},{name:"arange",returns:"ndarray"},{name:"arccos",returns:"ndarray"},{name:"arccosh",returns:"ndarray"},{name:"arcsin",returns:"ndarray"},{name:"arcsinh",returns:"ndarray"},{name:"arctan",returns:"ndarray"},{name:"arctan2",returns:"ndarray"},{name:"arctanh",returns:"ndarray"},{name:"argmax",returns:"ndarray"},{name:"argmin",returns:"ndarray"},{name:"argpartition",returns:"ndarray"},{name:"argsort",returns:"ndarray"},{name:"argwhere",returns:"ndarray"},{name:"around",returns:"ndarray"},{name:"array",returns:"ndarray"},{name:"array2string",returns:"ndarray"},{name:"array_equal",returns:"ndarray"},{name:"array_equiv",returns:"ndarray"},{name:"array_repr",returns:"ndarray"},{name:"array_split",returns:"ndarray"},{name:"array_str",returns:"ndarray"},{name:"asanyarray",returns:"ndarray"},{name:"asarray",returns:"ndarray"},{name:"asarray_chkfinite",returns:"ndarray"},{name:"ascontiguousarray",returns:"ndarray"},{name:"asfarray",returns:"ndarray"},{name:"asfortranarray",returns:"ndarray"},{name:"asmatrix",returns:"ndarray"},{name:"asscalar",returns:"ndarray"},{name:"atleast_1d",returns:"ndarray"},{name:"atleast_2d",returns:"ndarray"},{name:"atleast_3d",returns:"ndarray"},{name:"average",returns:"ndarray"},{name:"bartlett",returns:"ndarray"},{name:"base_repr",returns:"ndarray"},{name:"binary_repr",returns:"ndarray"},{name:"bincount",returns:"ndarray"},{name:"bitwise_and",returns:"ndarray"},{name:"bitwise_not",returns:"ndarray"},{name:"bitwise_or",returns:"ndarray"},{name:"bitwise_xor",returns:"ndarray"},{name:"blackman",returns:"ndarray"},{name:"block",returns:"ndarray"},{name:"bmat",returns:"ndarray"},{name:"broadcast",returns:"broadcast"},{name:"broadcast_arrays",returns:"broadcast"},{name:"broadcast_to",returns:"broadcast"},{name:"busday_count",returns:"ndarray"},{name:"busday_offset",returns:"ndarray"},"byte_bounds",{name:"can_cast",returns:"ndarray"},{name:"cbrt",returns:"ndarray"},{name:"cdouble",returns:"ndarray"},{name:"ceil",returns:"ndarray"},{name:"choose",returns:"ndarray"},{name:"clip",returns:"ndarray"},{name:"clongdouble",returns:"ndarray"},{name:"clongfloat",returns:"ndarray"},{name:"column_stack",returns:"ndarray"},{name:"common_type",returns:"ndarray"},{name:"compare_chararrays",returns:"ndarray"},{name:"compress",returns:"ndarray"},{name:"concatenate",returns:"ndarray"},{name:"conj",returns:"ndarray"},{name:"conjugate",returns:"ndarray"},{name:"convolve",returns:"ndarray"},{name:"copy",returns:"ndarray"},{name:"copysign",returns:"ndarray"},{name:"copyto",returns:"ndarray"},{name:"corrcoef",returns:"ndarray"},{name:"correlate",returns:"ndarray"},{name:"cos",returns:"ndarray"},{name:"cosh",returns:"ndarray"},{name:"count_nonzero",returns:"ndarray"},{name:"cov",returns:"ndarray"},{name:"cross",returns:"ndarray"},{name:"csingle",returns:"ndarray"},{name:"cumprod",returns:"ndarray"},{name:"cumproduct",returns:"ndarray"},{name:"cumsum",returns:"ndarray"},{name:"datetime64",returns:"ndarray"},{name:"datetime_as_string",returns:"ndarray"},{name:"datetime_data",returns:"ndarray"},{name:"deg2rad",returns:"ndarray"},{name:"degrees",returns:"ndarray"},{name:"delete",returns:"ndarray"},{name:"deprecate",returns:"ndarray"},{name:"deprecate_with_doc",returns:"ndarray"},{name:"diag",returns:"ndarray"},{name:"diag_indices",returns:"ndarray"},{name:"diag_indices_from",returns:"ndarray"},{name:"diagflat",returns:"ndarray"},{name:"diagonal",returns:"ndarray"},{name:"diff",returns:"ndarray"},{name:"digitize",returns:"ndarray"},{name:"disp",returns:"ndarray"},{name:"divide",returns:"ndarray"},{name:"divmod",returns:"ndarray"},{name:"dot",returns:"ndarray"},{name:"double",returns:"ndarray"},{name:"dsplit",returns:"ndarray"},{name:"dstack",returns:"ndarray"},{name:"dtype",returns:"ndarray"},{name:"ediff1d",returns:"ndarray"},{name:"einsum",returns:"ndarray"},{name:"einsum_path",returns:"ndarray"},{name:"empty",returns:"ndarray"},{name:"empty_like",returns:"ndarray"},{name:"equal",returns:"ndarray"},{name:"errstate",returns:"ndarray"},{name:"exp",returns:"ndarray"},{name:"exp2",returns:"ndarray"},{name:"expand_dims",returns:"ndarray"},{name:"expm1",returns:"ndarray"},{name:"extract",returns:"ndarray"},{name:"eye",returns:"ndarray"},{name:"fabs",returns:"ndarray"},{name:"fastCopyAndTranspose",returns:"ndarray"},{name:"fill_diagonal",returns:"ndarray"},{name:"find_common_type",returns:"ndarray"},{name:"finfo",returns:"ndarray"},{name:"fix",returns:"ndarray"},{name:"flatiter",returns:"ndarray"},{name:"flatnonzero",returns:"ndarray"},{name:"flexible",returns:"ndarray"},{name:"flip",returns:"ndarray"},{name:"fliplr",returns:"ndarray"},{name:"flipud",returns:"ndarray"},{name:"float",returns:"ndarray"},{name:"float16",returns:"ndarray"},{name:"float32",returns:"ndarray"},{name:"float64",returns:"ndarray"},{name:"float_",returns:"ndarray"},{name:"float_power",returns:"ndarray"},{name:"floating",returns:"ndarray"},{name:"floor",returns:"ndarray"},{name:"floor_divide",returns:"ndarray"},{name:"fmax",returns:"ndarray"},{name:"fmin",returns:"ndarray"},{name:"fmod",returns:"ndarray"},{name:"format_float_positional",returns:"ndarray"},{name:"format_float_scientific",returns:"ndarray"},{name:"format_parser",returns:"ndarray"},{name:"frexp",returns:"ndarray"},{name:"frombuffer",returns:"ndarray"},{name:"fromfile",returns:"ndarray"},{name:"fromfunction",returns:"ndarray"},{name:"fromiter",returns:"ndarray"},{name:"frompyfunc",returns:"ndarray"},{name:"fromregex",returns:"ndarray"},{name:"fromstring",returns:"ndarray"},{name:"full",returns:"ndarray"},{name:"full_like",returns:"ndarray"},{name:"fv",returns:"ndarray"},{name:"gcd",returns:"ndarray"},{name:"generic",returns:"ndarray"},{name:"genfromtxt",returns:"ndarray"},{name:"geomspace",returns:"ndarray"},{name:"get_array_wrap",returns:"ndarray"},{name:"get_include",returns:"ndarray"},{name:"get_printoptions",returns:"ndarray"},{name:"getbufsize",returns:"ndarray"},{name:"geterr",returns:"ndarray"},{name:"geterrcall",returns:"ndarray"},{name:"geterrobj",returns:"ndarray"},{name:"gradient",returns:"ndarray"},{name:"greater",returns:"ndarray"},{name:"greater_equal",returns:"ndarray"},{name:"half",returns:"ndarray"},{name:"hamming",returns:"ndarray"},{name:"hanning",returns:"ndarray"},{name:"heaviside",returns:"ndarray"},{name:"histogram",returns:"ndarray"},{name:"histogram2d",returns:"ndarray"},{name:"histogram_bin_edges",returns:"ndarray"},{name:"histogramdd",returns:"ndarray"},{name:"hsplit",returns:"ndarray"},{name:"hstack",returns:"ndarray"},{name:"hypot",returns:"ndarray"},{name:"i0",returns:"ndarray"},{name:"identity",returns:"ndarray"},{name:"iinfo",returns:"ndarray"},{name:"imag",returns:"ndarray"},{name:"in1d",returns:"ndarray"},{name:"indices",returns:"ndarray"},{name:"inexact",returns:"ndarray"},{name:"info",returns:"ndarray"},{name:"inner",returns:"ndarray"},{name:"insert",returns:"ndarray"},{name:"int_asbuffer",returns:"ndarray"},{name:"intc",returns:"ndarray"},{name:"integer",returns:"ndarray"},{name:"interp",returns:"ndarray"},{name:"intersect1d",returns:"ndarray"},{name:"intp",returns:"ndarray"},{name:"invert",returns:"ndarray"},{name:"ipmt",returns:"ndarray"},{name:"irr",returns:"ndarray"},{name:"is_busday",returns:"ndarray"},{name:"isclose",returns:"ndarray"},{name:"iscomplex",returns:"ndarray"},{name:"iscomplexobj",returns:"ndarray"},{name:"isfinite",returns:"ndarray"},{name:"isfortran",returns:"ndarray"},{name:"isin",returns:"ndarray"},{name:"isinf",returns:"ndarray"},{name:"isnan",returns:"ndarray"},{name:"isnat",returns:"ndarray"},{name:"isneginf",returns:"ndarray"},{name:"isposinf",returns:"ndarray"},{name:"isreal",returns:"ndarray"},{name:"isrealobj",returns:"ndarray"},{name:"isscalar",returns:"ndarray"},{name:"issctype",returns:"ndarray"},{name:"issubclass_",returns:"ndarray"},{name:"issubdtype",returns:"ndarray"},{name:"issubsctype",returns:"ndarray"},{name:"iterable",returns:"ndarray"},{name:"ix_",returns:"ndarray"},{name:"kaiser",returns:"ndarray"},{name:"kron",returns:"ndarray"},{name:"lcm",returns:"ndarray"},{name:"ldexp",returns:"ndarray"},{name:"left_shift",returns:"ndarray"},{name:"less",returns:"ndarray"},{name:"less_equal",returns:"ndarray"},{name:"lexsort",returns:"ndarray"},{name:"linspace",returns:"ndarray"},{name:"load",returns:"ndarray"},{name:"loads",returns:"ndarray"},{name:"loadtxt",returns:"ndarray"},{name:"log",returns:"ndarray"},{name:"log10",returns:"ndarray"},{name:"log1p",returns:"ndarray"},{name:"log2",returns:"ndarray"},{name:"logaddexp",returns:"ndarray"},{name:"logaddexp2",returns:"ndarray"},{name:"logical_and",returns:"ndarray"},{name:"logical_not",returns:"ndarray"},{name:"logical_or",returns:"ndarray"},{name:"logical_xor",returns:"ndarray"},{name:"logspace",returns:"ndarray"},{name:"long",returns:"ndarray"},{name:"longcomplex",returns:"ndarray"},{name:"longdouble",returns:"ndarray"},{name:"longfloat",returns:"ndarray"},{name:"longlong",returns:"ndarray"},{name:"lookfor",returns:"ndarray"},{name:"mafromtxt",returns:"ndarray"},{name:"mask_indices",returns:"ndarray"},{name:"mat",returns:"ndarray"},{name:"matmul",returns:"ndarray"},{name:"matrix",returns:"ndarray"},{name:"max",returns:"ndarray"},{name:"maximum",returns:"ndarray"},{name:"maximum_sctype",returns:"ndarray"},"may_share_memory",{name:"mean",returns:"ndarray"},{name:"median",returns:"ndarray"},{name:"memmap",returns:"ndarray"},{name:"meshgrid",returns:"ndarray"},{name:"min",returns:"ndarray"},{name:"min_scalar_type",returns:"ndarray"},{name:"minimum",returns:"ndarray"},{name:"mintypecode",returns:"ndarray"},{name:"mirr",returns:"ndarray"},{name:"mod",returns:"ndarray"},{name:"modf",returns:"ndarray"},{name:"moveaxis",returns:"ndarray"},{name:"msort",returns:"ndarray"},{name:"multiply",returns:"ndarray"},{name:"nan_to_num",returns:"ndarray"},{name:"nanargmax",returns:"ndarray"},{name:"nanargmin",returns:"ndarray"},{name:"nancumprod",returns:"ndarray"},{name:"nancumsum",returns:"ndarray"},{name:"nanmax",returns:"ndarray"},{name:"nanmean",returns:"ndarray"},{name:"nanmedian",returns:"ndarray"},{name:"nanmin",returns:"ndarray"},{name:"nanpercentile",returns:"ndarray"},{name:"nanprod",returns:"ndarray"},{name:"nanquantile",returns:"ndarray"},{name:"nanstd",returns:"ndarray"},{name:"nansum",returns:"ndarray"},{name:"nanvar",returns:"ndarray"},{name:"ndarray",returns:"ndarray"},{name:"ndenumerate",returns:"ndarray"},{name:"ndfromtxt",returns:"ndarray"},{name:"ndim",returns:"ndarray"},{name:"negative",returns:"ndarray"},{name:"nested_iters",returns:"ndarray"},{name:"nextafter",returns:"ndarray"},{name:"nonzero",returns:"ndarray"},{name:"not_equal",returns:"ndarray"},{name:"nper",returns:"ndarray"},{name:"npv",returns:"ndarray"},{name:"obj2sctype",returns:"ndarray"},{name:"ones",returns:"ndarray"},{name:"ones_like",returns:"ndarray"},{name:"outer",returns:"ndarray"},{name:"packbits",returns:"ndarray"},{name:"pad",returns:"ndarray"},{name:"partition",returns:"ndarray"},{name:"percentile",returns:"ndarray"},{name:"piecewise",returns:"ndarray"},{name:"place",returns:"ndarray"},{name:"pmt",returns:"ndarray"},{name:"poly",returns:"ndarray"},{name:"polyadd",returns:"ndarray"},{name:"polyder",returns:"ndarray"},{name:"polydiv",returns:"ndarray"},{name:"polyfit",returns:"ndarray"},{name:"polyint",returns:"ndarray"},{name:"polymul",returns:"ndarray"},{name:"polysub",returns:"ndarray"},{name:"polyval",returns:"ndarray"},{name:"positive",returns:"ndarray"},{name:"power",returns:"ndarray"},{name:"ppmt",returns:"ndarray"},{name:"printoptions",returns:"ndarray"},{name:"prod",returns:"ndarray"},{name:"product",returns:"ndarray"},{name:"promote_types",returns:"ndarray"},{name:"ptp",returns:"ndarray"},{name:"put",returns:"ndarray"},{name:"put_along_axis",returns:"ndarray"},{name:"putmask",returns:"ndarray"},{name:"pv",returns:"ndarray"},{name:"quantile",returns:"ndarray"},{name:"rad2deg",returns:"ndarray"},{name:"radians",returns:"ndarray"},{name:"rank",returns:"ndarray"},{name:"rate",returns:"ndarray"},{name:"ravel",returns:"ndarray"},{name:"ravel_multi_index",returns:"ndarray"},{name:"real",returns:"ndarray"},{name:"real_if_close",returns:"ndarray"},{name:"recfromcsv",returns:"ndarray"},{name:"recfromtxt",returns:"ndarray"},{name:"reciprocal",returns:"ndarray"},{name:"remainder",returns:"ndarray"},{name:"repeat",returns:"ndarray"},{name:"require",returns:"ndarray"},{name:"reshape",returns:"ndarray"},{name:"resize",returns:"ndarray"},{name:"result_type",returns:"ndarray"},{name:"right_shift",returns:"ndarray"},{name:"rint",returns:"ndarray"},{name:"roll",returns:"ndarray"},{name:"rollaxis",returns:"ndarray"},{name:"roots",returns:"ndarray"},{name:"rot90",returns:"ndarray"},{name:"round",returns:"ndarray"},{name:"round_",returns:"ndarray"},{name:"row_stack",returns:"ndarray"},"safe_eval","save","savetxt","savez","savez_compressed",{name:"sctype2char",returns:"ndarray"},{name:"searchsorted",returns:"ndarray"},{name:"select",returns:"ndarray"},{name:"set_numeric_ops",returns:"ndarray"},{name:"set_printoptions",returns:"ndarray"},{name:"set_string_function",returns:"ndarray"},{name:"setbufsize",returns:"ndarray"},{name:"setdiff1d",returns:"ndarray"},{name:"seterr",returns:"ndarray"},{name:"seterrcall",returns:"ndarray"},{name:"seterrobj",returns:"ndarray"},{name:"setxor1d",returns:"ndarray"},{name:"shape",returns:"ndarray"},{name:"shares_memory",returns:"ndarray"},{name:"short",returns:"ndarray"},{name:"show_config",returns:"ndarray"},{name:"sign",returns:"ndarray"},{name:"signbit",returns:"ndarray"},{name:"signedinteger",returns:"ndarray"},{name:"sin",returns:"ndarray"},{name:"sinc",returns:"ndarray"},{name:"single",returns:"ndarray"},{name:"singlecomplex",returns:"ndarray"},{name:"sinh",returns:"ndarray"},"size",{name:"sometrue",returns:"ndarray"},{name:"sort",returns:"ndarray"},{name:"sort_complex",returns:"ndarray"},{name:"source",returns:"ndarray"},{name:"spacing",returns:"ndarray"},{name:"split",returns:"ndarray"},{name:"sqrt",returns:"ndarray"},{name:"square",returns:"ndarray"},{name:"squeeze",returns:"ndarray"},{name:"stack",returns:"ndarray"},{name:"std",returns:"ndarray"},{name:"subtract",returns:"ndarray"},{name:"sum",returns:"ndarray"},{name:"swapaxes",returns:"ndarray"},{name:"take",returns:"ndarray"},{name:"take_along_axis",returns:"ndarray"},{name:"tan",returns:"ndarray"},{name:"tanh",returns:"ndarray"},{name:"tensordot",returns:"ndarray"},{name:"tile",returns:"ndarray"},{name:"timedelta64",returns:"ndarray"},{name:"trace",returns:"ndarray"},{name:"transpose",returns:"ndarray"},{name:"trapz",returns:"ndarray"},{name:"tri",returns:"ndarray"},{name:"tril",returns:"ndarray"},{name:"tril_indices",returns:"ndarray"},{name:"tril_indices_from",returns:"ndarray"},{name:"trim_zeros",returns:"ndarray"},{name:"triu",returns:"ndarray"},{name:"triu_indices",returns:"ndarray"},{name:"triu_indices_from",returns:"ndarray"},{name:"true_divide",returns:"ndarray"},{name:"trunc",returns:"ndarray"},"typename",{name:"union1d",returns:"ndarray"},{name:"unique",returns:"ndarray"},{name:"unpackbits",returns:"ndarray"},{name:"unravel_index",returns:"ndarray"},{name:"unwrap",returns:"ndarray"},{name:"vander",returns:"ndarray"},{name:"var",returns:"ndarray"},{name:"vdot",returns:"ndarray"},{name:"vectorize",returns:"ndarray"},{name:"vsplit",returns:"ndarray"},{name:"vstack",returns:"ndarray"},{name:"where",returns:"ndarray"},{name:"who",returns:"ndarray"},{name:"zeros",returns:"ndarray"},{name:"zeros_like",returns:"ndarray"}],types:{ndarray:{methods:[{name:"all",returns:"ndarray"},{name:"any",returns:"ndarray"},{name:"argmax",returns:"ndarray"},{name:"argmin",returns:"ndarray"},{name:"argpartition",returns:"ndarray"},{name:"argsort",returns:"ndarray"},{name:"astype",returns:"ndarray"},{name:"base",returns:"ndarray"},{name:"byteswap",returns:"ndarray",updates:[0]},{name:"choose",returns:"ndarray"},{name:"clip",returns:"ndarray"},{name:"compress",returns:"ndarray"},{name:"conj",returns:"ndarray"},{name:"conjugate",returns:"ndarray"},{name:"copy",returns:"ndarray"},{name:"cumprod",returns:"ndarray"},{name:"cumsum",returns:"ndarray"},{name:"data",returns:"ndarray"},{name:"diagonal",returns:"ndarray"},{name:"dot",returns:"ndarray"},{name:"dump",returns:"ndarray"},{name:"dumps",returns:"ndarray"},{name:"fill",returns:"ndarray",updates:[0]},{name:"flags",returns:"ndarray"},{name:"flat",returns:"ndarray"},{name:"flatten",returns:"ndarray"},{name:"getfield",returns:"ndarray"},{name:"imag",returns:"ndarray"},{name:"item",returns:"ndarray"},{name:"itemset",returns:"ndarray"},{name:"itemsize",returns:"ndarray"},{name:"max",returns:"ndarray"},{name:"mean",returns:"ndarray"},{name:"min",returns:"ndarray"},{name:"nbytes",returns:"ndarray"},{name:"ndim",returns:"ndarray"},{name:"newbyteorder",returns:"ndarray"},{name:"nonzero",returns:"ndarray"},{name:"partition",returns:"ndarray"},{name:"prod",returns:"ndarray"},{name:"ptp",returns:"ndarray"},{name:"put",returns:"ndarray"},{name:"ravel",returns:"ndarray"},{name:"real",returns:"ndarray"},{name:"repeat",returns:"ndarray"},{name:"reshape",returns:"ndarray"},{name:"resize",returns:"ndarray",updates:[0]},{name:"round",returns:"ndarray"},{name:"searchsorted",returns:"ndarray"},{name:"setfield",returns:"ndarray"},{name:"setflags",returns:"ndarray"},{name:"shape",returns:"ndarray"},{name:"size",returns:"ndarray"},{name:"sort",updates:[0]},{name:"squeeze",returns:"ndarray",updates:[0]},{name:"std",returns:"ndarray"},{name:"strides",returns:"ndarray"},{name:"sum",returns:"ndarray"},{name:"swapaxes",returns:"ndarray"},{name:"take",returns:"ndarray"},{name:"tobytes",returns:"ndarray"},{name:"tofile",returns:"ndarray"},{name:"tolist",returns:"ndarray"},{name:"tostring",returns:"ndarray"},{name:"trace",returns:"ndarray"},{name:"transpose",returns:"ndarray"},{name:"var",returns:"ndarray"},{name:"view",returns:"ndarray"}]}}}}},5666:function(e,t,s){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var r=a(s(2217)),_=s(2411),n=s(2288);function i(e,t){var s={};return Object.keys(e).forEach(function(a){return s[a]=t(e[a])}),s}var o=function(){function e(e){this.jsonSpecs=e,this.modules={},this.types={},this.functions={},this.importModuleDefinitions("__builtins__",[{path:"*",alias:""}])}return e.prototype.lookupFunction=function(e){var t=this.functions[e];if(t)return t;var s=this.types[e];return s?s.methods.find(function(e){return"__init__"===e.name})||{name:"__init__",updates:["0"],returns:e,returnsType:new _.ClassType(s)}:void 0},e.prototype.lookupNode=function(e){if(e.type===r.NAME)return this.lookupFunction(e.id);if(e.type===r.DOT){var t=n.printNode(e.value);return this.lookupModuleFunction(t,e.name)}},e.prototype.lookupModuleFunction=function(e,t){var s=this.modules[e];if(!s){var a=e.split(".");if(!(s=a.slice(1).reduce(function(e,t){return e&&e.modules?e.modules[t]:void 0},this.modules[a[0]])))return}var r=s.functions.find(function(e){return e.name===t});if(r)return r;var n=s.types[t];return n?n.methods.find(function(e){return"__init__"===e.name})||{name:"__init__",returns:t,returnsType:new _.ClassType(n)}:void 0},e.prototype.importModule=function(e,t){var s=this.lookupSpec(this.jsonSpecs,e.split("."));s?this.modules[t||e]=s:console.warn("*** WARNING no spec for module "+e)},e.prototype.resolveFunction=function(e){return"string"===typeof e?{name:e,reads:[],updates:[]}:(e.reads||(e.reads=[]),e.updates||(e.updates=[]),e)},e.prototype.resolveType=function(e){var t=this;return{methods:e.methods?e.methods.map(function(e){return t.resolveFunction(e)}):[]}},e.prototype.makePythonType=function(e,t){if(e.startsWith("List")){var s=e.slice(e.indexOf("[")+1,e.indexOf("]")),a=s.split(".");if(1===a.length)return new _.ListType(new _.ClassType(t.types[s]));for(var r=this.jsonSpecs[a[0]],n=1;n<a.length-2;n++)r=r[a[n]].modules;if(!r)return;var i=r.types[a[a.length-1]];return i?new _.ListType(new _.ClassType(this.resolveType(i))):void 0}return new _.ClassType(t.types[e])},e.prototype.resolveModule=function(e){var t=this,s={functions:e.functions?e.functions.map(function(e){return t.resolveFunction(e)}):[],types:e.types?i(e.types,this.resolveType.bind(this)):{},modules:e.modules?i(e.modules,this.resolveModule.bind(this)):{}};return s.functions.forEach(function(e){e.returns&&(e.returnsType=t.makePythonType(e.returns,s))}),Object.keys(s.types).forEach(function(e){s.types[e].methods.forEach(function(e){e.returns&&(e.returnsType=t.makePythonType(e.returns,s))})}),s},e.prototype.importModuleDefinitions=function(e,t){var s=this,a=this.lookupSpec(this.jsonSpecs,e.split("."));if(!a)return console.warn("*** WARNING no spec for module "+e),t.map(function(e){return e.alias||e.path});var r=[];return t.forEach(function(e){var t=a.functions?a.functions.map(function(e){return s.resolveFunction(e)}):[];if("*"===e.path)t.forEach(function(e){s.functions[e.name]=e,r.push(e.name)}),a.modules&&Object.keys(a.modules).forEach(function(e){s.modules[e]=a.modules[e],r.push(e)}),a.types&&Object.keys(a.types).forEach(function(e){s.types[e]=a.types[e],r.push(e)});else{var _=e.path.split(".");_.forEach(function(t,n){var i,o=e.alias||t;if(r.push(o),n===_.length-1)a.modules[t]?s.modules[o]=s.resolveModule(a.modules[t]):a.types[t]?s.types[o]=s.resolveType(a.types[t]):(i=a.functions.find(function(e){return e.name===t}))?s.functions[o]=s.resolveFunction(i):console.warn("*** WARNING cannot find import "+e.path);else if(!(a=a.modules[t]))return void console.warn("*** WARNING cannot find import "+e.path)})}}),r},e.prototype.lookupSpec=function(e,t){if(e&&0!=t.length){var s=e[t[0]];if(s)return t.length>1?this.lookupSpec(s.modules,t.slice(1)):this.resolveModule(s)}},e}();t.SymbolTable=o},5667:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=!1;t.startLogging=function(){a=!0},t.log=function(e){for(var t=[],s=1;s<arguments.length;s++)t[s-1]=arguments[s];a&&console.log.apply(console,[e].concat(t))}},5668:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=s(3361),r=s(3362),_=s(3360),n=s(2216),i=function(){function e(e,t){this.cell=e,this.executionTime=t}return e.prototype.toJSON=function(){return JSON.parse(JSON.stringify(this))},e}();t.CellExecution=i;var o=function(){function e(e,t){this.executionTime=e,this.cellSlices=t}return e.prototype.merge=function(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];for(var r={},n=[],i=0,o=t.concat(this);i<o.length;i++)for(var c=0,u=o[i].cellSlices;c<u.length;c++){var l=u[c],d=l.cell;if(!r[d.executionEventId]){var m=new a.CellSlice(d.deepCopy(),new _.LocationSet,l.executionTime);r[d.executionEventId]=m,n.push(m)}var p=r[d.executionEventId];p.slice=p.slice.union(l.slice)}return new e(new Date,n.sort(function(e,t){return e.cell.executionCount-t.cell.executionCount}))},e}();t.SlicedExecution=o;var c=function(){function e(e){this.dataflowAnalyzer=e,this.executionLog=[],this.executionLogged=[],this.programBuilder=new r.ProgramBuilder(e)}return e.prototype.logExecution=function(e){var t=new i(e,new Date);this.addExecutionToLog(t)},e.prototype.addExecutionToLog=function(e){this.programBuilder.add(e.cell),this.executionLog.push(e),this.executionLogged.forEach(function(t){return t(e)})},e.prototype.reset=function(){this.executionLog=[],this.programBuilder.reset()},e.prototype.sliceLatestExecution=function(e,t){return this.sliceAllExecutions(e,t).pop()},e.prototype.sliceAllExecutions=function(e,t){var s=this,r=new Map(this.executionLog.map(function(e){return[e.cell.executionEventId,e.executionTime]}));return t||(t=new _.LocationSet({first_line:1,first_column:1,last_line:1e4,last_column:1e4})),this.executionLog.filter(function(t){return t.cell.persistentId==e&&t.cell.executionCount}).map(function(e){var n=s.programBuilder.buildTo(e.cell.executionEventId);if(!n)return null;var i=n.cellToLineMap[e.cell.executionEventId],c=Math.min.apply(Math,i.items),u=t.mapSame(function(e){return{first_line:c+e.first_line-1,first_column:e.first_column,last_line:c+e.last_line-1,last_column:e.last_column}}),l=_.slice(n.tree,u,s.dataflowAnalyzer).items.sort(function(e,t){return e.first_line-t.first_line}),d={},m=[];l.forEach(function(e){var t=n.lineToCellMap[e.first_line],s=n.cellToLineMap[t.executionEventId],a=Math.min.apply(Math,s.items);m.indexOf(t)<0&&m.push(t);var r={first_line:e.first_line-a+1,first_column:e.first_column,last_line:e.last_line-a+1,last_column:e.last_column};d[t.executionEventId]||(d[t.executionEventId]=new _.LocationSet),d[t.executionEventId].add(r)});var p=m.map(function(e){return new a.CellSlice(e,d[e.executionEventId],r[e.executionEventId])});return new o(e.executionTime,p)}).filter(function(e){return null!=e&&void 0!=e})},Object.defineProperty(e.prototype,"cellExecutions",{get:function(){return this.executionLog},enumerable:!0,configurable:!0}),e.prototype.getCellProgram=function(e){return this.programBuilder.getCellProgram(e)},e.prototype.getDependentCells=function(e){var t=this.programBuilder.buildFrom(e),s=this.programBuilder.getCellProgramsWithSameId(e),a=new n.NumberSet;s.forEach(function(e){return a=a.union(t.cellToLineMap[e.cell.executionEventId])});var r=new(_.LocationSet.bind.apply(_.LocationSet,[void 0].concat(a.items.map(function(e){return{first_line:e,first_column:0,last_line:e,last_column:1}})))),i=_.slice(t.tree,r,void 0,_.SliceDirection.Forward).items;return(new(n.Set.bind.apply(n.Set,[void 0,function(e){return e.persistentId}].concat(i.map(function(e){return t.lineToCellMap[e.first_line]}))))).items.filter(function(t){return t.executionEventId!==e})},e}();t.ExecutionLogSlicer=c},5669:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e){this._defaultLineMagicRewriters=[new r,new _],this._lineMagicRewriters=e||this._defaultLineMagicRewriters}return e.prototype.rewrite=function(e,t){return e=this.rewriteCellMagic(e),e=this.rewriteLineMagic(e,this._lineMagicRewriters)},e.prototype.rewriteCellMagic=function(e){return e.match(/^[^#\s]*\s*%%/gm)?e.split("\n").map(function(e){return"##"+e}).join("\n"):e},e.prototype.rewriteLineMagic=function(e,t){var s=e.split("\n"),a=0,r=s.map(function(e,t){if(0==t)return 0;var r=a+s[t-1].length+1;return a=r,r});return e.replace(/^\s*(%(?:\\\s*\n|[^\n])+)/gm,function(e,s){for(var a=-1,_=-1,n=-1,i=-1,o=e.length-s.length,c=0;c<r.length;c++)o>=r[c]&&(a=c,_=o-r[c]),o+s.length>=r[c]&&(n=c,i=o+s.length-r[c]);var u,l=[{line:a,col:_},{line:n,col:i}],d=s.replace(/\\\s*\n/g,""),m=d.match(/^%(\w+).*/),p=[];if(m&&m.length>=2){var f=m[1];if(t)for(var h=0,g=t;h<g.length;h++){var y=g[h];if(y.commandName==f){var b=y.rewrite(e,d,l);b.text&&(u=b.text),b.annotations&&(p=p.concat(b.annotations));break}}}u||(u=e.split("\n").map(function(e){return"#"+e}).join("\n"));for(var v=0,k=p;v<k.length;v++){var w=k[v];u="'''"+w.key+": "+w.value+"''' "+u}return u})},e}();t.MagicsRewriter=a;var r=function(){function e(){this.commandName="time"}return e.prototype.rewrite=function(e,t,s){return{text:e.replace(/^\s*%time/,function(e){return'"'+" ".repeat(e.length-2)+'"'})}},e}();t.TimeLineMagicRewriter=r;var _=function(){function e(){this.commandName="pylab"}return e.prototype.rewrite=function(e,t,s){var a=["numpy","matplotlib","pylab","mlab","pyplot","np","plt","display","figsize","getfigs"].map(function(e){return{name:e,pos:[[s[0].line,s[0].col],[s[1].line,s[1].col]]}});return{annotations:[{key:"defs",value:JSON.stringify(a)}]}},e}();t.PylabLineMagicRewriter=_},5670:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.translateToNotebook=function(e,t,s){const r={language_info:{name:"python",codemirror_mode:{name:"ipython",version:t}},orig_nbformat:2,file_extension:".py",mimetype:"text/x-python",name:"python",npconvert_exporter:"python",pygments_lexer:`ipython${t}`,version:t};return{cells:[...s?[n(s)]:[],...a(e)],nbformat:4,nbformat_minor:2,metadata:r}};const a=e=>e.map(e=>r(e));function r(e){return{cell_type:"code",metadata:{},source:_(e.textSliceLines),outputs:[],execution_count:null}}t.pruneCodeCell=r;const _=e=>{return e.toString().split("\n").map((e,t,s)=>t<s.length-1?`${e}\n`:e)};function n(e){return{cell_type:"markdown",metadata:{},source:_(e),outputs:[],execution_count:null}}t.createMarkdownCell=n},5671:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=s(5672);t.uuid=function(){return a.v4()};const r={v4:/(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u,v5:/(?:^[a-f0-9]{8}-[a-f0-9]{4}-5[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u};t.regex=r;t.isUuid=function(e){return r.v4.test(e)||r.v5.test(e)};t.empty=function(){return"00000000-0000-0000-0000-000000000000"};t.fromString=function(e){return a.v5(e,"bb5d0ffa-9a4c-4d7c-8fc2-0a7d2220ba45")}},5672:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=s(5673);s.d(t,"v1",function(){return a.a});var r=s(5674);s.d(t,"v3",function(){return r.a});var _=s(5676);s.d(t,"v4",function(){return _.a});var n=s(5677);s.d(t,"v5",function(){return n.a})},5673:function(e,t,s){"use strict";var a,r,_=s(3363),n=s(2689),i=0,o=0;t.a=function(e,t,s){var c=t&&s||0,u=t||[],l=(e=e||{}).node||a,d=void 0!==e.clockseq?e.clockseq:r;if(null==l||null==d){var m=e.random||(e.rng||_.a)();null==l&&(l=a=[1|m[0],m[1],m[2],m[3],m[4],m[5]]),null==d&&(d=r=16383&(m[6]<<8|m[7]))}var p=void 0!==e.msecs?e.msecs:(new Date).getTime(),f=void 0!==e.nsecs?e.nsecs:o+1,h=p-i+(f-o)/1e4;if(h<0&&void 0===e.clockseq&&(d=d+1&16383),(h<0||p>i)&&void 0===e.nsecs&&(f=0),f>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");i=p,o=f,r=d;var g=(1e4*(268435455&(p+=122192928e5))+f)%4294967296;u[c++]=g>>>24&255,u[c++]=g>>>16&255,u[c++]=g>>>8&255,u[c++]=255&g;var y=p/4294967296*1e4&268435455;u[c++]=y>>>8&255,u[c++]=255&y,u[c++]=y>>>24&15|16,u[c++]=y>>>16&255,u[c++]=d>>>8|128,u[c++]=255&d;for(var b=0;b<6;++b)u[c+b]=l[b];return t||Object(n.a)(u)}},5674:function(e,t,s){"use strict";var a=s(3364),r=s(5675),_=Object(a.a)("v3",48,r.a);t.a=_},5675:function(e,t,s){"use strict";function a(e,t){var s=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(s>>16)<<16|65535&s}function r(e,t,s,r,_,n){return a((i=a(a(t,e),a(r,n)))<<(o=_)|i>>>32-o,s);var i,o}function _(e,t,s,a,_,n,i){return r(t&s|~t&a,e,t,_,n,i)}function n(e,t,s,a,_,n,i){return r(t&a|s&~a,e,t,_,n,i)}function i(e,t,s,a,_,n,i){return r(t^s^a,e,t,_,n,i)}function o(e,t,s,a,_,n,i){return r(s^(t|~a),e,t,_,n,i)}t.a=function(e){if("string"==typeof e){var t=unescape(encodeURIComponent(e));e=new Array(t.length);for(var s=0;s<t.length;s++)e[s]=t.charCodeAt(s)}return function(e){var t,s,a,r=[],_=32*e.length;for(t=0;t<_;t+=8)s=e[t>>5]>>>t%32&255,a=parseInt("0123456789abcdef".charAt(s>>>4&15)+"0123456789abcdef".charAt(15&s),16),r.push(a);return r}(function(e,t){var s,r,c,u,l;e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;var d=1732584193,m=-271733879,p=-1732584194,f=271733878;for(s=0;s<e.length;s+=16)r=d,c=m,u=p,l=f,d=_(d,m,p,f,e[s],7,-680876936),f=_(f,d,m,p,e[s+1],12,-389564586),p=_(p,f,d,m,e[s+2],17,606105819),m=_(m,p,f,d,e[s+3],22,-1044525330),d=_(d,m,p,f,e[s+4],7,-176418897),f=_(f,d,m,p,e[s+5],12,1200080426),p=_(p,f,d,m,e[s+6],17,-1473231341),m=_(m,p,f,d,e[s+7],22,-45705983),d=_(d,m,p,f,e[s+8],7,1770035416),f=_(f,d,m,p,e[s+9],12,-1958414417),p=_(p,f,d,m,e[s+10],17,-42063),m=_(m,p,f,d,e[s+11],22,-1990404162),d=_(d,m,p,f,e[s+12],7,1804603682),f=_(f,d,m,p,e[s+13],12,-40341101),p=_(p,f,d,m,e[s+14],17,-1502002290),m=_(m,p,f,d,e[s+15],22,1236535329),d=n(d,m,p,f,e[s+1],5,-165796510),f=n(f,d,m,p,e[s+6],9,-1069501632),p=n(p,f,d,m,e[s+11],14,643717713),m=n(m,p,f,d,e[s],20,-373897302),d=n(d,m,p,f,e[s+5],5,-701558691),f=n(f,d,m,p,e[s+10],9,38016083),p=n(p,f,d,m,e[s+15],14,-660478335),m=n(m,p,f,d,e[s+4],20,-405537848),d=n(d,m,p,f,e[s+9],5,568446438),f=n(f,d,m,p,e[s+14],9,-1019803690),p=n(p,f,d,m,e[s+3],14,-187363961),m=n(m,p,f,d,e[s+8],20,1163531501),d=n(d,m,p,f,e[s+13],5,-1444681467),f=n(f,d,m,p,e[s+2],9,-51403784),p=n(p,f,d,m,e[s+7],14,1735328473),m=n(m,p,f,d,e[s+12],20,-1926607734),d=i(d,m,p,f,e[s+5],4,-378558),f=i(f,d,m,p,e[s+8],11,-2022574463),p=i(p,f,d,m,e[s+11],16,1839030562),m=i(m,p,f,d,e[s+14],23,-35309556),d=i(d,m,p,f,e[s+1],4,-1530992060),f=i(f,d,m,p,e[s+4],11,1272893353),p=i(p,f,d,m,e[s+7],16,-155497632),m=i(m,p,f,d,e[s+10],23,-1094730640),d=i(d,m,p,f,e[s+13],4,681279174),f=i(f,d,m,p,e[s],11,-358537222),p=i(p,f,d,m,e[s+3],16,-722521979),m=i(m,p,f,d,e[s+6],23,76029189),d=i(d,m,p,f,e[s+9],4,-640364487),f=i(f,d,m,p,e[s+12],11,-421815835),p=i(p,f,d,m,e[s+15],16,530742520),m=i(m,p,f,d,e[s+2],23,-995338651),d=o(d,m,p,f,e[s],6,-198630844),f=o(f,d,m,p,e[s+7],10,1126891415),p=o(p,f,d,m,e[s+14],15,-1416354905),m=o(m,p,f,d,e[s+5],21,-57434055),d=o(d,m,p,f,e[s+12],6,1700485571),f=o(f,d,m,p,e[s+3],10,-1894986606),p=o(p,f,d,m,e[s+10],15,-1051523),m=o(m,p,f,d,e[s+1],21,-2054922799),d=o(d,m,p,f,e[s+8],6,1873313359),f=o(f,d,m,p,e[s+15],10,-30611744),p=o(p,f,d,m,e[s+6],15,-1560198380),m=o(m,p,f,d,e[s+13],21,1309151649),d=o(d,m,p,f,e[s+4],6,-145523070),f=o(f,d,m,p,e[s+11],10,-1120210379),p=o(p,f,d,m,e[s+2],15,718787259),m=o(m,p,f,d,e[s+9],21,-343485551),d=a(d,r),m=a(m,c),p=a(p,u),f=a(f,l);return[d,m,p,f]}(function(e){var t,s=[];for(s[(e.length>>2)-1]=void 0,t=0;t<s.length;t+=1)s[t]=0;var a=8*e.length;for(t=0;t<a;t+=8)s[t>>5]|=(255&e[t/8])<<t%32;return s}(e),8*e.length))}},5676:function(e,t,s){"use strict";var a=s(3363),r=s(2689);t.a=function(e,t,s){var _=t&&s||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var n=(e=e||{}).random||(e.rng||a.a)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t)for(var i=0;i<16;++i)t[_+i]=n[i];return t||Object(r.a)(n)}},5677:function(e,t,s){"use strict";var a=s(3364),r=s(5678),_=Object(a.a)("v5",80,r.a);t.a=_},5678:function(e,t,s){"use strict";function a(e,t,s,a){switch(e){case 0:return t&s^~t&a;case 1:return t^s^a;case 2:return t&s^t&a^s&a;case 3:return t^s^a}}function r(e,t){return e<<t|e>>>32-t}t.a=function(e){var t=[1518500249,1859775393,2400959708,3395469782],s=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof e){var _=unescape(encodeURIComponent(e));e=new Array(_.length);for(var n=0;n<_.length;n++)e[n]=_.charCodeAt(n)}e.push(128);var i=e.length/4+2,o=Math.ceil(i/16),c=new Array(o);for(n=0;n<o;n++){c[n]=new Array(16);for(var u=0;u<16;u++)c[n][u]=e[64*n+4*u]<<24|e[64*n+4*u+1]<<16|e[64*n+4*u+2]<<8|e[64*n+4*u+3]}for(c[o-1][14]=8*(e.length-1)/Math.pow(2,32),c[o-1][14]=Math.floor(c[o-1][14]),c[o-1][15]=8*(e.length-1)&4294967295,n=0;n<o;n++){for(var l=new Array(80),d=0;d<16;d++)l[d]=c[n][d];for(d=16;d<80;d++)l[d]=r(l[d-3]^l[d-8]^l[d-14]^l[d-16],1);var m=s[0],p=s[1],f=s[2],h=s[3],g=s[4];for(d=0;d<80;d++){var y=Math.floor(d/20),b=r(m,5)+a(y,p,f,h)+g+t[y]+l[d]>>>0;g=h,h=f,f=r(p,30)>>>0,p=m,m=b}s[0]=s[0]+m>>>0,s[1]=s[1]+p>>>0,s[2]=s[2]+f>>>0,s[3]=s[3]+h>>>0,s[4]=s[4]+g>>>0}return[s[0]>>24&255,s[0]>>16&255,s[0]>>8&255,255&s[0],s[1]>>24&255,s[1]>>16&255,s[1]>>8&255,255&s[1],s[2]>>24&255,s[2]>>16&255,s[2]>>8&255,255&s[2],s[3]>>24&255,s[3]>>16&255,s[3]>>8&255,255&s[3],s[4]>>24&255,s[4]>>16&255,s[4]>>8&255,255&s[4]]}}});